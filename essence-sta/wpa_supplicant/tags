!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-export-width	wpa_gui-qt4/icons/Makefile	/^		--export-width=$(word 1, $(subst x, , $(@)))  \\$/;"	m
ADDINTERFACE_H	wpa_gui-qt4/addinterface.h	10;"	d
AESOBJS	Android.mk	/^AESOBJS = # none so far (see below)$/;"	m
AESOBJS	Makefile	/^AESOBJS = # none so far (see below)$/;"	m
AFN_BUF_MAX_LEN	action_handler.h	5;"	d
AFN_SOCKNAME	action_handler.c	/^static const char AFN_SOCKNAME[] = "wpa_wipush";$/;"	v	file:
AKA_AUTN_LEN	eapol_test.c	992;"	d	file:
AKA_AUTS_LEN	eapol_test.c	993;"	d	file:
AKA_RAND_LEN	eapol_test.c	991;"	d	file:
ALL	Makefile	/^ALL = $(BINALL)$/;"	m
ALLOWED	p2p_supplicant.c	/^	NOT_ALLOWED, NO_IR, ALLOWED$/;"	e	enum:chan_allowed	file:
ANQP_DUP	bss.c	107;"	d	file:
ANQP_DUP	bss.c	88;"	d	file:
AP_H	ap.h	11;"	d
ARG_IN	dbus/dbus_new_helpers.h	/^enum dbus_arg_direction { ARG_IN, ARG_OUT };$/;"	e	enum:dbus_arg_direction
ARG_OUT	dbus/dbus_new_helpers.h	/^enum dbus_arg_direction { ARG_IN, ARG_OUT };$/;"	e	enum:dbus_arg_direction
AUTH_IEEE8021X	wpa_gui-qt4/networkconfig.cpp	/^	AUTH_IEEE8021X,$/;"	e	enum:__anon11	file:
AUTH_NONE_OPEN	wpa_gui-qt4/networkconfig.cpp	/^	AUTH_NONE_OPEN,$/;"	e	enum:__anon11	file:
AUTH_NONE_WEP	wpa_gui-qt4/networkconfig.cpp	/^	AUTH_NONE_WEP,$/;"	e	enum:__anon11	file:
AUTH_NONE_WEP_SHARED	wpa_gui-qt4/networkconfig.cpp	/^	AUTH_NONE_WEP_SHARED,$/;"	e	enum:__anon11	file:
AUTH_WPA2_EAP	wpa_gui-qt4/networkconfig.cpp	/^	AUTH_WPA2_EAP$/;"	e	enum:__anon11	file:
AUTH_WPA2_PSK	wpa_gui-qt4/networkconfig.cpp	/^	AUTH_WPA2_PSK,$/;"	e	enum:__anon11	file:
AUTH_WPA_EAP	wpa_gui-qt4/networkconfig.cpp	/^	AUTH_WPA_EAP,$/;"	e	enum:__anon11	file:
AUTH_WPA_PSK	wpa_gui-qt4/networkconfig.cpp	/^	AUTH_WPA_PSK,$/;"	e	enum:__anon11	file:
AUTOSCAN_H	autoscan.h	10;"	d
AUTO_PD_ASP	wpa_supplicant_i.h	/^		NORMAL_PD, AUTO_PD_GO_NEG, AUTO_PD_JOIN, AUTO_PD_ASP$/;"	e	enum:wpa_supplicant::__anon7
AUTO_PD_GO_NEG	wpa_supplicant_i.h	/^		NORMAL_PD, AUTO_PD_GO_NEG, AUTO_PD_JOIN, AUTO_PD_ASP$/;"	e	enum:wpa_supplicant::__anon7
AUTO_PD_JOIN	wpa_supplicant_i.h	/^		NORMAL_PD, AUTO_PD_GO_NEG, AUTO_PD_JOIN, AUTO_PD_ASP$/;"	e	enum:wpa_supplicant::__anon7
AddInterface	wpa_gui-qt4/addinterface.cpp	/^AddInterface::AddInterface(WpaGui *_wpagui, QWidget *parent)$/;"	f	class:AddInterface
AddInterface	wpa_gui-qt4/addinterface.h	/^class AddInterface : public QDialog$/;"	c
BCHECK	Makefile	/^BCHECK=..\/src\/drivers\/build.wpa_supplicant$/;"	m
BGSCAN_H	bgscan.h	10;"	d
BIN	config.c	4099;"	d	file:
BIN	config.c	4231;"	d	file:
BINALL	Makefile	/^BINALL=wpa_supplicant wpa_cli wpa_not$/;"	m
BINDIR	Makefile	/^export BINDIR ?= \/usr\/local\/sbin\/$/;"	m
BIN_ARRAY_CHUNK_SIZE	dbus/dbus_dict_helpers.c	814;"	d	file:
BIN_ARRAY_ITEM_SIZE	dbus/dbus_dict_helpers.c	815;"	d	file:
BLACKLIST_H	blacklist.h	10;"	d
BSS_H	bss.h	10;"	d
BW20	p2p_supplicant.c	/^	enum { BW20, BW40PLUS, BW40MINUS, BW80, BW2160 } bw;$/;"	e	enum:p2p_oper_class_map::__anon9	file:
BW2160	p2p_supplicant.c	/^	enum { BW20, BW40PLUS, BW40MINUS, BW80, BW2160 } bw;$/;"	e	enum:p2p_oper_class_map::__anon9	file:
BW40MINUS	p2p_supplicant.c	/^	enum { BW20, BW40PLUS, BW40MINUS, BW80, BW2160 } bw;$/;"	e	enum:p2p_oper_class_map::__anon9	file:
BW40PLUS	p2p_supplicant.c	/^	enum { BW20, BW40PLUS, BW40MINUS, BW80, BW2160 } bw;$/;"	e	enum:p2p_oper_class_map::__anon9	file:
BW80	p2p_supplicant.c	/^	enum { BW20, BW40PLUS, BW40MINUS, BW80, BW2160 } bw;$/;"	e	enum:p2p_oper_class_map::__anon9	file:
BYTE_ARRAY_CHUNK_SIZE	dbus/dbus_dict_helpers.c	686;"	d	file:
BYTE_ARRAY_ITEM_SIZE	dbus/dbus_dict_helpers.c	687;"	d	file:
BindingIndex	win_if_list.c	/^	ULONG BindingIndex;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:
C	p2p_supplicant.c	1841;"	d	file:
C	p2p_supplicant.c	1848;"	d	file:
CAPAB_HT	wpa_supplicant_i.h	/^		CAPAB_HT,$/;"	e	enum:wpa_supplicant::local_hw_capab
CAPAB_HT40	wpa_supplicant_i.h	/^		CAPAB_HT40,$/;"	e	enum:wpa_supplicant::local_hw_capab
CAPAB_NO_HT_VHT	wpa_supplicant_i.h	/^		CAPAB_NO_HT_VHT,$/;"	e	enum:wpa_supplicant::local_hw_capab
CAPAB_VHT	wpa_supplicant_i.h	/^		CAPAB_VHT,$/;"	e	enum:wpa_supplicant::local_hw_capab
CC	Makefile	/^CC=gcc$/;"	m
CC	dbus/Makefile	/^CC=gcc$/;"	m
CC	nmake.mak	/^CC = cl$/;"	m
CFG_CHANGED_CONFIG_METHODS	config.h	312;"	d
CFG_CHANGED_COUNTRY	config.h	316;"	d
CFG_CHANGED_DEVICE_NAME	config.h	311;"	d
CFG_CHANGED_DEVICE_TYPE	config.h	313;"	d
CFG_CHANGED_EXT_PW_BACKEND	config.h	325;"	d
CFG_CHANGED_NFC_PASSWORD_TOKEN	config.h	326;"	d
CFG_CHANGED_OS_VERSION	config.h	314;"	d
CFG_CHANGED_P2P_INTRA_BSS	config.h	320;"	d
CFG_CHANGED_P2P_LISTEN_CHANNEL	config.h	322;"	d
CFG_CHANGED_P2P_OPER_CHANNEL	config.h	323;"	d
CFG_CHANGED_P2P_PASSPHRASE_LEN	config.h	327;"	d
CFG_CHANGED_P2P_PREF_CHAN	config.h	324;"	d
CFG_CHANGED_P2P_SSID_POSTFIX	config.h	318;"	d
CFG_CHANGED_SEC_DEVICE_TYPE	config.h	317;"	d
CFG_CHANGED_UUID	config.h	315;"	d
CFG_CHANGED_VENDOR_EXTENSION	config.h	321;"	d
CFG_CHANGED_WPS_STRING	config.h	319;"	d
CFLAGS	Makefile	/^CFLAGS = -MMD -O2 -Wall -g$/;"	m
CFLAGS	dbus/Makefile	/^CFLAGS = -MMD -O2 -Wall -g$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DCONFIG_ANSI_C_EXTRA$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DCONFIG_CTRL_IFACE$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DCONFIG_CTRL_IFACE_NAMED_PIPE$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DCONFIG_DRIVER_NDIS$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DCONFIG_NDIS_EVENTS_INTEGRATED$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DCONFIG_WINPCAP$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_AKA$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_GTC$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_LEAP$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_MD5$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_MSCHAPv2$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_OTP$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_PAX$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_PEAP$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_PSK$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_SIM$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_TLS$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_TNC$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DEAP_TTLS$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DIEEE8021X_EAPOL$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DPCSC_FUNCS$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DPKCS12_FUNCS$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/DWIN32$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/D_CRT_SECURE_NO_DEPRECATE$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/Fo$(OBJDIR)\\\\ \/c$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/I"$(WINPCAPDIR)\/Include" \/I"$(OPENSSLDIR)\\include"$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/I.$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/I..\\src \/I..\\src\\utils$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = $(CFLAGS) \/W3$/;"	m
CFLAGS	nmake.mak	/^CFLAGS = \/DCONFIG_NATIVE_WINDOWS$/;"	m
CHAP	Android.mk	/^CHAP=y$/;"	m
CHAP	Makefile	/^CHAP=y$/;"	m
CK_LEN	eapol_test.c	996;"	d	file:
CLS_ACPT	mesh_mpm.c	/^	CLS_ACPT,$/;"	e	enum:plink_event	file:
CLS_IGNR	mesh_mpm.c	/^	CLS_IGNR$/;"	e	enum:plink_event	file:
CMDLINE	main_winmain.c	15;"	d	file:
CMDLINE	main_winmain.c	17;"	d	file:
CNF_ACPT	mesh_mpm.c	/^	CNF_ACPT,$/;"	e	enum:plink_event	file:
CNF_IGNR	mesh_mpm.c	/^	CNF_IGNR,$/;"	e	enum:plink_event	file:
CNF_RJCT	mesh_mpm.c	/^	CNF_RJCT,$/;"	e	enum:plink_event	file:
CONFIG_AP	Android.mk	/^CONFIG_AP=y$/;"	m
CONFIG_AP	Makefile	/^CONFIG_AP=y$/;"	m
CONFIG_BACKEND	Android.mk	/^CONFIG_BACKEND=file$/;"	m
CONFIG_BACKEND	Makefile	/^CONFIG_BACKEND=file$/;"	m
CONFIG_CRYPTO	Android.mk	/^CONFIG_CRYPTO=internal$/;"	m
CONFIG_CRYPTO	Makefile	/^CONFIG_CRYPTO=internal$/;"	m
CONFIG_CTRL_IFACE	Android.mk	/^CONFIG_CTRL_IFACE=named_pipe$/;"	m
CONFIG_CTRL_IFACE	Android.mk	/^CONFIG_CTRL_IFACE=udp$/;"	m
CONFIG_CTRL_IFACE	Android.mk	/^CONFIG_CTRL_IFACE=unix$/;"	m
CONFIG_CTRL_IFACE	Makefile	/^CONFIG_CTRL_IFACE=named_pipe$/;"	m
CONFIG_CTRL_IFACE	Makefile	/^CONFIG_CTRL_IFACE=udp$/;"	m
CONFIG_CTRL_IFACE	Makefile	/^CONFIG_CTRL_IFACE=unix$/;"	m
CONFIG_CTRL_IFACE_DIR	bk_wpa_not_disp.c	16;"	d	file:
CONFIG_CTRL_IFACE_DIR	hostapd_cli.c	96;"	d	file:
CONFIG_CTRL_IFACE_DIR	notifier.c	21;"	d	file:
CONFIG_CTRL_IFACE_DIR	wpa_cli.c	76;"	d	file:
CONFIG_CTRL_IFACE_DIR	wpa_not_disp.c	16;"	d	file:
CONFIG_EAP_MSCHAPV2	Android.mk	/^CONFIG_EAP_MSCHAPV2=y$/;"	m
CONFIG_EAP_MSCHAPV2	Makefile	/^CONFIG_EAP_MSCHAPV2=y$/;"	m
CONFIG_EAP_SIM_COMMON	Android.mk	/^CONFIG_EAP_SIM_COMMON=y$/;"	m
CONFIG_EAP_SIM_COMMON	Makefile	/^CONFIG_EAP_SIM_COMMON=y$/;"	m
CONFIG_ELOOP	Android.mk	/^CONFIG_ELOOP=eloop$/;"	m
CONFIG_ELOOP	Makefile	/^CONFIG_ELOOP=eloop$/;"	m
CONFIG_H	config.h	10;"	d
CONFIG_IEEE8021X_EAPOL	Android.mk	/^CONFIG_IEEE8021X_EAPOL=y$/;"	m
CONFIG_IEEE8021X_EAPOL	Makefile	/^CONFIG_IEEE8021X_EAPOL=y$/;"	m
CONFIG_INTERNAL_AES	Android.mk	/^CONFIG_INTERNAL_AES=y$/;"	m
CONFIG_INTERNAL_AES	Makefile	/^CONFIG_INTERNAL_AES=y$/;"	m
CONFIG_INTERNAL_DES	Android.mk	/^CONFIG_INTERNAL_DES=y$/;"	m
CONFIG_INTERNAL_DES	Makefile	/^CONFIG_INTERNAL_DES=y$/;"	m
CONFIG_INTERNAL_DH_GROUP5	Android.mk	/^CONFIG_INTERNAL_DH_GROUP5=y$/;"	m
CONFIG_INTERNAL_DH_GROUP5	Makefile	/^CONFIG_INTERNAL_DH_GROUP5=y$/;"	m
CONFIG_INTERNAL_MD4	Android.mk	/^CONFIG_INTERNAL_MD4=y$/;"	m
CONFIG_INTERNAL_MD4	Makefile	/^CONFIG_INTERNAL_MD4=y$/;"	m
CONFIG_INTERNAL_MD5	Android.mk	/^CONFIG_INTERNAL_MD5=y$/;"	m
CONFIG_INTERNAL_MD5	Makefile	/^CONFIG_INTERNAL_MD5=y$/;"	m
CONFIG_INTERNAL_RC4	Android.mk	/^CONFIG_INTERNAL_RC4=y$/;"	m
CONFIG_INTERNAL_RC4	Makefile	/^CONFIG_INTERNAL_RC4=y$/;"	m
CONFIG_INTERNAL_SHA1	Android.mk	/^CONFIG_INTERNAL_SHA1=y$/;"	m
CONFIG_INTERNAL_SHA1	Makefile	/^CONFIG_INTERNAL_SHA1=y$/;"	m
CONFIG_INTERNAL_SHA256	Android.mk	/^CONFIG_INTERNAL_SHA256=y$/;"	m
CONFIG_INTERNAL_SHA256	Makefile	/^CONFIG_INTERNAL_SHA256=y$/;"	m
CONFIG_INTERWORKING	Android.mk	/^CONFIG_INTERWORKING=y$/;"	m
CONFIG_INTERWORKING	Makefile	/^CONFIG_INTERWORKING=y$/;"	m
CONFIG_L2_PACKET	Android.mk	/^CONFIG_L2_PACKET=linux$/;"	m
CONFIG_L2_PACKET	Makefile	/^CONFIG_L2_PACKET=linux$/;"	m
CONFIG_MAIN	Android.mk	/^CONFIG_MAIN=main$/;"	m
CONFIG_MAIN	Makefile	/^CONFIG_MAIN=main$/;"	m
CONFIG_NO_RANDOM_POOL	Android.mk	/^CONFIG_NO_RANDOM_POOL=$/;"	m
CONFIG_NO_RANDOM_POOL	Makefile	/^CONFIG_NO_RANDOM_POOL=$/;"	m
CONFIG_OPENSSL_CMAC	Android.mk	/^CONFIG_OPENSSL_CMAC=y$/;"	m
CONFIG_OPENSSL_CMAC	Makefile	/^CONFIG_OPENSSL_CMAC=y$/;"	m
CONFIG_OS	Android.mk	/^CONFIG_OS=unix$/;"	m
CONFIG_OS	Android.mk	/^CONFIG_OS=win32$/;"	m
CONFIG_OS	Makefile	/^CONFIG_OS=unix$/;"	m
CONFIG_OS	Makefile	/^CONFIG_OS=win32$/;"	m
CONFIG_SAE	Android.mk	/^CONFIG_SAE=y$/;"	m
CONFIG_SAE	Makefile	/^CONFIG_SAE=y$/;"	m
CONFIG_SSID_H	config_ssid.h	10;"	d
CONFIG_TDLS_TESTING	Makefile	/^CONFIG_TDLS_TESTING=y$/;"	m
CONFIG_TLS	Android.mk	/^CONFIG_TLS=openssl$/;"	m
CONFIG_TLS	Makefile	/^CONFIG_TLS=openssl$/;"	m
CONFIG_WPS	Android.mk	/^CONFIG_WPS=y$/;"	m
CONFIG_WPS	Makefile	/^CONFIG_WPS=y$/;"	m
CONFIG_WPS_TESTING	Makefile	/^CONFIG_WPS_TESTING=y$/;"	m
CONFIG_WPS_UPNP	Android.mk	/^CONFIG_WPS_UPNP=y$/;"	m
CONFIG_WPS_UPNP	Makefile	/^CONFIG_WPS_UPNP=y$/;"	m
COOKIE_LEN	ctrl_iface_udp.c	20;"	d	file:
CTRL_IFACE_DBUS_H	dbus/dbus_old.h	10;"	d
CTRL_IFACE_DBUS_HANDLERS_H	dbus/dbus_old_handlers.h	10;"	d
CTRL_IFACE_DBUS_NEW_H	dbus/dbus_new.h	11;"	d
CTRL_IFACE_DBUS_NEW_HANDLERS_H	dbus/dbus_new_handlers.h	11;"	d
CTRL_IFACE_H	ctrl_iface.h	10;"	d
ConvertStringSecurityDescriptorToSecurityDescriptor	ctrl_iface_named_pipe.c	28;"	d	file:
ConvertStringSecurityDescriptorToSecurityDescriptor	ctrl_iface_named_pipe.c	31;"	d	file:
DBUS	Android.mk	/^DBUS=y$/;"	m
DBUS	Makefile	/^DBUS=y$/;"	m
DBUS_COMMON_H	dbus/dbus_common.h	12;"	d
DBUS_COMMON_I_H	dbus/dbus_common_i.h	12;"	d
DBUS_DICT_HELPERS_H	dbus/dbus_dict_helpers.h	10;"	d
DBUS_INCLUDE	Android.mk	/^DBUS_INCLUDE := $(shell $(PKG_CONFIG) --cflags dbus-1)$/;"	m
DBUS_INCLUDE	Makefile	/^DBUS_INCLUDE := $(shell $(PKG_CONFIG) --cflags dbus-1)$/;"	m
DBUS_INCLUDE	dbus/Makefile	/^DBUS_INCLUDE := $(shell $(PKG_CONFIG) --cflags dbus-1)$/;"	m
DBUS_LIBS	Android.mk	/^DBUS_LIBS := $(shell $(PKG_CONFIG) --libs dbus-1)$/;"	m
DBUS_LIBS	Makefile	/^DBUS_LIBS := $(shell $(PKG_CONFIG) --libs dbus-1)$/;"	m
DBUS_LIBS	dbus/Makefile	/^DBUS_LIBS := $(shell $(PKG_CONFIG) --libs dbus-1)$/;"	m
DBUS_NEW_HANDLERS_P2P_H	dbus/dbus_new_handlers_p2p.h	10;"	d
DBUS_OBJS	Android.mk	/^DBUS_OBJS ?= dbus\/dbus_dict_helpers.c$/;"	m
DBUS_OBJS	Makefile	/^DBUS_OBJS ?= dbus\/dbus_dict_helpers.o$/;"	m
DEFAULT_ACCESS_NETWORK_TYPE	config.h	30;"	d
DEFAULT_AMPDU_DENSITY	config_ssid.h	40;"	d
DEFAULT_AMPDU_FACTOR	config_ssid.h	39;"	d
DEFAULT_AP_SCAN	config.h	14;"	d
DEFAULT_AP_SCAN	config.h	16;"	d
DEFAULT_BG_SCAN_PERIOD	config_ssid.h	29;"	d
DEFAULT_BSS_EXPIRATION_AGE	config.h	27;"	d
DEFAULT_BSS_EXPIRATION_SCAN_COUNT	config.h	28;"	d
DEFAULT_BSS_MAX_COUNT	config.h	26;"	d
DEFAULT_CERT_IN_CB	config.h	35;"	d
DEFAULT_CKN_LEN	wpas_kay.c	26;"	d	file:
DEFAULT_DISABLE_HT	config_ssid.h	34;"	d
DEFAULT_DISABLE_HT40	config_ssid.h	35;"	d
DEFAULT_DISABLE_LDPC	config_ssid.h	37;"	d
DEFAULT_DISABLE_MAX_AMSDU	config_ssid.h	38;"	d
DEFAULT_DISABLE_SGI	config_ssid.h	36;"	d
DEFAULT_EAPOL_FLAGS	config_ssid.h	20;"	d
DEFAULT_EAPOL_VERSION	config.h	12;"	d
DEFAULT_EAP_WORKAROUND	config_ssid.h	19;"	d
DEFAULT_FAST_REAUTH	config.h	21;"	d
DEFAULT_FRAGMENT_SIZE	config_ssid.h	27;"	d
DEFAULT_GROUP	config_ssid.h	25;"	d
DEFAULT_KEY_LEN	wpas_kay.c	24;"	d	file:
DEFAULT_KEY_MGMT	config_ssid.h	23;"	d
DEFAULT_KEY_MGMT_OFFLOAD	config.h	34;"	d
DEFAULT_MAX_NUM_STA	config.h	29;"	d
DEFAULT_MAX_PEER_LINKS	config.h	19;"	d
DEFAULT_MESH_CONFIRM_TIMEOUT	config_ssid.h	32;"	d
DEFAULT_MESH_HOLDING_TIMEOUT	config_ssid.h	33;"	d
DEFAULT_MESH_MAX_INACTIVITY	config.h	20;"	d
DEFAULT_MESH_MAX_RETRIES	config_ssid.h	30;"	d
DEFAULT_MESH_RETRY_TIMEOUT	config_ssid.h	31;"	d
DEFAULT_NOISE_FLOOR_2GHZ	scan.c	1839;"	d	file:
DEFAULT_NOISE_FLOOR_5GHZ	scan.c	1840;"	d	file:
DEFAULT_P2P_GO_CTWINDOW	config.h	36;"	d
DEFAULT_P2P_GO_INTENT	config.h	22;"	d
DEFAULT_P2P_GO_MAX_INACTIVITY	config.h	24;"	d
DEFAULT_P2P_INTRA_BSS	config.h	23;"	d
DEFAULT_P2P_OPTIMIZE_LISTEN_CHAN	config.h	25;"	d
DEFAULT_P2P_SEARCH_DELAY	config.h	32;"	d
DEFAULT_PAIRWISE	config_ssid.h	24;"	d
DEFAULT_PROTO	config_ssid.h	22;"	d
DEFAULT_RAND_ADDR_LIFETIME	config.h	33;"	d
DEFAULT_SCAN_CUR_FREQ	config.h	31;"	d
DEFAULT_USER_MPM	config.h	18;"	d
DEFAULT_USER_SELECTED_SIM	config_ssid.h	41;"	d
DESOBJS	Android.mk	/^DESOBJS = # none needed when not internal$/;"	m
DESOBJS	Makefile	/^DESOBJS = # none needed when not internal$/;"	m
DNS_HEADER_LEN	p2p_supplicant.c	2396;"	d	file:
DRIVER_I_H	driver_i.h	10;"	d
DeviceDescrLength	win_if_list.c	/^	ULONG DeviceDescrLength;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:
DeviceDescrOffset	win_if_list.c	/^	ULONG DeviceDescrOffset;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:
DeviceNameLength	win_if_list.c	/^	ULONG DeviceNameLength;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:
DeviceNameOffset	win_if_list.c	/^	ULONG DeviceNameOffset;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:
E	Makefile	/^E=echo$/;"	m
E	Makefile	/^E=true$/;"	m
E	dbus/Makefile	/^E=echo$/;"	m
E	dbus/Makefile	/^E=true$/;"	m
EAPOL_FLAG_REQUIRE_KEY_BROADCAST	config_ssid.h	229;"	d
EAPOL_FLAG_REQUIRE_KEY_UNICAST	config_ssid.h	228;"	d
ECANCELED	wpa_supplicant.c	5380;"	d	file:
END_ARGS	dbus/dbus_new_helpers.h	50;"	d
ENOTCONN	wpa_supplicant.c	5378;"	d	file:
EOPNOTSUPP	wpa_supplicant.c	5379;"	d	file:
EVENTHISTORY_H	wpa_gui-qt4/eventhistory.h	10;"	d
ErrorMsg	wpa_gui-qt4/wpagui.cpp	/^ErrorMsg::ErrorMsg(QWidget *parent, DWORD last_err) :$/;"	f	class:ErrorMsg
ErrorMsg	wpa_gui-qt4/wpagui.cpp	/^class ErrorMsg : public QMessageBox {$/;"	c	file:
EventHistory	wpa_gui-qt4/eventhistory.cpp	/^EventHistory::EventHistory(QWidget *parent, const char *, bool, Qt::WFlags)$/;"	f	class:EventHistory
EventHistory	wpa_gui-qt4/eventhistory.h	/^class EventHistory : public QDialog, public Ui::EventHistory$/;"	c
EventListModel	wpa_gui-qt4/eventhistory.h	/^	EventListModel(QObject *parent = 0)$/;"	f	class:EventListModel
EventListModel	wpa_gui-qt4/eventhistory.h	/^class EventListModel : public QAbstractTableModel$/;"	c
FIPSDIR	Makefile	/^FIPSDIR=\/usr\/local\/ssl\/fips-2.0$/;"	m
FIPSLD	Makefile	/^FIPSLD=$(FIPSDIR)\/bin\/fipsld$/;"	m
FREQS_ALLOC_CHUNK	dbus/dbus_new_handlers.c	1202;"	d	file:
FSCTL_NDISUIO_BASE	win_if_list.c	25;"	d	file:
FUNC	config.c	1792;"	d	file:
FUNC	config.c	1979;"	d	file:
FUNC	config.c	4091;"	d	file:
FUNC	config.c	4224;"	d	file:
FUNC_KEY	config.c	1793;"	d	file:
FUNC_KEY	config.c	1980;"	d	file:
FUNC_NO_VAR	config.c	4092;"	d	file:
GAS_QUERY_CANCELLED	gas_query.h	/^	GAS_QUERY_CANCELLED,$/;"	e	enum:gas_query_result
GAS_QUERY_DELETED_AT_DEINIT	gas_query.h	/^	GAS_QUERY_DELETED_AT_DEINIT$/;"	e	enum:gas_query_result
GAS_QUERY_FAILURE	gas_query.h	/^	GAS_QUERY_FAILURE,$/;"	e	enum:gas_query_result
GAS_QUERY_H	gas_query.h	11;"	d
GAS_QUERY_INTERNAL_ERROR	gas_query.h	/^	GAS_QUERY_INTERNAL_ERROR,$/;"	e	enum:gas_query_result
GAS_QUERY_PEER_ERROR	gas_query.h	/^	GAS_QUERY_PEER_ERROR,$/;"	e	enum:gas_query_result
GAS_QUERY_SUCCESS	gas_query.h	/^	GAS_QUERY_SUCCESS,$/;"	e	enum:gas_query_result
GAS_QUERY_TIMEOUT	gas_query.h	/^	GAS_QUERY_TIMEOUT,$/;"	e	enum:gas_query_result
GAS_QUERY_TIMEOUT_PERIOD	gas_query.c	26;"	d	file:
GONegotiationFailure	examples/p2p/p2p_connect.py	/^def GONegotiationFailure(status):$/;"	f
GONegotiationSuccess	examples/p2p/p2p_connect.py	/^def GONegotiationSuccess(status):$/;"	f
GREAT_SNR	scan.c	1625;"	d	file:
GroupFinished	examples/p2p/p2p_disconnect.py	/^def GroupFinished(status, etc):$/;"	f
GroupStarted	examples/p2p/p2p_connect.py	/^def GroupStarted(properties):$/;"	f
GroupStarted	examples/p2p/p2p_group_add.py	/^def GroupStarted(properties):$/;"	f
HS20_SUPPLICANT_H	hs20_supplicant.h	9;"	d
HT_SEC_CHAN_ABOVE	wpa_supplicant_i.h	/^		       HT_SEC_CHAN_ABOVE,$/;"	e	enum:wpa_supplicant::__anon4::__anon5
HT_SEC_CHAN_BELOW	wpa_supplicant_i.h	/^		       HT_SEC_CHAN_BELOW } ht_sec_chan;$/;"	e	enum:wpa_supplicant::__anon4::__anon5
HT_SEC_CHAN_UNKNOWN	wpa_supplicant_i.h	/^		enum { HT_SEC_CHAN_UNKNOWN,$/;"	e	enum:wpa_supplicant::__anon4::__anon5
HWSIM_IP_LEN	ctrl_iface.c	7230;"	d	file:
HWSIM_PACKETLEN	ctrl_iface.c	7229;"	d	file:
HandoverServer	examples/p2p-nfc.py	/^class HandoverServer(nfc.handover.HandoverServer):$/;"	c
HandoverServer	examples/wps-nfc.py	/^class HandoverServer(nfc.handover.HandoverServer):$/;"	c
IBSS_RSN_AUTH_BY_US	ibss_rsn.h	19;"	d
IBSS_RSN_AUTH_EAPOL_BY_PEER	ibss_rsn.h	17;"	d
IBSS_RSN_AUTH_EAPOL_BY_US	ibss_rsn.h	21;"	d
IBSS_RSN_AUTH_NOT_AUTHENTICATED	ibss_rsn.h	15;"	d
IBSS_RSN_H	ibss_rsn.h	10;"	d
IBSS_RSN_REPORTED_PTK	ibss_rsn.h	27;"	d
IBSS_RSN_SET_PTK_AUTH	ibss_rsn.h	25;"	d
IBSS_RSN_SET_PTK_SUPP	ibss_rsn.h	23;"	d
ICONS	wpa_gui-qt4/icons/Makefile	/^ICONS := $(addsuffix .png, $(foreach name, $(NAMES), $(foreach size, $(SIZES), $(size)\/$(name))))$/;"	m
IK_LEN	eapol_test.c	995;"	d	file:
INCLUDES	Android.mk	/^INCLUDES = $(LOCAL_PATH)$/;"	m
INITIAL_SCAN_REQ	wpa_supplicant_i.h	/^		INITIAL_SCAN_REQ,$/;"	e	enum:wpa_supplicant::scan_req_type
INT	config.c	1778;"	d	file:
INT	config.c	1976;"	d	file:
INT	config.c	4094;"	d	file:
INT	config.c	4226;"	d	file:
INT	config_file.c	665;"	d	file:
INT	config_file.c	811;"	d	file:
INT	config_winreg.c	862;"	d	file:
INT	config_winreg.c	938;"	d	file:
INTERWORKING_3GPP	interworking.c	37;"	d	file:
INTERWORKING_3GPP	interworking.c	40;"	d	file:
INTERWORKING_3GPP	interworking.c	43;"	d	file:
INTERWORKING_H	interworking.h	10;"	d
INT_DEF	config_file.c	667;"	d	file:
INT_DEF	config_file.c	812;"	d	file:
INT_DEF	config_winreg.c	864;"	d	file:
INT_DEF	config_winreg.c	939;"	d	file:
INT_DEFe	config_file.c	668;"	d	file:
INT_DEFe	config_winreg.c	865;"	d	file:
INT_RANGE	config.c	1782;"	d	file:
INT_RANGE	config.c	1977;"	d	file:
INT_RANGE	config.c	4095;"	d	file:
INT_RANGE	config.c	4227;"	d	file:
INTe	config.c	1779;"	d	file:
INTe	config_file.c	666;"	d	file:
INTe	config_winreg.c	863;"	d	file:
IOCTL_NDISUIO_BIND_WAIT	win_if_list.c	34;"	d	file:
IOCTL_NDISUIO_QUERY_BINDING	win_if_list.c	30;"	d	file:
IPV4	config.c	4100;"	d	file:
IPV4	config.c	4232;"	d	file:
IS_5GHZ	scan.c	1627;"	d	file:
InvitationResult	examples/p2p/p2p_invite.py	/^def InvitationResult(invite_result):$/;"	f
ItemType	wpa_gui-qt4/peers.cpp	/^QString Peers::ItemType(int type)$/;"	f	class:Peers
LDO	Android.mk	/^LDO=$(CC)$/;"	m
LDO	Makefile	/^LDO=$(CC)$/;"	m
LFLAGS	nmake.mak	/^LFLAGS = \/libpath:"$(WINPCAPDIR)\\Lib" \/libpath:"$(OPENSSLDIR)\\lib"$/;"	m
LIBDIR	Makefile	/^export LIBDIR ?= \/usr\/local\/lib\/$/;"	m
LIBS	nmake.mak	/^LIBS = wbemuuid.lib libcmt.lib kernel32.lib uuid.lib ole32.lib oleaut32.lib \\$/;"	m
LIB_OBJS	dbus/Makefile	/^LIB_OBJS= \\$/;"	m
LOCAL_CFLAGS	Android.mk	/^LOCAL_CFLAGS := $(L_CFLAGS)$/;"	m
LOCAL_CFLAGS	Android.mk	/^LOCAL_CFLAGS = $(L_CFLAGS)$/;"	m
LOCAL_COPY_HEADERS	Android.mk	/^LOCAL_COPY_HEADERS := src\/common\/wpa_ctrl.h$/;"	m
LOCAL_COPY_HEADERS_TO	Android.mk	/^LOCAL_COPY_HEADERS_TO := libwpa_client$/;"	m
LOCAL_C_INCLUDES	Android.mk	/^LOCAL_C_INCLUDES := $(INCLUDES)$/;"	m
LOCAL_C_INCLUDES	Android.mk	/^LOCAL_C_INCLUDES = $(INCLUDES)$/;"	m
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := wpa_cli$/;"	m
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := wpa_supplicant$/;"	m
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE = libwpa_client$/;"	m
LOCAL_MODULE	wpa_supplicant_conf.mk	/^LOCAL_MODULE := wpa_supplicant.conf$/;"	m
LOCAL_MODULE_CLASS	wpa_supplicant_conf.mk	/^LOCAL_MODULE_CLASS := ETC$/;"	m
LOCAL_MODULE_PATH	wpa_supplicant_conf.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT_ETC)\/wifi$/;"	m
LOCAL_MODULE_TAGS	Android.mk	/^LOCAL_MODULE_TAGS := debug$/;"	m
LOCAL_MODULE_TAGS	wpa_supplicant_conf.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_PATH	Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	wpa_supplicant_conf.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SHARED_LIBRARIES	Android.mk	/^LOCAL_SHARED_LIBRARIES := libc libcutils liblog$/;"	m
LOCAL_SHARED_LIBRARIES	Android.mk	/^LOCAL_SHARED_LIBRARIES := libcutils liblog$/;"	m
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES := $(OBJS)$/;"	m
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES := $(OBJS_c)$/;"	m
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES = src\/common\/wpa_ctrl.c src\/utils\/os_$(CONFIG_OS).c$/;"	m
LOCAL_STATIC_LIBRARIES	Android.mk	/^LOCAL_STATIC_LIBRARIES := libCustomWifi$/;"	m
L_CFLAGS	Android.mk	/^L_CFLAGS = -DWPA_IGNORE_CONFIG_ERRORS$/;"	m
MAC_ADDR_RAND_ALL	wpa_supplicant_i.h	928;"	d
MAC_ADDR_RAND_PNO	wpa_supplicant_i.h	927;"	d
MAC_ADDR_RAND_SCAN	wpa_supplicant_i.h	925;"	d
MAC_ADDR_RAND_SCHED_SCAN	wpa_supplicant_i.h	926;"	d
MANUAL_SCAN_REQ	wpa_supplicant_i.h	/^		MANUAL_SCAN_REQ$/;"	e	enum:wpa_supplicant::scan_req_type
MAX_ANQP_INFO_ID	ctrl_iface.c	6031;"	d	file:
MAX_BSS	bgscan_learn.c	489;"	d	file:
MAX_SCAN_ID	wpa_supplicant_i.h	612;"	d
MAX_SEC_DEVICE_TYPES	config.h	687;"	d
MAX_SIG_LEN	dbus/dbus_new_helpers.c	117;"	d	file:
MAX_SSID_LEN	config_ssid.h	16;"	d
MAX_TFS_IE_LEN	wnm_sta.c	24;"	d	file:
MAX_WEP_KEY_LEN	config_ssid.h	242;"	d
MAX_WFD_SD_SUBELEMS	p2p_supplicant.c	3385;"	d	file:
MAX_WFD_SUBELEMS	wpa_supplicant_i.h	287;"	d
MAX_WPS_VENDOR_EXT	config.h	711;"	d
MD5OBJS	Android.mk	/^MD5OBJS =$/;"	m
MESH_AUTH_BLOCK_DURATION	mesh_rsn.c	30;"	d	file:
MESH_AUTH_RETRY	mesh_rsn.c	29;"	d	file:
MESH_AUTH_TIMEOUT	mesh_rsn.c	28;"	d	file:
MESH_H	mesh.h	10;"	d
MESH_MPM_H	mesh_mpm.h	10;"	d
MESH_RSN_H	mesh_rsn.h	10;"	d
MIN	scan.c	1633;"	d	file:
MIN	scan.c	1687;"	d	file:
MS_FUNCS	Android.mk	/^MS_FUNCS=y$/;"	m
MS_FUNCS	Makefile	/^MS_FUNCS=y$/;"	m
NAMED_PIPE_PREFIX	ctrl_iface_named_pipe.c	44;"	d	file:
NAMES	wpa_gui-qt4/icons/Makefile	/^NAMES := wpa_gui ap laptop group invitation$/;"	m
NDISUIO_QUERY_BINDING	win_if_list.c	/^} NDISUIO_QUERY_BINDING, *PNDISUIO_QUERY_BINDING;$/;"	t	typeref:struct:_NDISUIO_QUERY_BINDING	file:
NEED_80211_COMMON	Android.mk	/^NEED_80211_COMMON=y$/;"	m
NEED_80211_COMMON	Makefile	/^NEED_80211_COMMON=y$/;"	m
NEED_AES	Android.mk	/^NEED_AES=y$/;"	m
NEED_AES	Makefile	/^NEED_AES=y$/;"	m
NEED_AES_CBC	Android.mk	/^NEED_AES_CBC=y$/;"	m
NEED_AES_CBC	Makefile	/^NEED_AES_CBC=y$/;"	m
NEED_AES_CTR	Android.mk	/^NEED_AES_CTR=y$/;"	m
NEED_AES_CTR	Makefile	/^NEED_AES_CTR=y$/;"	m
NEED_AES_EAX	Android.mk	/^NEED_AES_EAX=y$/;"	m
NEED_AES_EAX	Makefile	/^NEED_AES_EAX=y$/;"	m
NEED_AES_ENC	Android.mk	/^NEED_AES_ENC=y$/;"	m
NEED_AES_ENC	Makefile	/^NEED_AES_ENC=y$/;"	m
NEED_AES_ENCBLOCK	Android.mk	/^NEED_AES_ENCBLOCK=y$/;"	m
NEED_AES_ENCBLOCK	Makefile	/^NEED_AES_ENCBLOCK=y$/;"	m
NEED_AES_OMAC1	Android.mk	/^NEED_AES_OMAC1=y$/;"	m
NEED_AES_OMAC1	Makefile	/^NEED_AES_OMAC1=y$/;"	m
NEED_AES_SIV	Android.mk	/^NEED_AES_SIV=y$/;"	m
NEED_AES_SIV	Makefile	/^NEED_AES_SIV=y$/;"	m
NEED_AES_UNWRAP	Makefile	/^NEED_AES_UNWRAP=y$/;"	m
NEED_AES_WRAP	Android.mk	/^NEED_AES_WRAP=y$/;"	m
NEED_AES_WRAP	Makefile	/^NEED_AES_WRAP=y$/;"	m
NEED_AP_MLME	Android.mk	/^NEED_AP_MLME=$/;"	m
NEED_AP_MLME	Makefile	/^NEED_AP_MLME=$/;"	m
NEED_AUTOSCAN	Android.mk	/^NEED_AUTOSCAN=y$/;"	m
NEED_AUTOSCAN	Makefile	/^NEED_AUTOSCAN=y$/;"	m
NEED_BASE64	Android.mk	/^NEED_BASE64=y$/;"	m
NEED_BASE64	Makefile	/^NEED_BASE64=y$/;"	m
NEED_BGSCAN	Android.mk	/^NEED_BGSCAN=y$/;"	m
NEED_BGSCAN	Makefile	/^NEED_BGSCAN=y$/;"	m
NEED_CIPHER	Android.mk	/^NEED_CIPHER=y$/;"	m
NEED_CIPHER	Makefile	/^NEED_CIPHER=y$/;"	m
NEED_DES	Android.mk	/^NEED_DES=y$/;"	m
NEED_DES	Makefile	/^NEED_DES=y$/;"	m
NEED_DH_GROUPS	Android.mk	/^NEED_DH_GROUPS=y$/;"	m
NEED_DH_GROUPS	Makefile	/^NEED_DH_GROUPS=y$/;"	m
NEED_DH_GROUPS_ALL	Android.mk	/^NEED_DH_GROUPS_ALL=y$/;"	m
NEED_DH_GROUPS_ALL	Makefile	/^NEED_DH_GROUPS_ALL=y$/;"	m
NEED_EAP_COMMON	Android.mk	/^NEED_EAP_COMMON=y$/;"	m
NEED_EAP_COMMON	Makefile	/^NEED_EAP_COMMON=y$/;"	m
NEED_ECC	Android.mk	/^NEED_ECC=y$/;"	m
NEED_ECC	Makefile	/^NEED_ECC=y$/;"	m
NEED_EXT_PASSWORD	Android.mk	/^NEED_EXT_PASSWORD=y$/;"	m
NEED_EXT_PASSWORD	Makefile	/^NEED_EXT_PASSWORD=y$/;"	m
NEED_FIPS186_2_PRF	Android.mk	/^NEED_FIPS186_2_PRF=y$/;"	m
NEED_FIPS186_2_PRF	Makefile	/^NEED_FIPS186_2_PRF=y$/;"	m
NEED_GAS	Android.mk	/^NEED_GAS=y$/;"	m
NEED_GAS	Makefile	/^NEED_GAS=y$/;"	m
NEED_HMAC_SHA256_KDF	Android.mk	/^NEED_HMAC_SHA256_KDF=y$/;"	m
NEED_HMAC_SHA256_KDF	Makefile	/^NEED_HMAC_SHA256_KDF=y$/;"	m
NEED_MD4	Android.mk	/^NEED_MD4=y$/;"	m
NEED_MD4	Makefile	/^NEED_MD4=y$/;"	m
NEED_MD5	Android.mk	/^NEED_MD5=y$/;"	m
NEED_MD5	Makefile	/^NEED_MD5=y$/;"	m
NEED_MILENAGE	Android.mk	/^NEED_MILENAGE=y$/;"	m
NEED_MILENAGE	Makefile	/^NEED_MILENAGE=y$/;"	m
NEED_MODEXP	Android.mk	/^NEED_MODEXP=y$/;"	m
NEED_MODEXP	Makefile	/^NEED_MODEXP=y$/;"	m
NEED_OFFCHANNEL	Android.mk	/^NEED_OFFCHANNEL=y$/;"	m
NEED_OFFCHANNEL	Makefile	/^NEED_OFFCHANNEL=y$/;"	m
NEED_RC4	Android.mk	/^NEED_RC4=y$/;"	m
NEED_RC4	Makefile	/^NEED_RC4=y$/;"	m
NEED_RSN_AUTHENTICATOR	Android.mk	/^NEED_RSN_AUTHENTICATOR=y$/;"	m
NEED_RSN_AUTHENTICATOR	Makefile	/^NEED_RSN_AUTHENTICATOR=y$/;"	m
NEED_SHA1	Android.mk	/^NEED_SHA1=y$/;"	m
NEED_SHA1	Makefile	/^NEED_SHA1=y$/;"	m
NEED_SHA256	Android.mk	/^NEED_SHA256=y$/;"	m
NEED_SHA256	Makefile	/^NEED_SHA256=y$/;"	m
NEED_SHA384	Android.mk	/^NEED_SHA384=y$/;"	m
NEED_SHA384	Makefile	/^NEED_SHA384=y$/;"	m
NEED_TLS_PRF	Android.mk	/^NEED_TLS_PRF=y$/;"	m
NEED_TLS_PRF	Makefile	/^NEED_TLS_PRF=y$/;"	m
NEED_TLS_PRF_SHA256	Android.mk	/^NEED_TLS_PRF_SHA256=y$/;"	m
NEED_TLS_PRF_SHA256	Makefile	/^NEED_TLS_PRF_SHA256=y$/;"	m
NEED_T_PRF	Android.mk	/^NEED_T_PRF=y$/;"	m
NEED_T_PRF	Makefile	/^NEED_T_PRF=y$/;"	m
NEED_WPS_OOB	Android.mk	/^NEED_WPS_OOB=y$/;"	m
NEED_WPS_OOB	Makefile	/^NEED_WPS_OOB=y$/;"	m
NETWORKCONFIG_H	wpa_gui-qt4/networkconfig.h	10;"	d
NORMAL_PD	wpa_supplicant_i.h	/^		NORMAL_PD, AUTO_PD_GO_NEG, AUTO_PD_JOIN, AUTO_PD_ASP$/;"	e	enum:wpa_supplicant::__anon7
NORMAL_SCAN_REQ	wpa_supplicant_i.h	/^		NORMAL_SCAN_REQ,$/;"	e	enum:wpa_supplicant::scan_req_type
NOTIFY_H	notify.h	10;"	d
NOT_ALLOWED	p2p_supplicant.c	/^	NOT_ALLOWED, NO_IR, ALLOWED$/;"	e	enum:chan_allowed	file:
NOT_P2P_GROUP_INTERFACE	wpa_supplicant_i.h	/^		NOT_P2P_GROUP_INTERFACE,$/;"	e	enum:wpa_supplicant::__anon6
NO_CONFIG_WRITE	config.c	22;"	d	file:
NO_IR	p2p_supplicant.c	/^	NOT_ALLOWED, NO_IR, ALLOWED$/;"	e	enum:chan_allowed	file:
NUM_GLOBAL_FIELDS	config.c	4233;"	d	file:
NUM_SSID_FIELDS	config.c	1981;"	d	file:
NUM_WEP_KEYS	config_ssid.h	241;"	d
NetworkConfig	wpa_gui-qt4/networkconfig.cpp	/^NetworkConfig::NetworkConfig(QWidget *parent, const char *, bool, Qt::WFlags)$/;"	f	class:NetworkConfig
NetworkConfig	wpa_gui-qt4/networkconfig.h	/^class NetworkConfig : public QDialog, public Ui::NetworkConfig$/;"	c
OBJDIR	nmake.mak	/^OBJDIR = objs$/;"	m
OBJS	Android.mk	/^OBJS = config.c$/;"	m
OBJS	Makefile	/^OBJS = config.o$/;"	m
OBJS	nmake.mak	/^OBJS = \\$/;"	m
OBJS2	nmake.mak	/^OBJS2 = $(OBJDIR)\\drivers.obj \\$/;"	m
OBJS3	nmake.mak	/^OBJS3 = $(OBJDIR)\\drivers.obj \\$/;"	m
OBJS_c	Android.mk	/^OBJS_c = wpa_cli.c src\/common\/wpa_ctrl.c$/;"	m
OBJS_c	Makefile	/^OBJS_c = wpa_cli.o ..\/src\/common\/wpa_ctrl.o$/;"	m
OBJS_c	nmake.mak	/^OBJS_c = \\$/;"	m
OBJS_d	Android.mk	/^OBJS_d =$/;"	m
OBJS_n	Makefile	/^OBJS_n = wpa_not_disp.o ..\/src\/common\/wpa_ctrl.o$/;"	m
OBJS_nfc	Makefile	/^OBJS_nfc := $(OBJS) $(OBJS_l2) nfc_pw_token.o$/;"	m
OBJS_p	Android.mk	/^OBJS_p = wpa_passphrase.c$/;"	m
OBJS_p	Makefile	/^OBJS_p = wpa_passphrase.o$/;"	m
OBJS_p	nmake.mak	/^OBJS_p = \\$/;"	m
OBJS_priv	Android.mk	/^OBJS_priv =$/;"	m
OBJS_t	Android.mk	/^OBJS_t := $(OBJS) $(OBJS_l2) eapol_test.c$/;"	m
OBJS_t	Makefile	/^OBJS_t := $(OBJS) $(OBJS_l2) eapol_test.o$/;"	m
OBJS_t	nmake.mak	/^OBJS_t = $(OBJS) \\$/;"	m
OBJS_t2	Android.mk	/^OBJS_t2 := $(OBJS) $(OBJS_l2) preauth_test.c$/;"	m
OBJS_t2	Makefile	/^OBJS_t2 := $(OBJS) $(OBJS_l2) preauth_test.o$/;"	m
OBJS_t2	nmake.mak	/^OBJS_t2 = $(OBJS) \\$/;"	m
OBJS_wpa	Android.mk	/^OBJS_wpa := $(filter-out $(OBJS_wpa_rm),$(OBJS)) $(OBJS_h) tests\/test_wpa.c$/;"	m
OBJS_wpa	Makefile	/^OBJS_wpa := $(filter-out $(OBJS_wpa_rm),$(OBJS)) $(OBJS_h) tests\/test_wpa.o$/;"	m
OBJS_wpa_rm	Android.mk	/^OBJS_wpa_rm := ctrl_iface.c ctrl_iface_unix.c$/;"	m
OBJS_wpa_rm	Makefile	/^OBJS_wpa_rm := ctrl_iface.o ctrl_iface_unix.o$/;"	m
OFFCHANNEL_H	offchannel.h	11;"	d
OFFCHANNEL_SEND_ACTION_FAILED	wpa_supplicant_i.h	/^	OFFCHANNEL_SEND_ACTION_FAILED \/**< Frame was not sent due to a failure$/;"	e	enum:offchannel_send_action_result
OFFCHANNEL_SEND_ACTION_NO_ACK	wpa_supplicant_i.h	/^	OFFCHANNEL_SEND_ACTION_NO_ACK \/**< Frame was sent, but not acknowledged$/;"	e	enum:offchannel_send_action_result
OFFCHANNEL_SEND_ACTION_SUCCESS	wpa_supplicant_i.h	/^	OFFCHANNEL_SEND_ACTION_SUCCESS \/**< Frame was send and acknowledged *\/,$/;"	e	enum:offchannel_send_action_result
OFFSET	config.c	1734;"	d	file:
OFFSET	config.c	1737;"	d	file:
OFFSET	config.c	1965;"	d	file:
OFFSET	config.c	4086;"	d	file:
OFFSET	config.c	4089;"	d	file:
ONFIG_DRIVER_HOSTAP	Makefile	/^	echo CONFIG_DRIVER_HOSTAP=y >> .config$/;"	m
ONFIG_DRIVER_WEXT	Makefile	/^	echo CONFIG_DRIVER_WEXT=y >> .config$/;"	m
OPENSSLDIR	nmake.mak	/^OPENSSLDIR=C:\\dev\\openssl$/;"	m
OPN_ACPT	mesh_mpm.c	/^	OPN_ACPT,$/;"	e	enum:plink_event	file:
OPN_IGNR	mesh_mpm.c	/^	OPN_IGNR,$/;"	e	enum:plink_event	file:
OPN_RJCT	mesh_mpm.c	/^	OPN_RJCT,$/;"	e	enum:plink_event	file:
OSU_MAX_ITEMS	hs20_supplicant.c	30;"	d	file:
OVERRIDE_MCS	wpa_supplicant.c	3521;"	d	file:
P2P_AUTO_PD_SCAN_ATTEMPTS	p2p_supplicant.c	48;"	d	file:
P2P_Connect	examples/p2p/p2p_connect.py	/^class P2P_Connect():$/;"	c
P2P_Disconnect	examples/p2p/p2p_disconnect.py	/^class P2P_Disconnect (threading.Thread):$/;"	c
P2P_Find	examples/p2p/p2p_find.py	/^class P2P_Find (threading.Thread):$/;"	c
P2P_Flush	examples/p2p/p2p_flush.py	/^class P2P_Flush (threading.Thread):$/;"	c
P2P_GROUP_INTERFACE_CLIENT	wpa_supplicant_i.h	/^		P2P_GROUP_INTERFACE_CLIENT$/;"	e	enum:wpa_supplicant::__anon6
P2P_GROUP_INTERFACE_GO	wpa_supplicant_i.h	/^		P2P_GROUP_INTERFACE_GO,$/;"	e	enum:wpa_supplicant::__anon6
P2P_GROUP_INTERFACE_PENDING	wpa_supplicant_i.h	/^		P2P_GROUP_INTERFACE_PENDING,$/;"	e	enum:wpa_supplicant::__anon6
P2P_GROUP_REMOVAL_FORMATION_FAILED	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_FORMATION_FAILED,$/;"	e	enum:p2p_group_removal_reason	file:
P2P_GROUP_REMOVAL_FREQ_CONFLICT	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_FREQ_CONFLICT$/;"	e	enum:p2p_group_removal_reason	file:
P2P_GROUP_REMOVAL_GO_ENDING_SESSION	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_GO_ENDING_SESSION,$/;"	e	enum:p2p_group_removal_reason	file:
P2P_GROUP_REMOVAL_IDLE_TIMEOUT	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_IDLE_TIMEOUT,$/;"	e	enum:p2p_group_removal_reason	file:
P2P_GROUP_REMOVAL_PSK_FAILURE	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_PSK_FAILURE,$/;"	e	enum:p2p_group_removal_reason	file:
P2P_GROUP_REMOVAL_REQUESTED	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_REQUESTED,$/;"	e	enum:p2p_group_removal_reason	file:
P2P_GROUP_REMOVAL_SILENT	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_SILENT,$/;"	e	enum:p2p_group_removal_reason	file:
P2P_GROUP_REMOVAL_UNAVAILABLE	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_UNAVAILABLE,$/;"	e	enum:p2p_group_removal_reason	file:
P2P_GROUP_REMOVAL_UNKNOWN	p2p_supplicant.c	/^	P2P_GROUP_REMOVAL_UNKNOWN,$/;"	e	enum:p2p_group_removal_reason	file:
P2P_Group_Add	examples/p2p/p2p_group_add.py	/^class P2P_Group_Add (threading.Thread):$/;"	c
P2P_Invite	examples/p2p/p2p_invite.py	/^class P2P_Invite (threading.Thread):$/;"	c
P2P_Listen	examples/p2p/p2p_listen.py	/^class P2P_Listen(threading.Thread):$/;"	c
P2P_MAX_CLIENT_IDLE	p2p_supplicant.c	55;"	d	file:
P2P_MAX_INITIAL_CONN_WAIT	p2p_supplicant.c	64;"	d	file:
P2P_MAX_INITIAL_CONN_WAIT_GO	p2p_supplicant.c	74;"	d	file:
P2P_MAX_INITIAL_CONN_WAIT_GO_REINVOKE	p2p_supplicant.c	83;"	d	file:
P2P_MAX_JOIN_SCAN_ATTEMPTS	p2p_supplicant.c	46;"	d	file:
P2P_MAX_STORED_CLIENTS	config_ssid.h	511;"	d
P2P_MGMT_DEVICE_PREFIX	p2p_supplicant.c	86;"	d	file:
P2P_SD_IN_MEMORY_LEN	p2p_supplicant.c	2402;"	d	file:
P2P_SUPPLICANT_H	p2p_supplicant.h	10;"	d
P2P_Stop_Find	examples/p2p/p2p_stop_find.py	/^class P2P_Stop_Find (threading.Thread):$/;"	c
PARAM_IN_RANGE	wmm_ac.c	383;"	d	file:
PARAM_IN_RANGE	wmm_ac.c	394;"	d	file:
PEERS_H	wpa_gui-qt4/peers.h	10;"	d
PEER_TYPE_AP	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_AP,$/;"	e	enum:peer_type	file:
PEER_TYPE_AP_WPS	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_AP_WPS,$/;"	e	enum:peer_type	file:
PEER_TYPE_ASSOCIATED_STATION	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_ASSOCIATED_STATION,$/;"	e	enum:peer_type	file:
PEER_TYPE_P2P	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_P2P,$/;"	e	enum:peer_type	file:
PEER_TYPE_P2P_CLIENT	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_P2P_CLIENT,$/;"	e	enum:peer_type	file:
PEER_TYPE_P2P_GROUP	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_P2P_GROUP,$/;"	e	enum:peer_type	file:
PEER_TYPE_P2P_INVITATION	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_P2P_INVITATION,$/;"	e	enum:peer_type	file:
PEER_TYPE_P2P_PERSISTENT_GROUP_CLIENT	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_P2P_PERSISTENT_GROUP_CLIENT,$/;"	e	enum:peer_type	file:
PEER_TYPE_P2P_PERSISTENT_GROUP_GO	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_P2P_PERSISTENT_GROUP_GO,$/;"	e	enum:peer_type	file:
PEER_TYPE_WPS_ENROLLEE	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_WPS_ENROLLEE$/;"	e	enum:peer_type	file:
PEER_TYPE_WPS_ER_AP	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_WPS_ER_AP,$/;"	e	enum:peer_type	file:
PEER_TYPE_WPS_ER_AP_UNCONFIGURED	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_WPS_ER_AP_UNCONFIGURED,$/;"	e	enum:peer_type	file:
PEER_TYPE_WPS_ER_ENROLLEE	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_WPS_ER_ENROLLEE,$/;"	e	enum:peer_type	file:
PEER_TYPE_WPS_PIN_NEEDED	wpa_gui-qt4/peers.cpp	/^	PEER_TYPE_WPS_PIN_NEEDED,$/;"	e	enum:peer_type	file:
PKG_CONFIG	Android.mk	/^PKG_CONFIG ?= pkg-config$/;"	m
PKG_CONFIG	Makefile	/^PKG_CONFIG ?= pkg-config$/;"	m
PKG_CONFIG	dbus/Makefile	/^PKG_CONFIG ?= pkg-config$/;"	m
PLINK_UNDEFINED	mesh_mpm.c	/^	PLINK_UNDEFINED,$/;"	e	enum:plink_event	file:
PNDISUIO_QUERY_BINDING	win_if_list.c	/^} NDISUIO_QUERY_BINDING, *PNDISUIO_QUERY_BINDING;$/;"	t	typeref:struct:_NDISUIO_QUERY_BINDING	file:
PRIVATE_WIFI_DRIVER_SOCKET_IFACE	wpa_supplicant_conf.mk	/^$(LOCAL_BUILT_MODULE): PRIVATE_WIFI_DRIVER_SOCKET_IFACE := $(WIFI_DRIVER_SOCKET_IFACE)$/;"	m
PRIVATE_WPA_SUPPLICANT_CONF_SCRIPT	wpa_supplicant_conf.mk	/^$(LOCAL_BUILT_MODULE): PRIVATE_WPA_SUPPLICANT_CONF_SCRIPT := $(WPA_SUPPLICANT_CONF_SCRIPT)$/;"	m
PRIVATE_WPA_SUPPLICANT_CONF_TEMPLATE	wpa_supplicant_conf.mk	/^$(LOCAL_BUILT_MODULE): PRIVATE_WPA_SUPPLICANT_CONF_TEMPLATE := $(WPA_SUPPLICANT_CONF_TEMPLATE)$/;"	m
Peers	wpa_gui-qt4/peers.cpp	/^Peers::Peers(QWidget *parent, const char *, bool, Qt::WFlags)$/;"	f	class:Peers
Peers	wpa_gui-qt4/peers.h	/^class Peers : public QDialog, public Ui::Peers$/;"	c
ProbeRequest	examples/dbus-listen-preq.py	/^def ProbeRequest(args):$/;"	f
Q	Makefile	/^Q=$/;"	m
Q	Makefile	/^Q=@$/;"	m
Q	dbus/Makefile	/^Q=$/;"	m
Q	dbus/Makefile	/^Q=@$/;"	m
REPLY_BUFSIZE	ctrl_iface_named_pipe.c	49;"	d	file:
REQUEST_BUFSIZE	ctrl_iface_named_pipe.c	48;"	d	file:
RES_MAX_LEN	eapol_test.c	994;"	d	file:
RRM_NEIGHBOR_REPORT_TIMEOUT	wpa_supplicant_i.h	388;"	d
SCANRESULTSITEM_H	wpa_gui-qt4/scanresultsitem.h	10;"	d
SCANRESULTS_H	wpa_gui-qt4/scanresults.h	10;"	d
SCAN_H	scan.h	10;"	d
SCKNAME	notifier.c	/^static const char SCKNAME[] = "notification";$/;"	v	file:
SDDL_REVISION_1	ctrl_iface_named_pipe.c	22;"	d	file:
SEL_METHOD_NONE	wpa_gui-qt4/peers.cpp	/^	SEL_METHOD_NONE,$/;"	e	enum:selected_method	file:
SEL_METHOD_PIN_LOCAL_DISPLAY	wpa_gui-qt4/peers.cpp	/^	SEL_METHOD_PIN_LOCAL_DISPLAY$/;"	e	enum:selected_method	file:
SEL_METHOD_PIN_PEER_DISPLAY	wpa_gui-qt4/peers.cpp	/^	SEL_METHOD_PIN_PEER_DISPLAY,$/;"	e	enum:selected_method	file:
SET_FREQ_SETTING	ctrl_iface.c	700;"	d	file:
SET_FREQ_SETTING	ctrl_iface.c	713;"	d	file:
SHA1OBJS	Android.mk	/^SHA1OBJS =$/;"	m
SHA256OBJS	Android.mk	/^SHA256OBJS = # none by default$/;"	m
SHA256OBJS	Makefile	/^SHA256OBJS = # none by default$/;"	m
SIGNALBAR_H	wpa_gui-qt4/signalbar.h	10;"	d
SIGPOLL	dbus/dbus_common.c	29;"	d	file:
SIZES	wpa_gui-qt4/icons/Makefile	/^SIZES := 16x16 22x22 32x32 48x48 64x64 128x128$/;"	m
SME_ASSOC_TIMEOUT	sme.c	33;"	d	file:
SME_AUTH_TIMEOUT	sme.c	32;"	d	file:
SME_H	sme.h	10;"	d
STR	config.c	1747;"	d	file:
STR	config.c	1967;"	d	file:
STR	config.c	4097;"	d	file:
STR	config.c	4229;"	d	file:
STR	config_file.c	664;"	d	file:
STR	config_file.c	810;"	d	file:
STR	config_winreg.c	861;"	d	file:
STR	config_winreg.c	937;"	d	file:
STRINGQUERY_H	wpa_gui-qt4/stringquery.h	10;"	d
STR_ARRAY_CHUNK_SIZE	dbus/dbus_dict_helpers.c	743;"	d	file:
STR_ARRAY_ITEM_SIZE	dbus/dbus_dict_helpers.c	744;"	d	file:
STR_KEY	config.c	1749;"	d	file:
STR_KEY	config.c	1968;"	d	file:
STR_KEYe	config.c	1750;"	d	file:
STR_LEN	config.c	1757;"	d	file:
STR_LEN	config.c	1970;"	d	file:
STR_LEN_KEY	config.c	1759;"	d	file:
STR_LEN_KEY	config.c	1971;"	d	file:
STR_LENe	config.c	1758;"	d	file:
STR_RANGE	config.c	1764;"	d	file:
STR_RANGE	config.c	1973;"	d	file:
STR_RANGE	config.c	4098;"	d	file:
STR_RANGE	config.c	4230;"	d	file:
STR_RANGE_KEY	config.c	1765;"	d	file:
STR_RANGE_KEY	config.c	1974;"	d	file:
STRe	config.c	1748;"	d	file:
ScanResults	wpa_gui-qt4/scanresults.cpp	/^ScanResults::ScanResults(QWidget *parent, const char *, bool, Qt::WFlags)$/;"	f	class:ScanResults
ScanResults	wpa_gui-qt4/scanresults.h	/^class ScanResults : public QDialog, public Ui::ScanResults$/;"	c
ScanResultsItem	wpa_gui-qt4/scanresultsitem.h	/^	ScanResultsItem(QTreeWidget *tree) : QTreeWidgetItem(tree) {}$/;"	f	class:ScanResultsItem
ScanResultsItem	wpa_gui-qt4/scanresultsitem.h	/^class ScanResultsItem : public QTreeWidgetItem$/;"	c
SignalBar	wpa_gui-qt4/signalbar.cpp	/^SignalBar::SignalBar(QObject *parent)$/;"	f	class:SignalBar
SignalBar	wpa_gui-qt4/signalbar.h	/^class SignalBar : public QStyledItemDelegate$/;"	c
StringQuery	wpa_gui-qt4/stringquery.cpp	/^StringQuery::StringQuery(QString label)$/;"	f	class:StringQuery
StringQuery	wpa_gui-qt4/stringquery.h	/^class StringQuery : public QDialog$/;"	c
TBUFLEN	main_winsvc.c	65;"	d	file:
TEST_EAP_SIM_COMMON_OBJS	Makefile	/^TEST_EAP_SIM_COMMON_OBJS = $(SHA1OBJS) $(MD5OBJS) \\$/;"	m
TLS_FUNCS	Android.mk	/^TLS_FUNCS=y$/;"	m
TLS_FUNCS	Makefile	/^TLS_FUNCS=y$/;"	m
TNAMELEN	config_winreg.c	66;"	d	file:
TSTR	config_winreg.c	44;"	d	file:
TSTR	config_winreg.c	46;"	d	file:
TSTR	main_winsvc.c	55;"	d	file:
TSTR	main_winsvc.c	57;"	d	file:
TS_DIR_IDX_ALL	wmm_ac.h	78;"	d
TS_DIR_IDX_BIDI	wmm_ac.h	/^	TS_DIR_IDX_BIDI,$/;"	e	enum:ts_dir_idx
TS_DIR_IDX_COUNT	wmm_ac.h	/^	TS_DIR_IDX_COUNT$/;"	e	enum:ts_dir_idx
TS_DIR_IDX_DOWNLINK	wmm_ac.h	/^	TS_DIR_IDX_DOWNLINK,$/;"	e	enum:ts_dir_idx
TS_DIR_IDX_UPLINK	wmm_ac.h	/^	TS_DIR_IDX_UPLINK,$/;"	e	enum:ts_dir_idx
USERDATAREQUEST_H	wpa_gui-qt4/userdatarequest.h	10;"	d
UserDataRequest	wpa_gui-qt4/userdatarequest.cpp	/^UserDataRequest::UserDataRequest(QWidget *parent, const char *, bool,$/;"	f	class:UserDataRequest
UserDataRequest	wpa_gui-qt4/userdatarequest.h	/^class UserDataRequest : public QDialog, public Ui::UserDataRequest$/;"	c
WIFI_DISPLAY_H	wifi_display.h	11;"	d
WIFI_DISPLAY_SUBELEM_HEADER_LEN	wifi_display.c	19;"	d	file:
WILDCARD_SSID_SCAN	wpa_supplicant_i.h	500;"	d
WINALL	Makefile	/^WINALL=wpa_supplicant.exe wpa_cli.exe wpa_passphrase.exe win_if_list.exe$/;"	m
WINPCAPDIR	nmake.mak	/^WINPCAPDIR=C:\\dev\\WpdPack$/;"	m
WIPUSHSOCKNAME	bk_wpa_not_disp.c	/^static const char WIPUSHSOCKNAME[] = "@android:wpa_wipush";$/;"	v	file:
WIPUSHSOCKNAME	bk_wpa_not_disp.c	/^static const char WIPUSHSOCKNAME[] = "wpa_wipush";$/;"	v	file:
WIPUSHSOCKNAME	wpa_not_disp.c	/^static const char WIPUSHSOCKNAME[] = "@android:wpa_wipush";$/;"	v	file:
WIPUSHSOCKNAME	wpa_not_disp.c	/^static const char WIPUSHSOCKNAME[] = "wpa_wipush";$/;"	v	file:
WLAN_ACTION_PUBLIC_FIELD_VALUE	action_handler.h	3;"	d
WLAN_ACTION_PUBLIC_RESERVED_IE	action_handler.h	4;"	d
WMM_AC_ACCESS_POLICY_EDCA	wmm_ac.h	18;"	d
WMM_AC_DIR_BIDIRECTIONAL	wmm_ac.h	/^	WMM_AC_DIR_BIDIRECTIONAL = 3$/;"	e	enum:wmm_ac_dir
WMM_AC_DIR_DOWNLINK	wmm_ac.h	/^	WMM_AC_DIR_DOWNLINK = 1,$/;"	e	enum:wmm_ac_dir
WMM_AC_DIR_UPLINK	wmm_ac.h	/^	WMM_AC_DIR_UPLINK = 0,$/;"	e	enum:wmm_ac_dir
WMM_AC_FIXED_MSDU_SIZE	wmm_ac.h	19;"	d
WMM_AC_H	wmm_ac.h	11;"	d
WMM_AC_MAX_NOMINAL_MSDU	wmm_ac.h	24;"	d
WMM_AC_MAX_TID	wmm_ac.h	21;"	d
WMM_AC_MAX_USER_PRIORITY	wmm_ac.h	22;"	d
WMM_AC_MIN_SBA_UNITY	wmm_ac.h	23;"	d
WNM_MAX_NEIGHBOR_REPORT	wnm_sta.c	25;"	d	file:
WNM_STA_H	wnm_sta.h	10;"	d
WPADBusArgumentFreeFunction	dbus/dbus_new_helpers.h	/^typedef void (*WPADBusArgumentFreeFunction)(void *handler_arg);$/;"	t
WPADBusMethodHandler	dbus/dbus_new_helpers.h	/^typedef DBusMessage * (*WPADBusMethodHandler)(DBusMessage *message,$/;"	t
WPADBusPropertyAccessor	dbus/dbus_new_helpers.h	/^typedef dbus_bool_t (*WPADBusPropertyAccessor)(DBusMessageIter *iter,$/;"	t
WPAGUI_H	wpa_gui-qt4/wpagui.h	10;"	d
WPAMSG_H	wpa_gui-qt4/wpamsg.h	10;"	d
WPASVC_DESCRIPTION	main_winsvc.c	37;"	d	file:
WPASVC_DISPLAY_NAME	main_winsvc.c	34;"	d	file:
WPASVC_NAME	main_winsvc.c	31;"	d	file:
WPASVC_NAME	wpa_gui-qt4/wpagui.cpp	1615;"	d	file:
WPAS_DBUS_AUTH_MODE_MAX	dbus/dbus_new_helpers.h	98;"	d
WPAS_DBUS_BSSIDS_PART	dbus/dbus_old.h	28;"	d
WPAS_DBUS_BSSID_FORMAT	dbus/dbus_old.h	66;"	d
WPAS_DBUS_BSSID_INTERFACE	examples/wpas-test.py	/^WPAS_DBUS_BSSID_INTERFACE = "fi.epitest.hostap.WPASupplicant.BSSID"$/;"	v
WPAS_DBUS_BSS_INTERFACE	examples/wpas-dbus-new-signals.py	/^WPAS_DBUS_BSS_INTERFACE = "fi.w1.wpa_supplicant1.BSS"$/;"	v
WPAS_DBUS_BSS_INTERFACE	examples/wpas-dbus-new.py	/^WPAS_DBUS_BSS_INTERFACE = "fi.w1.wpa_supplicant1.BSS"$/;"	v
WPAS_DBUS_BSS_PROP_AGE	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_AGE,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_FREQ	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_FREQ,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_IES	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_IES,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_MODE	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_MODE,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_PRIVACY	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_PRIVACY,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_RATES	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_RATES,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_RSN	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_RSN,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_SIGNAL	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_SIGNAL,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_WPA	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_WPA,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_BSS_PROP_WPS	dbus/dbus_new.h	/^	WPAS_DBUS_BSS_PROP_WPS,$/;"	e	enum:wpas_dbus_bss_prop
WPAS_DBUS_ERROR_BLOB_EXISTS	dbus/dbus_new.h	108;"	d
WPAS_DBUS_ERROR_BLOB_UNKNOWN	dbus/dbus_new.h	110;"	d
WPAS_DBUS_ERROR_CONNECT_CHANNEL_UNAVAILABLE	dbus/dbus_new.h	101;"	d
WPAS_DBUS_ERROR_CONNECT_CHANNEL_UNSUPPORTED	dbus/dbus_new.h	103;"	d
WPAS_DBUS_ERROR_CONNECT_UNSPECIFIED_ERROR	dbus/dbus_new.h	105;"	d
WPAS_DBUS_ERROR_IFACE_DISABLED	dbus/dbus_new.h	91;"	d
WPAS_DBUS_ERROR_IFACE_EXISTS	dbus/dbus_new.h	89;"	d
WPAS_DBUS_ERROR_IFACE_SCAN_ERROR	dbus/dbus_new.h	121;"	d
WPAS_DBUS_ERROR_IFACE_UNKNOWN	dbus/dbus_new.h	93;"	d
WPAS_DBUS_ERROR_INVALID_ARGS	dbus/dbus_new.h	86;"	d
WPAS_DBUS_ERROR_NETWORK_UNKNOWN	dbus/dbus_new.h	98;"	d
WPAS_DBUS_ERROR_NOT_CONNECTED	dbus/dbus_new.h	96;"	d
WPAS_DBUS_ERROR_NO_SUBSCRIPTION	dbus/dbus_new.h	115;"	d
WPAS_DBUS_ERROR_SUBSCRIPTION_EPERM	dbus/dbus_new.h	117;"	d
WPAS_DBUS_ERROR_SUBSCRIPTION_IN_USE	dbus/dbus_new.h	113;"	d
WPAS_DBUS_ERROR_UNKNOWN_ERROR	dbus/dbus_new.h	84;"	d
WPAS_DBUS_IFACE_BSSID	dbus/dbus_old.h	29;"	d
WPAS_DBUS_IFACE_INTERFACE	dbus/dbus_old.h	23;"	d
WPAS_DBUS_IFACE_NETWORK	dbus/dbus_old.h	26;"	d
WPAS_DBUS_INTERFACE	dbus/dbus_old.h	20;"	d
WPAS_DBUS_INTERFACE	examples/dbus-listen-preq.py	/^WPAS_DBUS_INTERFACE = "fi.w1.wpa_supplicant1"$/;"	v
WPAS_DBUS_INTERFACE	examples/wpas-dbus-new-signals.py	/^WPAS_DBUS_INTERFACE = "fi.w1.wpa_supplicant1"$/;"	v
WPAS_DBUS_INTERFACE	examples/wpas-dbus-new-wps.py	/^WPAS_DBUS_INTERFACE = "fi.w1.wpa_supplicant1"$/;"	v
WPAS_DBUS_INTERFACE	examples/wpas-dbus-new.py	/^WPAS_DBUS_INTERFACE = "fi.w1.wpa_supplicant1"$/;"	v
WPAS_DBUS_INTERFACE	examples/wpas-test.py	/^WPAS_DBUS_INTERFACE = "fi.epitest.hostap.WPASupplicant"$/;"	v
WPAS_DBUS_INTERFACES_INTERFACE	examples/dbus-listen-preq.py	/^WPAS_DBUS_INTERFACES_INTERFACE = "fi.w1.wpa_supplicant1.Interface"$/;"	v
WPAS_DBUS_INTERFACES_INTERFACE	examples/wpas-dbus-new-signals.py	/^WPAS_DBUS_INTERFACES_INTERFACE = "fi.w1.wpa_supplicant1.Interface"$/;"	v
WPAS_DBUS_INTERFACES_INTERFACE	examples/wpas-dbus-new-wps.py	/^WPAS_DBUS_INTERFACES_INTERFACE = "fi.w1.wpa_supplicant1.Interface"$/;"	v
WPAS_DBUS_INTERFACES_INTERFACE	examples/wpas-dbus-new.py	/^WPAS_DBUS_INTERFACES_INTERFACE = "fi.w1.wpa_supplicant1.Interface"$/;"	v
WPAS_DBUS_INTERFACES_INTERFACE	examples/wpas-test.py	/^WPAS_DBUS_INTERFACES_INTERFACE = "fi.epitest.hostap.WPASupplicant.Interface"$/;"	v
WPAS_DBUS_INTERFACES_OPATH	examples/wpas-dbus-new-signals.py	/^WPAS_DBUS_INTERFACES_OPATH = "\/fi\/w1\/wpa_supplicant1\/Interfaces"$/;"	v
WPAS_DBUS_INTERFACES_OPATH	examples/wpas-dbus-new.py	/^WPAS_DBUS_INTERFACES_OPATH = "\/fi\/w1\/wpa_supplicant1\/Interfaces"$/;"	v
WPAS_DBUS_INTERFACES_OPATH	examples/wpas-test.py	/^WPAS_DBUS_INTERFACES_OPATH = "\/fi\/epitest\/hostap\/WPASupplicant\/Interfaces"$/;"	v
WPAS_DBUS_INTERFACE_MAX	dbus/dbus_new_helpers.h	96;"	d
WPAS_DBUS_METHOD_SIGNAL_PROP_MAX	dbus/dbus_new_helpers.h	97;"	d
WPAS_DBUS_NETWORKS_PART	dbus/dbus_old.h	25;"	d
WPAS_DBUS_NETWORK_INTERFACE	examples/wpas-dbus-new-signals.py	/^WPAS_DBUS_NETWORK_INTERFACE = "fi.w1.wpa_supplicant1.Network"$/;"	v
WPAS_DBUS_NEW_BSSIDS_PART	dbus/dbus_new.h	60;"	d
WPAS_DBUS_NEW_IFACE_BSS	dbus/dbus_new.h	61;"	d
WPAS_DBUS_NEW_IFACE_INTERFACE	dbus/dbus_new.h	54;"	d
WPAS_DBUS_NEW_IFACE_NETWORK	dbus/dbus_new.h	58;"	d
WPAS_DBUS_NEW_IFACE_P2PDEVICE	dbus/dbus_new.h	63;"	d
WPAS_DBUS_NEW_IFACE_P2P_GROUP	dbus/dbus_new.h	70;"	d
WPAS_DBUS_NEW_IFACE_P2P_PEER	dbus/dbus_new.h	81;"	d
WPAS_DBUS_NEW_IFACE_PERSISTENT_GROUP	dbus/dbus_new.h	77;"	d
WPAS_DBUS_NEW_IFACE_WPS	dbus/dbus_new.h	55;"	d
WPAS_DBUS_NEW_INTERFACE	dbus/dbus_new.h	51;"	d
WPAS_DBUS_NEW_NETWORKS_PART	dbus/dbus_new.h	57;"	d
WPAS_DBUS_NEW_P2P_GROUPS_PART	dbus/dbus_new.h	69;"	d
WPAS_DBUS_NEW_P2P_PEERS_PART	dbus/dbus_new.h	80;"	d
WPAS_DBUS_NEW_PATH	dbus/dbus_new.h	50;"	d
WPAS_DBUS_NEW_PATH_INTERFACES	dbus/dbus_new.h	53;"	d
WPAS_DBUS_NEW_PERSISTENT_GROUPS_PART	dbus/dbus_new.h	76;"	d
WPAS_DBUS_NEW_SERVICE	dbus/dbus_new.h	49;"	d
WPAS_DBUS_OBJECT_PATH_MAX	dbus/dbus_new.h	47;"	d
WPAS_DBUS_OBJECT_PATH_MAX	dbus/dbus_new_helpers.h	95;"	d
WPAS_DBUS_OBJECT_PATH_MAX	dbus/dbus_old.h	16;"	d
WPAS_DBUS_OPATH	examples/dbus-listen-preq.py	/^WPAS_DBUS_OPATH = "\/fi\/w1\/wpa_supplicant1"$/;"	v
WPAS_DBUS_OPATH	examples/wpas-dbus-new-signals.py	/^WPAS_DBUS_OPATH = "\/fi\/w1\/wpa_supplicant1"$/;"	v
WPAS_DBUS_OPATH	examples/wpas-dbus-new-wps.py	/^WPAS_DBUS_OPATH = "\/fi\/w1\/wpa_supplicant1"$/;"	v
WPAS_DBUS_OPATH	examples/wpas-dbus-new.py	/^WPAS_DBUS_OPATH = "\/fi\/w1\/wpa_supplicant1"$/;"	v
WPAS_DBUS_OPATH	examples/wpas-test.py	/^WPAS_DBUS_OPATH = "\/fi\/epitest\/hostap\/WPASupplicant"$/;"	v
WPAS_DBUS_PATH	dbus/dbus_old.h	19;"	d
WPAS_DBUS_PATH_INTERFACES	dbus/dbus_old.h	22;"	d
WPAS_DBUS_PROP_AP_SCAN	dbus/dbus_new.h	/^	WPAS_DBUS_PROP_AP_SCAN,$/;"	e	enum:wpas_dbus_prop
WPAS_DBUS_PROP_BSSS	dbus/dbus_new.h	/^	WPAS_DBUS_PROP_BSSS,$/;"	e	enum:wpas_dbus_prop
WPAS_DBUS_PROP_CURRENT_AUTH_MODE	dbus/dbus_new.h	/^	WPAS_DBUS_PROP_CURRENT_AUTH_MODE,$/;"	e	enum:wpas_dbus_prop
WPAS_DBUS_PROP_CURRENT_BSS	dbus/dbus_new.h	/^	WPAS_DBUS_PROP_CURRENT_BSS,$/;"	e	enum:wpas_dbus_prop
WPAS_DBUS_PROP_CURRENT_NETWORK	dbus/dbus_new.h	/^	WPAS_DBUS_PROP_CURRENT_NETWORK,$/;"	e	enum:wpas_dbus_prop
WPAS_DBUS_PROP_DISCONNECT_REASON	dbus/dbus_new.h	/^	WPAS_DBUS_PROP_DISCONNECT_REASON,$/;"	e	enum:wpas_dbus_prop
WPAS_DBUS_PROP_SCANNING	dbus/dbus_new.h	/^	WPAS_DBUS_PROP_SCANNING,$/;"	e	enum:wpas_dbus_prop
WPAS_DBUS_PROP_STATE	dbus/dbus_new.h	/^	WPAS_DBUS_PROP_STATE,$/;"	e	enum:wpas_dbus_prop
WPAS_DBUS_SERVICE	dbus/dbus_old.h	18;"	d
WPAS_DBUS_SERVICE	examples/dbus-listen-preq.py	/^WPAS_DBUS_SERVICE = "fi.w1.wpa_supplicant1"$/;"	v
WPAS_DBUS_SERVICE	examples/wpas-dbus-new-signals.py	/^WPAS_DBUS_SERVICE = "fi.w1.wpa_supplicant1"$/;"	v
WPAS_DBUS_SERVICE	examples/wpas-dbus-new-wps.py	/^WPAS_DBUS_SERVICE = "fi.w1.wpa_supplicant1"$/;"	v
WPAS_DBUS_SERVICE	examples/wpas-dbus-new.py	/^WPAS_DBUS_SERVICE = "fi.w1.wpa_supplicant1"$/;"	v
WPAS_DBUS_SERVICE	examples/wpas-test.py	/^WPAS_DBUS_SERVICE = "fi.epitest.hostap.WPASupplicant"$/;"	v
WPAS_DBUS_TYPE_BINARRAY	dbus/dbus_dict_helpers.h	127;"	d
WPAS_DBUS_WPS_INTERFACE	examples/wpas-dbus-new-wps.py	/^WPAS_DBUS_WPS_INTERFACE = "fi.w1.wpa_supplicant1.Interface.WPS"$/;"	v
WPAS_ERROR_ADD_ERROR	dbus/dbus_old.h	43;"	d
WPAS_ERROR_ADD_NETWORK_ERROR	dbus/dbus_old.h	52;"	d
WPAS_ERROR_EXISTS_ERROR	dbus/dbus_old.h	45;"	d
WPAS_ERROR_INTERNAL_ERROR	dbus/dbus_old.h	54;"	d
WPAS_ERROR_INVALID_BSSID	dbus/dbus_old.h	35;"	d
WPAS_ERROR_INVALID_IFACE	dbus/dbus_old.h	40;"	d
WPAS_ERROR_INVALID_NETWORK	dbus/dbus_old.h	33;"	d
WPAS_ERROR_INVALID_OPTS	dbus/dbus_old.h	38;"	d
WPAS_ERROR_REMOVE_ERROR	dbus/dbus_old.h	47;"	d
WPAS_ERROR_REMOVE_NETWORK_ERROR	dbus/dbus_old.h	56;"	d
WPAS_ERROR_SCAN_ERROR	dbus/dbus_old.h	50;"	d
WPAS_ERROR_WPS_PBC_ERROR	dbus/dbus_old.h	59;"	d
WPAS_ERROR_WPS_PIN_ERROR	dbus/dbus_old.h	61;"	d
WPAS_ERROR_WPS_REG_ERROR	dbus/dbus_old.h	63;"	d
WPAS_GLUE_H	wpas_glue.h	10;"	d
WPAS_KAY_H	wpas_kay.h	10;"	d
WPAS_MODE_AP	config_ssid.h	/^		WPAS_MODE_AP = 2,$/;"	e	enum:wpa_ssid::wpas_mode
WPAS_MODE_IBSS	config_ssid.h	/^		WPAS_MODE_IBSS = 1,$/;"	e	enum:wpa_ssid::wpas_mode
WPAS_MODE_INFRA	config_ssid.h	/^		WPAS_MODE_INFRA = 0,$/;"	e	enum:wpa_ssid::wpas_mode
WPAS_MODE_MESH	config_ssid.h	/^		WPAS_MODE_MESH = 5,$/;"	e	enum:wpa_ssid::wpas_mode
WPAS_MODE_P2P_GO	config_ssid.h	/^		WPAS_MODE_P2P_GO = 3,$/;"	e	enum:wpa_ssid::wpas_mode
WPAS_MODE_P2P_GROUP_FORMATION	config_ssid.h	/^		WPAS_MODE_P2P_GROUP_FORMATION = 4,$/;"	e	enum:wpa_ssid::wpas_mode
WPAS_P2P_PD_AUTO	p2p_supplicant.h	/^	WPAS_P2P_PD_AUTO,$/;"	e	enum:wpas_p2p_prov_disc_use
WPAS_P2P_PD_FOR_ASP	p2p_supplicant.h	/^	WPAS_P2P_PD_FOR_ASP$/;"	e	enum:wpas_p2p_prov_disc_use
WPAS_P2P_PD_FOR_GO_NEG	p2p_supplicant.h	/^	WPAS_P2P_PD_FOR_GO_NEG,$/;"	e	enum:wpas_p2p_prov_disc_use
WPAS_P2P_PD_FOR_JOIN	p2p_supplicant.h	/^	WPAS_P2P_PD_FOR_JOIN,$/;"	e	enum:wpas_p2p_prov_disc_use
WPAS_P2P_ROLE_CLIENT	dbus/dbus_new_handlers_p2p.c	/^	WPAS_P2P_ROLE_CLIENT,$/;"	e	enum:wpas_p2p_role	file:
WPAS_P2P_ROLE_DEVICE	dbus/dbus_new_handlers_p2p.c	/^	WPAS_P2P_ROLE_DEVICE,$/;"	e	enum:wpas_p2p_role	file:
WPAS_P2P_ROLE_GO	dbus/dbus_new_handlers_p2p.c	/^	WPAS_P2P_ROLE_GO,$/;"	e	enum:wpas_p2p_role	file:
WPAS_TEST_FAILURE_NONE	wpa_supplicant_i.h	/^	WPAS_TEST_FAILURE_NONE,$/;"	e	enum:wpa_supplicant_test_failure
WPAS_TEST_FAILURE_SCAN_TRIGGER	wpa_supplicant_i.h	/^	WPAS_TEST_FAILURE_SCAN_TRIGGER,$/;"	e	enum:wpa_supplicant_test_failure
WPA_BSS_ANQP_FETCH_TRIED	bss.h	20;"	d
WPA_BSS_ASSOCIATED	bss.h	19;"	d
WPA_BSS_AUTHENTICATED	bss.h	18;"	d
WPA_BSS_EXPIRATION_PERIOD	bss.c	27;"	d	file:
WPA_BSS_FREQ_CHANGED_FLAG	bss.c	29;"	d	file:
WPA_BSS_IES_CHANGED_FLAG	bss.c	37;"	d	file:
WPA_BSS_LEVEL_DBM	bss.h	17;"	d
WPA_BSS_LEVEL_INVALID	bss.h	16;"	d
WPA_BSS_MODE_CHANGED_FLAG	bss.c	32;"	d	file:
WPA_BSS_NOISE_INVALID	bss.h	15;"	d
WPA_BSS_PRIVACY_CHANGED_FLAG	bss.c	31;"	d	file:
WPA_BSS_QUAL_INVALID	bss.h	14;"	d
WPA_BSS_RATES_CHANGED_FLAG	bss.c	36;"	d	file:
WPA_BSS_RSNIE_CHANGED_FLAG	bss.c	34;"	d	file:
WPA_BSS_SIGNAL_CHANGED_FLAG	bss.c	30;"	d	file:
WPA_BSS_WPAIE_CHANGED_FLAG	bss.c	33;"	d	file:
WPA_BSS_WPS_CHANGED_FLAG	bss.c	35;"	d	file:
WPA_CONC_PREF_NOT_SET	wpa_supplicant_i.h	/^		WPA_CONC_PREF_NOT_SET,$/;"	e	enum:wpa_global::wpa_conc_pref
WPA_CONC_PREF_P2P	wpa_supplicant_i.h	/^		WPA_CONC_PREF_P2P$/;"	e	enum:wpa_global::wpa_conc_pref
WPA_CONC_PREF_STA	wpa_supplicant_i.h	/^		WPA_CONC_PREF_STA,$/;"	e	enum:wpa_global::wpa_conc_pref
WPA_DBUS_CTRL_H	dbus/dbus_new_helpers.h	11;"	d
WPA_DBUS_INTROSPECTION_INTERFACE	dbus/dbus_new_helpers.h	100;"	d
WPA_DBUS_INTROSPECTION_METHOD	dbus/dbus_new_helpers.h	101;"	d
WPA_DBUS_PROPERTIES_GET	dbus/dbus_new_helpers.h	103;"	d
WPA_DBUS_PROPERTIES_GETALL	dbus/dbus_new_helpers.h	105;"	d
WPA_DBUS_PROPERTIES_INTERFACE	dbus/dbus_new_helpers.h	102;"	d
WPA_DBUS_PROPERTIES_SET	dbus/dbus_new_helpers.h	104;"	d
WPA_DBUS_SEND_PROP_CHANGED_TIMEOUT	dbus/dbus_new_helpers.c	821;"	d	file:
WPA_FREQ_USED_BY_INFRA_STATION	wpa_supplicant_i.h	380;"	d
WPA_FREQ_USED_BY_P2P_CLIENT	wpa_supplicant_i.h	381;"	d
WPA_GUI_KEY_DATA	wpa_gui-qt4/networkconfig.cpp	26;"	d	file:
WPA_KEY_PREFIX	config_winreg.c	40;"	d	file:
WPA_KEY_PREFIX	main_winsvc.c	51;"	d	file:
WPA_KEY_PREFIX	wpa_gui-qt4/addinterface.cpp	24;"	d	file:
WPA_KEY_ROOT	config_winreg.c	37;"	d	file:
WPA_KEY_ROOT	main_winsvc.c	48;"	d	file:
WPA_KEY_ROOT	wpa_gui-qt4/addinterface.cpp	21;"	d	file:
WPA_SETBAND_2G	wpa_supplicant_i.h	/^	enum { WPA_SETBAND_AUTO, WPA_SETBAND_5G, WPA_SETBAND_2G } setband;$/;"	e	enum:wpa_supplicant::__anon3
WPA_SETBAND_5G	wpa_supplicant_i.h	/^	enum { WPA_SETBAND_AUTO, WPA_SETBAND_5G, WPA_SETBAND_2G } setband;$/;"	e	enum:wpa_supplicant::__anon3
WPA_SETBAND_AUTO	wpa_supplicant_i.h	/^	enum { WPA_SETBAND_AUTO, WPA_SETBAND_5G, WPA_SETBAND_2G } setband;$/;"	e	enum:wpa_supplicant::__anon3
WPA_SUPPLICANT_CONF_SCRIPT	wpa_supplicant_conf.mk	/^WPA_SUPPLICANT_CONF_SCRIPT := $(LOCAL_PATH)\/wpa_supplicant_conf.sh$/;"	m
WPA_SUPPLICANT_CONF_TEMPLATE	wpa_supplicant_conf.mk	/^WPA_SUPPLICANT_CONF_TEMPLATE := $(LOCAL_PATH)\/wpa_supplicant_template.conf$/;"	m
WPA_SUPPLICANT_I_H	wpa_supplicant_i.h	10;"	d
WPA_SUPPLICANT_NAMED_PIPE	ctrl_iface_named_pipe.c	42;"	d	file:
WPS_AP_NOT_SEL_REG	wpa_supplicant_i.h	/^		WPS_AP_NOT_SEL_REG,$/;"	e	enum:wps_ap_info::wps_ap_info_type
WPS_AP_SEL_REG	wpa_supplicant_i.h	/^		WPS_AP_SEL_REG,$/;"	e	enum:wps_ap_info::wps_ap_info_type
WPS_AP_SEL_REG_OUR	wpa_supplicant_i.h	/^		WPS_AP_SEL_REG_OUR$/;"	e	enum:wps_ap_info::wps_ap_info_type
WPS_PIN_SCAN_IGNORE_SEL_REG	wps_supplicant.c	39;"	d	file:
WPS_SUPPLICANT_H	wps_supplicant.h	10;"	d
WinMain	main_winmain.c	/^int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,$/;"	f
WpaGui	wpa_gui-qt4/wpagui.cpp	/^WpaGui::WpaGui(QApplication *_app, QWidget *parent, const char *, Qt::WFlags)$/;"	f	class:WpaGui
WpaGui	wpa_gui-qt4/wpagui.h	/^class WpaGui : public QMainWindow, public Ui::WpaGui$/;"	c
WpaGuiApp	wpa_gui-qt4/main.cpp	/^WpaGuiApp::WpaGuiApp(int &argc, char **argv) : QApplication(argc, argv)$/;"	f	class:WpaGuiApp
WpaGuiApp	wpa_gui-qt4/main.cpp	/^class WpaGuiApp : public QApplication$/;"	c	file:
WpaMsg	wpa_gui-qt4/wpamsg.h	/^	WpaMsg(const QString &_msg, int _priority = 2)$/;"	f	class:WpaMsg
WpaMsg	wpa_gui-qt4/wpamsg.h	/^class WpaMsg {$/;"	c
WpaMsgList	wpa_gui-qt4/wpamsg.h	/^typedef QLinkedList<WpaMsg> WpaMsgList;$/;"	t
WpsFailure	examples/p2p/p2p_connect.py	/^def WpsFailure(status, etc):$/;"	f
WpsFailure	examples/p2p/p2p_group_add.py	/^def WpsFailure(status, etc):$/;"	f
_FUNC	config.c	1787;"	d	file:
_FUNC	config.c	1789;"	d	file:
_FUNC	config.c	1978;"	d	file:
_INT	config.c	1768;"	d	file:
_INT	config.c	1771;"	d	file:
_INT	config.c	1975;"	d	file:
_INT	config.c	4093;"	d	file:
_INT	config.c	4225;"	d	file:
_INTe	config.c	1769;"	d	file:
_INTe	config.c	1773;"	d	file:
_NDISUIO_CTL_CODE	win_if_list.c	27;"	d	file:
_NDISUIO_QUERY_BINDING	win_if_list.c	/^typedef struct _NDISUIO_QUERY_BINDING$/;"	s	file:
_STR	config.c	1741;"	d	file:
_STR	config.c	1744;"	d	file:
_STR	config.c	1966;"	d	file:
_STR	config.c	4096;"	d	file:
_STR	config.c	4228;"	d	file:
_STR_LEN	config.c	1755;"	d	file:
_STR_LEN	config.c	1969;"	d	file:
_STR_LENe	config.c	1756;"	d	file:
_STR_RANGE	config.c	1763;"	d	file:
_STR_RANGE	config.c	1972;"	d	file:
_STRe	config.c	1742;"	d	file:
_STRe	config.c	1745;"	d	file:
_WIN32_WINNT	ctrl_iface_named_pipe.c	36;"	d	file:
__init__	examples/p2p-nfc.py	/^    def __init__(self, llc):$/;"	m	class:HandoverServer
__init__	examples/p2p/p2p_connect.py	/^	def __init__(self,ifname,wpas_dbus_interface,addr,$/;"	m	class:P2P_Connect
__init__	examples/p2p/p2p_disconnect.py	/^	def __init__(self,interface_name,wpas_dbus_interface,timeout):$/;"	m	class:P2P_Disconnect
__init__	examples/p2p/p2p_find.py	/^	def __init__(self,interface_name,wpas_dbus_interface,timeout):$/;"	m	class:P2P_Find
__init__	examples/p2p/p2p_flush.py	/^	def __init__(self,interface_name,wpas_dbus_interface,timeout):$/;"	m	class:P2P_Flush
__init__	examples/p2p/p2p_group_add.py	/^	def __init__(self,interface_name,wpas_dbus_interface,persistent,frequency,$/;"	m	class:P2P_Group_Add
__init__	examples/p2p/p2p_invite.py	/^	def __init__(self,interface_name,wpas_dbus_interface,addr,$/;"	m	class:P2P_Invite
__init__	examples/p2p/p2p_listen.py	/^	def __init__(self,interface_name,wpas_dbus_interface,timeout):$/;"	m	class:P2P_Listen
__init__	examples/p2p/p2p_stop_find.py	/^	def __init__(self,interface_name,wpas_dbus_interface,timeout):$/;"	m	class:P2P_Stop_Find
__init__	examples/wps-nfc.py	/^    def __init__(self, llc):$/;"	m	class:HandoverServer
__mesh_rsn_auth_init	mesh_rsn.c	/^static int __mesh_rsn_auth_init(struct mesh_rsn *rsn, const u8 *addr)$/;"	f	file:
_not_command	notifier.c	/^static int _not_command(struct wpa_ctrl *ctrl, char *cmd, int print)$/;"	f	file:
_process_request	examples/p2p-nfc.py	/^    def _process_request(self, request):$/;"	m	class:HandoverServer
_process_request	examples/wps-nfc.py	/^    def _process_request(self, request):$/;"	m	class:HandoverServer
_wpa_alloc_eapol	preauth_test.c	/^static u8 * _wpa_alloc_eapol(void *wpa_s, u8 type,$/;"	f	file:
_wpa_alloc_eapol	wpas_glue.c	/^static u8 * _wpa_alloc_eapol(void *wpa_s, u8 type,$/;"	f	file:
_wpa_ctrl_command	hostapd_cli.c	/^static int _wpa_ctrl_command(struct wpa_ctrl *ctrl, char *cmd, int print)$/;"	f	file:
_wpa_ctrl_command	wpa_cli.c	/^static int _wpa_ctrl_command(struct wpa_ctrl *ctrl, char *cmd, int print)$/;"	f	file:
_wpa_ctrl_command	wpa_not_disp.c	/^static int _wpa_ctrl_command(struct wpa_ctrl *ctrl, char *cmd, int print)$/;"	f	file:
_wpa_dbus_add_dict_entry_basic	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_add_dict_entry_basic(DBusMessageIter *iter_dict,$/;"	f	file:
_wpa_dbus_add_dict_entry_byte_array	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_add_dict_entry_byte_array($/;"	f	file:
_wpa_dbus_add_dict_entry_end	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_add_dict_entry_end($/;"	f	file:
_wpa_dbus_add_dict_entry_start	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_add_dict_entry_start($/;"	f	file:
_wpa_dbus_dict_entry_get_array	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_dict_entry_get_array($/;"	f	file:
_wpa_dbus_dict_entry_get_binarray	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_dict_entry_get_binarray($/;"	f	file:
_wpa_dbus_dict_entry_get_byte_array	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_dict_entry_get_byte_array($/;"	f	file:
_wpa_dbus_dict_entry_get_string_array	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_dict_entry_get_string_array($/;"	f	file:
_wpa_dbus_dict_fill_value_from_variant	dbus/dbus_dict_helpers.c	/^static dbus_bool_t _wpa_dbus_dict_fill_value_from_variant($/;"	f	file:
_wpa_ether_send	wpas_glue.c	/^static int _wpa_ether_send(void *wpa_s, const u8 *dest, u16 proto,$/;"	f	file:
_wpa_supplicant_cancel_auth_timeout	preauth_test.c	/^static void _wpa_supplicant_cancel_auth_timeout(void *wpa_s)$/;"	f	file:
_wpa_supplicant_cancel_auth_timeout	wpas_glue.c	/^static void _wpa_supplicant_cancel_auth_timeout(void *wpa_s)$/;"	f	file:
_wpa_supplicant_deauthenticate	preauth_test.c	/^static void _wpa_supplicant_deauthenticate(void *wpa_s, int reason_code)$/;"	f	file:
_wpa_supplicant_deauthenticate	wpas_glue.c	/^static void _wpa_supplicant_deauthenticate(void *wpa_s, int reason_code)$/;"	f	file:
_wpa_supplicant_event_scan_results	events.c	/^static int _wpa_supplicant_event_scan_results(struct wpa_supplicant *wpa_s,$/;"	f	file:
_wpa_supplicant_get_state	preauth_test.c	/^static enum wpa_states _wpa_supplicant_get_state(void *ctx)$/;"	f	file:
_wpa_supplicant_get_state	wpas_glue.c	/^static enum wpa_states _wpa_supplicant_get_state(void *wpa_s)$/;"	f	file:
_wpa_supplicant_set_state	preauth_test.c	/^static void _wpa_supplicant_set_state(void *ctx, enum wpa_states state)$/;"	f	file:
_wpa_supplicant_set_state	wpas_glue.c	/^static void _wpa_supplicant_set_state(void *wpa_s, enum wpa_states state)$/;"	f	file:
_wpas_p2p_in_progress	p2p_supplicant.c	/^static int _wpas_p2p_in_progress(void *ctx)$/;"	f	file:
ac_params	wmm_ac.h	/^	} ac_params[WMM_AC_NUM];$/;"	m	struct:wmm_ac_assoc_data	typeref:struct:wmm_ac_assoc_data::__anon2
access_network_type	config.h	/^	int access_network_type;$/;"	m	struct:wpa_config
accounting_sta_start	tests/link_test.c	/^void accounting_sta_start(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f
ackTrayIcon	wpa_gui-qt4/wpagui.h	/^	bool ackTrayIcon;$/;"	m	class:WpaGui
acm	wmm_ac.h	/^		unsigned int acm:1;$/;"	m	struct:wmm_ac_assoc_data::__anon2
act	wpa_supplicant_i.h	/^	struct action_handle *act;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::action_handle
action_ctrl_dst	action_handler.c	/^struct action_ctrl_dst{$/;"	s	file:
action_file	hostapd_cli.c	/^static const char *action_file = NULL;$/;"	v	file:
action_file	wpa_cli.c	/^static const char *action_file = NULL;$/;"	v	file:
action_handle	action_handler.c	/^struct action_handle {$/;"	s	file:
action_init	action_handler.c	/^int action_init(struct wpa_supplicant *wpa_s) {$/;"	f
action_notification_add_indication	action_handler.c	/^void action_notification_add_indication(struct wpabuf *buf, int pps_mo_id) {$/;"	f
action_notification_dispatcher	action_handler.c	/^static int action_notification_dispatcher(struct wpa_supplicant *wpa_s, struct action_pending *not, const char *payload, size_t paylen)$/;"	f	file:
action_notification_req_dispatcher	action_handler.c	/^static void action_notification_req_dispatcher(struct wpa_supplicant *wpa_s,$/;"	f	file:
action_pending	action_handler.c	/^struct action_pending {$/;"	s	file:
action_rx	action_handler.c	/^int action_rx(struct wpa_supplicant *wpa_s, const u8 *da, const u8 *sa,$/;"	f
action_tx_wait_time	wpa_supplicant_i.h	/^	int action_tx_wait_time;$/;"	m	struct:wpa_supplicant
addEvent	wpa_gui-qt4/eventhistory.cpp	/^void EventHistory::addEvent(WpaMsg msg)$/;"	f	class:EventHistory
addEvent	wpa_gui-qt4/eventhistory.cpp	/^void EventListModel::addEvent(QString time, QString msg)$/;"	f	class:EventListModel
addEvents	wpa_gui-qt4/eventhistory.cpp	/^void EventHistory::addEvents(WpaMsgList msgs)$/;"	f	class:EventHistory
addInterface	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::addInterface()$/;"	f	class:WpaGui
addInterfaceAction	wpa_gui-qt4/wpagui.h	/^	QAction *addInterfaceAction;$/;"	m	class:WpaGui
addInterfaces	wpa_gui-qt4/addinterface.cpp	/^void AddInterface::addInterfaces()$/;"	f	class:AddInterface
addNetwork	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::addNetwork()$/;"	f	class:NetworkConfig
addNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::addNetwork()$/;"	f	class:WpaGui
addRegistryInterface	wpa_gui-qt4/addinterface.cpp	/^bool AddInterface::addRegistryInterface(const QString &ifname)$/;"	f	class:AddInterface
add_arg	dbus/dbus_new_introspect.c	/^static void add_arg(struct wpabuf *xml, const char *name, const char *type,$/;"	f	file:
add_bss	wpa_gui-qt4/peers.cpp	/^bool Peers::add_bss(const char *cmd)$/;"	f	class:Peers
add_child_nodes	dbus/dbus_new_introspect.c	/^static void add_child_nodes(struct wpabuf *xml, DBusConnection *con,$/;"	f	file:
add_entry	dbus/dbus_new_introspect.c	/^static void add_entry(struct wpabuf *xml, const char *type, const char *name,$/;"	f	file:
add_extra_attr	eapol_test.c	/^static int add_extra_attr(struct radius_msg *msg,$/;"	f	file:
add_extra_attrs	eapol_test.c	/^static int add_extra_attrs(struct radius_msg *msg,$/;"	f	file:
add_freq	wpa_supplicant.c	/^void add_freq(int *freqs, int *num_freqs, int freq)$/;"	f
add_iface	wpa_gui-qt4/wpagui.h	/^	AddInterface *add_iface;$/;"	m	class:WpaGui
add_interface	dbus/dbus_new_introspect.c	/^static struct interfaces * add_interface(struct dl_list *list,$/;"	f	file:
add_interfaces	dbus/dbus_new_introspect.c	/^static void add_interfaces(struct dl_list *list, struct wpabuf *xml)$/;"	f	file:
add_introspectable_interface	dbus/dbus_new_introspect.c	/^static void add_introspectable_interface(struct wpabuf *xml)$/;"	f	file:
add_not	bk_wpa_not_disp.c	/^static struct wipush_not * add_not(u8 *addr, u32 mid, int type, u16 check, const char* payload, size_t len){$/;"	f	file:
add_not	wpa_not_disp.c	/^static struct wipush_not * add_not(u8 *addr, u32 mid, int type, u16 check, const char* payload, size_t len){$/;"	f	file:
add_p2p_group_client	wpa_gui-qt4/peers.cpp	/^void Peers::add_p2p_group_client(QStandardItem * \/*parent*\/, QString params)$/;"	f	class:Peers
add_persistent	wpa_gui-qt4/peers.cpp	/^void Peers::add_persistent(int id, const char *ssid, const char *bssid)$/;"	f	class:Peers
add_persistent_groups	wpa_gui-qt4/peers.cpp	/^void Peers::add_persistent_groups()$/;"	f	class:Peers
add_properties_interface	dbus/dbus_new_introspect.c	/^static void add_properties_interface(struct wpabuf *xml)$/;"	f	file:
add_property	dbus/dbus_new_introspect.c	/^static void add_property(struct wpabuf *xml,$/;"	f	file:
add_psk	wpa_supplicant_i.h	/^	struct psk_list_entry *add_psk; \/* From group formation *\/$/;"	m	struct:wpa_global	typeref:struct:wpa_global::psk_list_entry
add_scan_results	wpa_gui-qt4/peers.cpp	/^void Peers::add_scan_results()$/;"	f	class:Peers
add_single_station	wpa_gui-qt4/peers.cpp	/^void Peers::add_single_station(const char *addr)$/;"	f	class:Peers
add_station	wpa_gui-qt4/peers.cpp	/^void Peers::add_station(QString info)$/;"	f	class:Peers
add_stations	wpa_gui-qt4/peers.cpp	/^void Peers::add_stations()$/;"	f	class:Peers
add_timeout	dbus/dbus_common.c	/^static dbus_bool_t add_timeout(DBusTimeout *timeout, void *data)$/;"	f	file:
add_watch	dbus/dbus_common.c	/^static dbus_bool_t add_watch(DBusWatch *watch, void *data)$/;"	f	file:
add_wpas_interfaces	dbus/dbus_new_introspect.c	/^static void add_wpas_interfaces(struct wpabuf *xml,$/;"	f	file:
additional_roaming_consortiums	interworking.c	/^static int additional_roaming_consortiums(struct wpa_bss *bss)$/;"	f	file:
addr	action_handler.c	/^	struct sockaddr_un addr;$/;"	m	struct:action_ctrl_dst	typeref:struct:action_ctrl_dst::sockaddr_un	file:
addr	action_handler.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:action_pending	file:
addr	bk_wpa_not_disp.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wipush_not	file:
addr	config_ssid.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:psk_list_entry
addr	ctrl_iface_udp.c	/^	struct sockaddr_in addr;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::sockaddr_in	file:
addr	ctrl_iface_udp.c	/^	struct sockaddr_in6 addr;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::sockaddr_in6	file:
addr	ctrl_iface_unix.c	/^	struct sockaddr_un addr;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::sockaddr_un	file:
addr	examples/p2p/p2p_connect.py	/^	addr = None$/;"	v	class:P2P_Connect
addr	examples/p2p/p2p_invite.py	/^	addr = None$/;"	v
addr	gas_query.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:gas_query_pending	file:
addr	ibss_rsn.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:ibss_rsn_peer
addr	wpa_not_disp.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wipush_not	file:
addr_in_list	events.c	/^static int addr_in_list(const u8 *addr, const u8 *list, size_t num)$/;"	f	file:
address	wmm_ac.h	/^	u8 address[ETH_ALEN];$/;"	m	struct:wmm_ac_addts_request
addrlen	action_handler.c	/^	socklen_t addrlen;$/;"	m	struct:action_ctrl_dst	file:
addrlen	ctrl_iface_udp.c	/^	socklen_t addrlen;$/;"	m	struct:wpa_ctrl_dst	file:
addrlen	ctrl_iface_unix.c	/^	socklen_t addrlen;$/;"	m	struct:wpa_ctrl_dst	file:
addts_request	wpa_supplicant_i.h	/^	struct wmm_ac_addts_request *addts_request;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wmm_ac_addts_request
adv_proto	gas_query.c	/^	struct wpabuf *adv_proto;$/;"	m	struct:gas_query_pending	typeref:struct:gas_query_pending::wpabuf	file:
after_wps	wpa_supplicant_i.h	/^	int after_wps;$/;"	m	struct:wpa_supplicant
alloc_int_str	config.c	/^static char * alloc_int_str(int val)$/;"	f	file:
alloc_strdup	config.c	/^static char * alloc_strdup(const char *str)$/;"	f	file:
already_connected	interworking.c	/^static int already_connected(struct wpa_supplicant *wpa_s,$/;"	f	file:
ampdu_density	config_ssid.h	/^	int ampdu_density;$/;"	m	struct:wpa_ssid
ampdu_factor	config_ssid.h	/^	int ampdu_factor;$/;"	m	struct:wpa_ssid
android_control_socket	ctrl_iface_unix.c	/^	int android_control_socket;$/;"	m	struct:ctrl_iface_global_priv	file:
android_control_socket	ctrl_iface_unix.c	/^	int android_control_socket;$/;"	m	struct:ctrl_iface_priv	file:
announce	bk_wpa_not_disp.c	/^static void announce(const char *buf){$/;"	f	file:
announce	wpa_not_disp.c	/^static void announce(const char *buf){$/;"	f	file:
anqp	bss.h	/^	struct wpa_bss_anqp *anqp;$/;"	m	struct:wpa_bss	typeref:struct:wpa_bss::wpa_bss_anqp
anqp_3gpp	bss.h	/^	struct wpabuf *anqp_3gpp;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
anqp_add_hex	ctrl_iface.c	/^static char * anqp_add_hex(char *pos, char *end, const char *title,$/;"	f	file:
anqp_build_req	interworking.c	/^static struct wpabuf * anqp_build_req(u16 info_ids[], size_t num_ids,$/;"	f	file:
anqp_resp_cb	interworking.c	/^void anqp_resp_cb(void *ctx, const u8 *dst, u8 dialog_token,$/;"	f
anqp_send_req	interworking.c	/^int anqp_send_req(struct wpa_supplicant *wpa_s, const u8 *dst,$/;"	f
any_interfaces	events.c	/^static int any_interfaces(struct wpa_supplicant *head)$/;"	f	file:
ap_client_poll_ok	ap.c	/^void ap_client_poll_ok(void *ctx, const u8 *addr)$/;"	f
ap_configured_cb	wpa_supplicant_i.h	/^	void (*ap_configured_cb)(void *ctx, void *data);$/;"	m	struct:wpa_supplicant
ap_configured_cb_ctx	wpa_supplicant_i.h	/^	void *ap_configured_cb_ctx;$/;"	m	struct:wpa_supplicant
ap_configured_cb_data	wpa_supplicant_i.h	/^	void *ap_configured_cb_data;$/;"	m	struct:wpa_supplicant
ap_ctrl_iface_chanswitch	ap.c	/^int ap_ctrl_iface_chanswitch(struct wpa_supplicant *wpa_s, const char *pos)$/;"	f
ap_ctrl_iface_sta	ap.c	/^int ap_ctrl_iface_sta(struct wpa_supplicant *wpa_s, const char *txtaddr,$/;"	f
ap_ctrl_iface_sta_deauthenticate	ap.c	/^int ap_ctrl_iface_sta_deauthenticate(struct wpa_supplicant *wpa_s,$/;"	f
ap_ctrl_iface_sta_disassociate	ap.c	/^int ap_ctrl_iface_sta_disassociate(struct wpa_supplicant *wpa_s,$/;"	f
ap_ctrl_iface_sta_first	ap.c	/^int ap_ctrl_iface_sta_first(struct wpa_supplicant *wpa_s,$/;"	f
ap_ctrl_iface_sta_next	ap.c	/^int ap_ctrl_iface_sta_next(struct wpa_supplicant *wpa_s, const char *txtaddr,$/;"	f
ap_ctrl_iface_wpa_get_status	ap.c	/^int ap_ctrl_iface_wpa_get_status(struct wpa_supplicant *wpa_s, char *buf,$/;"	f
ap_eapol_tx_status	ap.c	/^void ap_eapol_tx_status(void *ctx, const u8 *dst,$/;"	f
ap_for_each_sta	tests/link_test.c	/^int ap_for_each_sta(struct hostapd_data *hapd,$/;"	f
ap_get_sta	tests/link_test.c	/^struct sta_info * ap_get_sta(struct hostapd_data *hapd, const u8 *sta)$/;"	f
ap_icon	wpa_gui-qt4/peers.h	/^	QIcon *ap_icon;$/;"	m	class:Peers
ap_ies_from_associnfo	wpa_supplicant_i.h	/^	int ap_ies_from_associnfo;$/;"	m	struct:wpa_supplicant
ap_iface	wpa_supplicant_i.h	/^	struct hostapd_iface *ap_iface;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::hostapd_iface
ap_max_inactivity	config_ssid.h	/^	int ap_max_inactivity;$/;"	m	struct:wpa_ssid
ap_mgmt_rx	ap.c	/^void ap_mgmt_rx(void *ctx, struct rx_mgmt *rx_mgmt)$/;"	f
ap_mgmt_tx_cb	ap.c	/^void ap_mgmt_tx_cb(void *ctx, const u8 *buf, size_t len, u16 stype, int ok)$/;"	f
ap_new_psk_cb	ap.c	/^static void ap_new_psk_cb(void *ctx, const u8 *mac_addr, const u8 *p2p_dev_addr,$/;"	f	file:
ap_probe_req_rx	ap.c	/^static int ap_probe_req_rx(void *ctx, const u8 *sa, const u8 *da,$/;"	f	file:
ap_public_action_rx	ap.c	/^static void ap_public_action_rx(void *ctx, const u8 *buf, size_t len, int freq)$/;"	f	file:
ap_rx_from_unknown_sta	ap.c	/^void ap_rx_from_unknown_sta(void *ctx, const u8 *addr, int wds)$/;"	f
ap_scan	config.h	/^	int ap_scan;$/;"	m	struct:wpa_config
ap_sta_authorized_cb	ap.c	/^static void ap_sta_authorized_cb(void *ctx, const u8 *mac_addr,$/;"	f	file:
ap_sta_bind_vlan	tests/link_test.c	/^int ap_sta_bind_vlan(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f
ap_sta_session_timeout	tests/link_test.c	/^void ap_sta_session_timeout(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f
ap_switch_channel	ap.c	/^int ap_switch_channel(struct wpa_supplicant *wpa_s,$/;"	f
ap_tx_status	ap.c	/^void ap_tx_status(void *ctx, const u8 *addr,$/;"	f
ap_uapsd	wpa_supplicant_i.h	/^	int ap_uapsd;$/;"	m	struct:wpa_supplicant
ap_vendor_action_rx	ap.c	/^static int ap_vendor_action_rx(void *ctx, const u8 *buf, size_t len, int freq)$/;"	f	file:
ap_vendor_elements	config.h	/^	struct wpabuf *ap_vendor_elements;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpabuf
ap_wps_event_cb	ap.c	/^static void ap_wps_event_cb(void *ctx, enum wps_event event,$/;"	f	file:
ap_wps_reg_success_cb	ap.c	/^static void ap_wps_reg_success_cb(void *ctx, const u8 *mac_addr,$/;"	f	file:
app	wpa_gui-qt4/wpagui.h	/^	QApplication *app;$/;"	m	class:WpaGui
are_ies_equal	bss.c	/^static int are_ies_equal(const struct wpa_bss *old,$/;"	f	file:
args	dbus/dbus_new_helpers.h	/^	struct wpa_dbus_argument args[4];$/;"	m	struct:wpa_dbus_method_desc	typeref:struct:wpa_dbus_method_desc::wpa_dbus_argument
args	dbus/dbus_new_helpers.h	/^	struct wpa_dbus_argument args[4];$/;"	m	struct:wpa_dbus_signal_desc	typeref:struct:wpa_dbus_signal_desc::wpa_dbus_argument
array_len	dbus/dbus_dict_helpers.h	/^	dbus_uint32_t array_len; \/** length of the array if the dict entry's$/;"	m	struct:wpa_dbus_dict_entry
array_type	dbus/dbus_dict_helpers.h	/^	int array_type;   \/** the dbus type of the array elements if the dict$/;"	m	struct:wpa_dbus_dict_entry
assoc_freq	wpa_supplicant_i.h	/^	unsigned int assoc_freq;$/;"	m	struct:wpa_supplicant
assoc_req_ie	wpa_supplicant_i.h	/^		u8 assoc_req_ie[200];$/;"	m	struct:wpa_supplicant::__anon4
assoc_req_ie_len	wpa_supplicant_i.h	/^		size_t assoc_req_ie_len;$/;"	m	struct:wpa_supplicant::__anon4
attached	ctrl_iface_named_pipe.c	/^	int attached;$/;"	m	struct:wpa_ctrl_dst	file:
attr	ctrl_iface_named_pipe.c	/^	SECURITY_ATTRIBUTES attr;$/;"	m	struct:ctrl_iface_priv	file:
auth	ibss_rsn.h	/^	struct wpa_state_machine *auth;$/;"	m	struct:ibss_rsn_peer	typeref:struct:ibss_rsn_peer::wpa_state_machine
auth	mesh_rsn.h	/^	struct wpa_authenticator *auth;$/;"	m	struct:mesh_rsn	typeref:struct:mesh_rsn::wpa_authenticator
auth	tests/test_wpa.c	/^	struct wpa_state_machine *auth;$/;"	m	struct:wpa	typeref:struct:wpa::wpa_state_machine	file:
auth	wps_supplicant.h	/^	const char *auth;$/;"	m	struct:wps_new_ap_settings
authChanged	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::authChanged(int sel)$/;"	f	class:NetworkConfig
auth_addr	tests/test_wpa.c	/^	u8 auth_addr[ETH_ALEN];$/;"	m	struct:wpa	file:
auth_alg	config_ssid.h	/^	int auth_alg;$/;"	m	struct:wpa_ssid
auth_alg	wpa_supplicant_i.h	/^		int auth_alg;$/;"	m	struct:wpa_supplicant::__anon4
auth_eapol	tests/test_wpa.c	/^	u8 *auth_eapol;$/;"	m	struct:wpa	file:
auth_eapol_dst	tests/test_wpa.c	/^	u8 auth_eapol_dst[ETH_ALEN];$/;"	m	struct:wpa	file:
auth_eapol_len	tests/test_wpa.c	/^	size_t auth_eapol_len;$/;"	m	struct:wpa	file:
auth_eapol_rx	tests/test_wpa.c	/^static void auth_eapol_rx(void *eloop_data, void *user_ctx)$/;"	f	file:
auth_failures	config_ssid.h	/^	unsigned int auth_failures;$/;"	m	struct:wpa_ssid
auth_for_each_sta	ibss_rsn.c	/^static int auth_for_each_sta(void *ctx, int (*cb)(struct wpa_state_machine *sm,$/;"	f	file:
auth_get_psk	ibss_rsn.c	/^static const u8 * auth_get_psk(void *ctx, const u8 *addr,$/;"	f	file:
auth_get_psk	mesh_rsn.c	/^static const u8 *auth_get_psk(void *ctx, const u8 *addr,$/;"	f	file:
auth_get_psk	tests/test_wpa.c	/^static const u8 * auth_get_psk(void *ctx, const u8 *addr, const u8 *prev_psk)$/;"	f	file:
auth_group	ibss_rsn.h	/^	struct wpa_authenticator *auth_group;$/;"	m	struct:ibss_rsn	typeref:struct:ibss_rsn::wpa_authenticator
auth_group	tests/test_wpa.c	/^	struct wpa_authenticator *auth_group;$/;"	m	struct:wpa	typeref:struct:wpa::wpa_authenticator	file:
auth_init	tests/test_wpa.c	/^static int auth_init(struct wpa *wpa)$/;"	f	file:
auth_init_group	tests/test_wpa.c	/^static int auth_init_group(struct wpa *wpa)$/;"	f	file:
auth_logger	ibss_rsn.c	/^static void auth_logger(void *ctx, const u8 *addr, logger_level level,$/;"	f	file:
auth_logger	mesh_rsn.c	/^static void auth_logger(void *ctx, const u8 *addr, logger_level level,$/;"	f	file:
auth_logger	tests/test_wpa.c	/^static void auth_logger(void *ctx, const u8 *addr, logger_level level,$/;"	f	file:
auth_send_eapol	ibss_rsn.c	/^static int auth_send_eapol(void *ctx, const u8 *addr, const u8 *data,$/;"	f	file:
auth_send_eapol	tests/test_wpa.c	/^static int auth_send_eapol(void *ctx, const u8 *addr, const u8 *data,$/;"	f	file:
auth_set_eapol	ibss_rsn.c	/^static void auth_set_eapol(void *ctx, const u8 *addr,$/;"	f	file:
auth_set_key	ibss_rsn.c	/^static int auth_set_key(void *ctx, int vlan_id, enum wpa_alg alg,$/;"	f	file:
auth_set_key	mesh_rsn.c	/^static int auth_set_key(void *ctx, int vlan_id, enum wpa_alg alg,$/;"	f	file:
auth_start_ampe	mesh_rsn.c	/^static int auth_start_ampe(void *ctx, const u8 *addr)$/;"	f	file:
auth_timed_out	eapol_test.c	/^	int auth_timed_out;$/;"	m	struct:eapol_test_data	file:
auth_timed_out	preauth_test.c	/^	int auth_timed_out;$/;"	m	struct:preauth_test_data	file:
authentication_status	ibss_rsn.h	/^	int authentication_status;$/;"	m	struct:ibss_rsn_peer
authenticator_eap_key_name	eapol_test.c	/^	u8 authenticator_eap_key_name[256];$/;"	m	struct:eapol_test_data	file:
authenticator_eap_key_name_len	eapol_test.c	/^	size_t authenticator_eap_key_name_len;$/;"	m	struct:eapol_test_data	file:
authenticator_pmk	eapol_test.c	/^	u8 authenticator_pmk[PMK_LEN];$/;"	m	struct:eapol_test_data	file:
authenticator_pmk_len	eapol_test.c	/^	size_t authenticator_pmk_len;$/;"	m	struct:eapol_test_data	file:
auto_interworking	config.h	/^	int auto_interworking;$/;"	m	struct:wpa_config
auto_network_select	wpa_supplicant_i.h	/^	unsigned int auto_network_select:1;$/;"	m	struct:wpa_supplicant
auto_pd_scan_retry	wpa_supplicant_i.h	/^	int auto_pd_scan_retry;$/;"	m	struct:wpa_supplicant
auto_reconnect_disabled	wpa_supplicant_i.h	/^	int auto_reconnect_disabled;$/;"	m	struct:wpa_supplicant
auto_select	wpa_supplicant_i.h	/^	unsigned int auto_select:1;$/;"	m	struct:wpa_supplicant
autoscan	config.h	/^	char *autoscan;$/;"	m	struct:wpa_config
autoscan	wpa_supplicant_i.h	/^	const struct autoscan_ops *autoscan;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::autoscan_ops
autoscan_deinit	autoscan.c	/^void autoscan_deinit(struct wpa_supplicant *wpa_s)$/;"	f
autoscan_deinit	autoscan.h	/^static inline void autoscan_deinit(struct wpa_supplicant *wpa_s)$/;"	f
autoscan_exponential_data	autoscan_exponential.c	/^struct autoscan_exponential_data {$/;"	s	file:
autoscan_exponential_deinit	autoscan_exponential.c	/^static void autoscan_exponential_deinit(void *priv)$/;"	f	file:
autoscan_exponential_get_params	autoscan_exponential.c	/^autoscan_exponential_get_params(struct autoscan_exponential_data *data,$/;"	f	file:
autoscan_exponential_init	autoscan_exponential.c	/^static void * autoscan_exponential_init(struct wpa_supplicant *wpa_s,$/;"	f	file:
autoscan_exponential_notify_scan	autoscan_exponential.c	/^static int autoscan_exponential_notify_scan(void *priv,$/;"	f	file:
autoscan_exponential_ops	autoscan_exponential.c	/^const struct autoscan_ops autoscan_exponential_ops = {$/;"	v	typeref:struct:autoscan_ops
autoscan_init	autoscan.c	/^int autoscan_init(struct wpa_supplicant *wpa_s, int req_scan)$/;"	f
autoscan_init	autoscan.h	/^static inline int autoscan_init(struct wpa_supplicant *wpa_s, int req_scan)$/;"	f
autoscan_modules	autoscan.c	/^static const struct autoscan_ops * autoscan_modules[] = {$/;"	v	typeref:struct:autoscan_ops	file:
autoscan_notify_scan	autoscan.c	/^int autoscan_notify_scan(struct wpa_supplicant *wpa_s,$/;"	f
autoscan_notify_scan	autoscan.h	/^static inline int autoscan_notify_scan(struct wpa_supplicant *wpa_s,$/;"	f
autoscan_ops	autoscan.h	/^struct autoscan_ops {$/;"	s
autoscan_params	wpa_supplicant_i.h	/^	struct wpa_driver_scan_params *autoscan_params;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_driver_scan_params
autoscan_periodic_data	autoscan_periodic.c	/^struct autoscan_periodic_data {$/;"	s	file:
autoscan_periodic_deinit	autoscan_periodic.c	/^static void autoscan_periodic_deinit(void *priv)$/;"	f	file:
autoscan_periodic_get_params	autoscan_periodic.c	/^static int autoscan_periodic_get_params(struct autoscan_periodic_data *data,$/;"	f	file:
autoscan_periodic_init	autoscan_periodic.c	/^static void * autoscan_periodic_init(struct wpa_supplicant *wpa_s,$/;"	f	file:
autoscan_periodic_notify_scan	autoscan_periodic.c	/^static int autoscan_periodic_notify_scan(void *priv,$/;"	f	file:
autoscan_periodic_ops	autoscan_periodic.c	/^const struct autoscan_ops autoscan_periodic_ops = {$/;"	v	typeref:struct:autoscan_ops
autoscan_priv	wpa_supplicant_i.h	/^	void *autoscan_priv;$/;"	m	struct:wpa_supplicant
base	autoscan_exponential.c	/^	int base;$/;"	m	struct:autoscan_exponential_data	file:
beacon_ie_len	bss.h	/^	size_t beacon_ie_len;$/;"	m	struct:wpa_bss
beacon_int	bss.h	/^	u16 beacon_int;$/;"	m	struct:wpa_bss
beacon_int	config.h	/^	int beacon_int;$/;"	m	struct:wpa_config
beacon_int	config_ssid.h	/^	int beacon_int;$/;"	m	struct:wpa_ssid
beacon_int	wnm_sta.h	/^	u16 beacon_int; \/* valid if tsf_present=1 *\/$/;"	m	struct:neighbor_report
bearing	wnm_sta.h	/^	u16 bearing; \/* valid if bearing_present=1 *\/$/;"	m	struct:neighbor_report
bearing_present	wnm_sta.h	/^	unsigned int bearing_present:1;$/;"	m	struct:neighbor_report
best_24_freq	wpa_supplicant_i.h	/^	int best_24_freq;$/;"	m	struct:wpa_supplicant
best_5_freq	wpa_supplicant_i.h	/^	int best_5_freq;$/;"	m	struct:wpa_supplicant
best_overall_freq	wpa_supplicant_i.h	/^	int best_overall_freq;$/;"	m	struct:wpa_supplicant
bg_scan_period	config_ssid.h	/^	int bg_scan_period;$/;"	m	struct:wpa_ssid
bgscan	config.h	/^	 char *bgscan;$/;"	m	struct:wpa_config
bgscan	config_ssid.h	/^	char *bgscan;$/;"	m	struct:wpa_ssid
bgscan	wpa_supplicant_i.h	/^	const struct bgscan_ops *bgscan;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::bgscan_ops
bgscan_deinit	bgscan.c	/^void bgscan_deinit(struct wpa_supplicant *wpa_s)$/;"	f
bgscan_deinit	bgscan.h	/^static inline void bgscan_deinit(struct wpa_supplicant *wpa_s)$/;"	f
bgscan_init	bgscan.c	/^int bgscan_init(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid,$/;"	f
bgscan_init	bgscan.h	/^static inline int bgscan_init(struct wpa_supplicant *wpa_s,$/;"	f
bgscan_learn_add_neighbor	bgscan_learn.c	/^static void bgscan_learn_add_neighbor(struct bgscan_learn_bss *bss,$/;"	f	file:
bgscan_learn_bss	bgscan_learn.c	/^struct bgscan_learn_bss {$/;"	s	file:
bgscan_learn_bss_match	bgscan_learn.c	/^static int bgscan_learn_bss_match(struct bgscan_learn_data *data,$/;"	f	file:
bgscan_learn_data	bgscan_learn.c	/^struct bgscan_learn_data {$/;"	s	file:
bgscan_learn_deinit	bgscan_learn.c	/^static void bgscan_learn_deinit(void *priv)$/;"	f	file:
bgscan_learn_get_bss	bgscan_learn.c	/^static struct bgscan_learn_bss * bgscan_learn_get_bss($/;"	f	file:
bgscan_learn_get_freqs	bgscan_learn.c	/^static int * bgscan_learn_get_freqs(struct bgscan_learn_data *data,$/;"	f	file:
bgscan_learn_get_params	bgscan_learn.c	/^static int bgscan_learn_get_params(struct bgscan_learn_data *data,$/;"	f	file:
bgscan_learn_get_probe_freq	bgscan_learn.c	/^static int * bgscan_learn_get_probe_freq(struct bgscan_learn_data *data,$/;"	f	file:
bgscan_learn_get_supp_freqs	bgscan_learn.c	/^static int * bgscan_learn_get_supp_freqs(struct wpa_supplicant *wpa_s)$/;"	f	file:
bgscan_learn_init	bgscan_learn.c	/^static void * bgscan_learn_init(struct wpa_supplicant *wpa_s,$/;"	f	file:
bgscan_learn_load	bgscan_learn.c	/^static int bgscan_learn_load(struct bgscan_learn_data *data)$/;"	f	file:
bgscan_learn_notify_beacon_loss	bgscan_learn.c	/^static void bgscan_learn_notify_beacon_loss(void *priv)$/;"	f	file:
bgscan_learn_notify_scan	bgscan_learn.c	/^static int bgscan_learn_notify_scan(void *priv,$/;"	f	file:
bgscan_learn_notify_signal_change	bgscan_learn.c	/^static void bgscan_learn_notify_signal_change(void *priv, int above,$/;"	f	file:
bgscan_learn_ops	bgscan_learn.c	/^const struct bgscan_ops bgscan_learn_ops = {$/;"	v	typeref:struct:bgscan_ops
bgscan_learn_save	bgscan_learn.c	/^static void bgscan_learn_save(struct bgscan_learn_data *data)$/;"	f	file:
bgscan_learn_timeout	bgscan_learn.c	/^static void bgscan_learn_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
bgscan_modules	bgscan.c	/^static const struct bgscan_ops * bgscan_modules[] = {$/;"	v	typeref:struct:bgscan_ops	file:
bgscan_notify_beacon_loss	bgscan.c	/^void bgscan_notify_beacon_loss(struct wpa_supplicant *wpa_s)$/;"	f
bgscan_notify_beacon_loss	bgscan.h	/^static inline void bgscan_notify_beacon_loss(struct wpa_supplicant *wpa_s)$/;"	f
bgscan_notify_scan	bgscan.c	/^int bgscan_notify_scan(struct wpa_supplicant *wpa_s,$/;"	f
bgscan_notify_scan	bgscan.h	/^static inline int bgscan_notify_scan(struct wpa_supplicant *wpa_s,$/;"	f
bgscan_notify_signal_change	bgscan.c	/^void bgscan_notify_signal_change(struct wpa_supplicant *wpa_s, int above,$/;"	f
bgscan_notify_signal_change	bgscan.h	/^static inline void bgscan_notify_signal_change(struct wpa_supplicant *wpa_s,$/;"	f
bgscan_ops	bgscan.h	/^struct bgscan_ops {$/;"	s
bgscan_priv	wpa_supplicant_i.h	/^	void *bgscan_priv;$/;"	m	struct:wpa_supplicant
bgscan_simple_data	bgscan_simple.c	/^struct bgscan_simple_data {$/;"	s	file:
bgscan_simple_deinit	bgscan_simple.c	/^static void bgscan_simple_deinit(void *priv)$/;"	f	file:
bgscan_simple_get_params	bgscan_simple.c	/^static int bgscan_simple_get_params(struct bgscan_simple_data *data,$/;"	f	file:
bgscan_simple_init	bgscan_simple.c	/^static void * bgscan_simple_init(struct wpa_supplicant *wpa_s,$/;"	f	file:
bgscan_simple_notify_beacon_loss	bgscan_simple.c	/^static void bgscan_simple_notify_beacon_loss(void *priv)$/;"	f	file:
bgscan_simple_notify_scan	bgscan_simple.c	/^static int bgscan_simple_notify_scan(void *priv,$/;"	f	file:
bgscan_simple_notify_signal_change	bgscan_simple.c	/^static void bgscan_simple_notify_signal_change(void *priv, int above,$/;"	f	file:
bgscan_simple_ops	bgscan_simple.c	/^const struct bgscan_ops bgscan_simple_ops = {$/;"	v	typeref:struct:bgscan_ops
bgscan_simple_timeout	bgscan_simple.c	/^static void bgscan_simple_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
bgscan_ssid	wpa_supplicant_i.h	/^	struct wpa_ssid *bgscan_ssid;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid
binarray_value	dbus/dbus_dict_helpers.h	/^		struct wpabuf **binarray_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1	typeref:struct:wpa_dbus_dict_entry::__anon1::wpabuf
blacklist	wpa_supplicant_i.h	/^	struct wpa_blacklist *blacklist;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_blacklist
blacklist_cleared	wpa_supplicant_i.h	/^	int blacklist_cleared;$/;"	m	struct:wpa_supplicant
blobAdded	examples/wpas-dbus-new-signals.py	/^def blobAdded(blob):$/;"	f
blobRemoved	examples/wpas-dbus-new-signals.py	/^def blobRemoved(blob):$/;"	f
blobs	config.h	/^	struct wpa_config_blob *blobs;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpa_config_blob
bool_value	dbus/dbus_dict_helpers.h	/^		dbus_bool_t bool_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
bridge_ifname	wpa_supplicant_i.h	/^	char bridge_ifname[16];$/;"	m	struct:wpa_supplicant
bridge_ifname	wpa_supplicant_i.h	/^	const char *bridge_ifname;$/;"	m	struct:wpa_interface
broadcast_test	notifier.c	/^static int broadcast_test = 0;$/;"	v	file:
bss	bgscan_learn.c	/^	struct dl_list bss;$/;"	m	struct:bgscan_learn_data	typeref:struct:bgscan_learn_data::dl_list	file:
bss	wpa_supplicant_i.h	/^	struct dl_list bss; \/* struct wpa_bss::list *\/$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::dl_list
bss	wpa_supplicant_i.h	/^	struct wpa_bss *bss;$/;"	m	struct:wpa_connect_work	typeref:struct:wpa_connect_work::wpa_bss
bssAdded	examples/wpas-dbus-new-signals.py	/^def bssAdded(bss, properties):$/;"	f
bssAdded	examples/wpas-dbus-new-wps.py	/^def bssAdded(bss, properties):$/;"	f
bssAdded	examples/wpas-dbus-new.py	/^def bssAdded(bss, properties):$/;"	f
bssFromScan	wpa_gui-qt4/wpagui.h	/^	QString bssFromScan;$/;"	m	class:WpaGui
bssRemoved	examples/wpas-dbus-new-signals.py	/^def bssRemoved(bss):$/;"	f
bssRemoved	examples/wpas-dbus-new-wps.py	/^def bssRemoved(bss):$/;"	f
bssRemoved	examples/wpas-dbus-new.py	/^def bssRemoved(bss):$/;"	f
bssSelected	wpa_gui-qt4/scanresults.cpp	/^void ScanResults::bssSelected(QTreeWidgetItem *sel)$/;"	f	class:ScanResults
bss_expiration_age	config.h	/^	unsigned int bss_expiration_age;$/;"	m	struct:wpa_config
bss_expiration_scan_count	config.h	/^	unsigned int bss_expiration_scan_count;$/;"	m	struct:wpa_config
bss_free	bgscan_learn.c	/^static void bss_free(struct bgscan_learn_bss *bss)$/;"	f	file:
bss_handler_args	dbus/dbus_new_handlers.h	/^struct bss_handler_args {$/;"	s
bss_id	wpa_supplicant_i.h	/^	struct dl_list bss_id; \/* struct wpa_bss::list_id *\/$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::dl_list
bss_is_dmg	bss.h	/^static inline int bss_is_dmg(const struct wpa_bss *bss)$/;"	f
bss_is_ess	events.c	/^static int bss_is_ess(struct wpa_bss *bss)$/;"	f	file:
bss_is_ibss	wpa_supplicant.c	/^static int bss_is_ibss(struct wpa_bss *bss)$/;"	f	file:
bss_max_count	config.h	/^	unsigned int bss_max_count;$/;"	m	struct:wpa_config
bss_max_idle_period	wpa_supplicant_i.h	/^		u16 bss_max_idle_period;$/;"	m	struct:wpa_supplicant::__anon4
bss_next_id	wpa_supplicant_i.h	/^	unsigned int bss_next_id;$/;"	m	struct:wpa_supplicant
bss_removed	wpa_supplicant_i.h	/^	unsigned int bss_removed:1;$/;"	m	struct:wpa_connect_work
bss_term_dur	wnm_sta.h	/^	u16 bss_term_dur; \/* valid if bss_term_present=1 *\/$/;"	m	struct:neighbor_report
bss_term_present	wnm_sta.h	/^	unsigned int bss_term_present:1;$/;"	m	struct:neighbor_report
bss_term_tsf	wnm_sta.h	/^	u64 bss_term_tsf; \/* valid if bss_term_present=1 *\/$/;"	m	struct:neighbor_report
bss_update_idx	wpa_supplicant_i.h	/^	unsigned int bss_update_idx;$/;"	m	struct:wpa_supplicant
bssid	bgscan_learn.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:bgscan_learn_bss	file:
bssid	blacklist.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_blacklist
bssid	bss.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_bss
bssid	config_ssid.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_ssid
bssid	dbus/dbus_new_handlers_wps.c	/^	u8 *bssid;$/;"	m	struct:wps_start_params	file:
bssid	hs20_supplicant.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:osu_provider	file:
bssid	p2p_supplicant.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:send_action_work	file:
bssid	wnm_sta.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:neighbor_report
bssid	wpa_gui-qt4/networkconfig.h	/^	QString bssid;$/;"	m	class:NetworkConfig
bssid	wpa_supplicant_i.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_supplicant
bssid	wpa_supplicant_i.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wps_ap_info
bssid_blacklist	config_ssid.h	/^	u8 *bssid_blacklist;$/;"	m	struct:wpa_ssid
bssid_filter	wpa_supplicant_i.h	/^	u8 *bssid_filter;$/;"	m	struct:wpa_supplicant
bssid_filter_count	wpa_supplicant_i.h	/^	size_t bssid_filter_count;$/;"	m	struct:wpa_supplicant
bssid_in_array	bgscan_learn.c	/^static int bssid_in_array(u8 *array, size_t array_len, const u8 *bssid)$/;"	f	file:
bssid_info	wnm_sta.h	/^	u32 bssid_info;$/;"	m	struct:neighbor_report
bssid_set	config_ssid.h	/^	int bssid_set;$/;"	m	struct:wpa_ssid
bssid_whitelist	config_ssid.h	/^	u8 *bssid_whitelist;$/;"	m	struct:wpa_ssid
buf	p2p_supplicant.c	/^	u8 buf[0];$/;"	m	struct:send_action_work	file:
build_root_nai	interworking.c	/^static int build_root_nai(char *nai, size_t nai_len, const char *imsi,$/;"	f	file:
bw	p2p_supplicant.c	/^	enum { BW20, BW40PLUS, BW40MINUS, BW80, BW2160 } bw;$/;"	m	struct:p2p_oper_class_map	typeref:enum:p2p_oper_class_map::__anon9	file:
byte_array_to_string	examples/wpas-dbus-new-signals.py	/^def byte_array_to_string(s):$/;"	f
byte_array_to_string	examples/wpas-dbus-new.py	/^def byte_array_to_string(s):$/;"	f
byte_array_to_string	examples/wpas-test.py	/^def byte_array_to_string(s):$/;"	f
byte_value	dbus/dbus_dict_helpers.h	/^		char byte_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
bytearray_value	dbus/dbus_dict_helpers.h	/^		char *bytearray_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
ca_cert	config.h	/^	char *ca_cert;$/;"	m	struct:wpa_cred
calculate_update_time	bss.c	/^static void calculate_update_time(const struct os_reltime *fetch_time,$/;"	f	file:
callbacks_pending	wps_supplicant.c	/^static int callbacks_pending = 0;$/;"	v	file:
cand_pref_compar	wnm_sta.c	/^static int cand_pref_compar(const void *a, const void *b)$/;"	f	file:
capa	ctrl_iface.c	/^	unsigned int capa;$/;"	m	struct:cipher_info	file:
capability_list	bss.h	/^	struct wpabuf *capability_list;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
caps	bss.h	/^	u16 caps;$/;"	m	struct:wpa_bss
cb	gas_query.c	/^	void (*cb)(void *ctx, const u8 *dst, u8 dialog_token,$/;"	m	struct:gas_query_pending	file:
cb	wpa_supplicant_i.h	/^	void (*cb)(struct wpa_radio_work *work, int deinit);$/;"	m	struct:wpa_radio_work
cert_in_cb	config.h	/^	int cert_in_cb;$/;"	m	struct:wpa_config
chan_allowed	p2p_supplicant.c	/^enum chan_allowed {$/;"	g	file:
chan_supported	wnm_sta.c	/^static int chan_supported(struct wpa_supplicant *wpa_s, int freq)$/;"	f	file:
changed_flag	config.c	/^	unsigned int changed_flag;$/;"	m	struct:global_parse_data	file:
changed_parameters	config.h	/^	unsigned int changed_parameters;$/;"	m	struct:wpa_config
channel_number	wnm_sta.h	/^	u8 channel_number;$/;"	m	struct:neighbor_report
check	action_handler.c	/^static u16 check;$/;"	v	file:
check	bk_wpa_not_disp.c	/^	u16 check;$/;"	m	struct:wipush_not	file:
check	wpa_not_disp.c	/^	u16 check;$/;"	m	struct:wipush_not	file:
check_terminating	wpa_cli.c	/^static int check_terminating(const char *msg)$/;"	f	file:
cipher_info	ctrl_iface.c	/^struct cipher_info {$/;"	s	file:
ciphers	ctrl_iface.c	/^static const struct cipher_info ciphers[] = {$/;"	v	typeref:struct:cipher_info	file:
ciphers_group_mgmt	ctrl_iface.c	/^static const struct cipher_info ciphers_group_mgmt[] = {$/;"	v	typeref:struct:cipher_info	file:
clean_wipush_messages	bk_wpa_not_disp.c	/^static void clean_wipush_messages(){$/;"	f	file:
clean_wipush_messages	wpa_not_disp.c	/^static void clean_wipush_messages(){$/;"	f	file:
clear_driver_scan_cache	wpa_supplicant_i.h	/^	unsigned int clear_driver_scan_cache:1;$/;"	m	struct:wpa_supplicant
clear_raw_mode	examples/p2p-nfc.py	/^def clear_raw_mode():$/;"	f
cli_cmd_flag_none	wpa_cli.c	/^	cli_cmd_flag_none		= 0x00,$/;"	e	enum:wpa_cli_cmd_flags	file:
cli_cmd_flag_sensitive	wpa_cli.c	/^	cli_cmd_flag_sensitive		= 0x01$/;"	e	enum:wpa_cli_cmd_flags	file:
cli_event	wpa_cli.c	/^static void cli_event(const char *str)$/;"	f	file:
cli_txt_entry	wpa_cli.c	/^struct cli_txt_entry {$/;"	s	file:
cli_txt_list_add	wpa_cli.c	/^static int cli_txt_list_add(struct dl_list *txt_list, const char *txt)$/;"	f	file:
cli_txt_list_add_addr	wpa_cli.c	/^static int cli_txt_list_add_addr(struct dl_list *txt_list, const char *txt)$/;"	f	file:
cli_txt_list_add_word	wpa_cli.c	/^static int cli_txt_list_add_word(struct dl_list *txt_list, const char *txt)$/;"	f	file:
cli_txt_list_array	wpa_cli.c	/^static char ** cli_txt_list_array(struct dl_list *txt_list)$/;"	f	file:
cli_txt_list_del	wpa_cli.c	/^static void cli_txt_list_del(struct dl_list *txt_list, const char *txt)$/;"	f	file:
cli_txt_list_del_addr	wpa_cli.c	/^static void cli_txt_list_del_addr(struct dl_list *txt_list, const char *txt)$/;"	f	file:
cli_txt_list_del_word	wpa_cli.c	/^static void cli_txt_list_del_word(struct dl_list *txt_list, const char *txt)$/;"	f	file:
cli_txt_list_flush	wpa_cli.c	/^static void cli_txt_list_flush(struct dl_list *list)$/;"	f	file:
cli_txt_list_free	wpa_cli.c	/^static void cli_txt_list_free(struct cli_txt_entry *e)$/;"	f	file:
cli_txt_list_get	wpa_cli.c	/^static struct cli_txt_entry * cli_txt_list_get(struct dl_list *txt_list,$/;"	f	file:
client_cert	config.h	/^	char *client_cert;$/;"	m	struct:wpa_cred
closeEvent	wpa_gui-qt4/peers.cpp	/^void Peers::closeEvent(QCloseEvent *)$/;"	f	class:Peers
closeEvent	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::closeEvent(QCloseEvent *event)$/;"	f	class:WpaGui
cmd	hostapd_cli.c	/^	const char *cmd;$/;"	m	struct:hostapd_cli_cmd	file:
cmd	notifier.c	/^	const char *cmd;$/;"	m	struct:not_cmd	file:
cmd	wpa_cli.c	/^	const char *cmd;$/;"	m	struct:wpa_cli_cmd	file:
cmd	wpa_not_disp.c	/^	const char *cmd;$/;"	m	struct:not_cmd	file:
cmp_u8s_desc	dbus/dbus_new_handlers.c	/^static int cmp_u8s_desc(const void *a, const void *b)$/;"	f	file:
columnCount	wpa_gui-qt4/eventhistory.cpp	/^int EventListModel::columnCount(const QModelIndex &) const$/;"	f	class:EventListModel
command_status	notifier.c	/^static void command_status(int status){$/;"	f	file:
commands_help	hostapd_cli.c	/^static const char *commands_help =$/;"	v	file:
compare_scan_neighbor_results	wnm_sta.c	/^compare_scan_neighbor_results(struct wpa_supplicant *wpa_s)$/;"	f	file:
completion	wpa_cli.c	/^	char ** (*completion)(const char *str, int pos);$/;"	m	struct:wpa_cli_cmd	file:
compute_notification	notifier.c	/^static void compute_notification(char *buf, size_t len){$/;"	f	file:
con	dbus/dbus_common_i.h	/^	DBusConnection *con;$/;"	m	struct:wpas_dbus_priv
conc_pref	wpa_supplicant_i.h	/^	} conc_pref;$/;"	m	struct:wpa_global	typeref:enum:wpa_global::wpa_conc_pref
conf	wpa_supplicant_i.h	/^	struct wpa_config *conf;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_config
conf_offset_val	wpas_kay.c	/^static unsigned int conf_offset_val(enum confidentiality_offset co)$/;"	f	file:
conf_p2p_dev	wpa_supplicant_i.h	/^	const char *conf_p2p_dev;$/;"	m	struct:wpa_interface
confanother	wpa_supplicant_i.h	/^	char *confanother;$/;"	m	struct:wpa_supplicant
confanother	wpa_supplicant_i.h	/^	const char *confanother;$/;"	m	struct:wpa_interface
config_methods	config.h	/^	char *config_methods;$/;"	m	struct:wpa_config
confname	wpa_supplicant_i.h	/^	char *confname;$/;"	m	struct:wpa_supplicant
confname	wpa_supplicant_i.h	/^	const char *confname;$/;"	m	struct:wpa_interface
connectB	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::connectB()$/;"	f	class:WpaGui
connect_info	eapol_test.c	/^	char *connect_info;$/;"	m	struct:eapol_test_data	file:
connect_pbc	wpa_gui-qt4/peers.cpp	/^void Peers::connect_pbc()$/;"	f	class:Peers
connect_without_scan	wpa_supplicant_i.h	/^	struct wpa_ssid *connect_without_scan;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid
connect_work	wpa_supplicant_i.h	/^	struct wpa_radio_work *connect_work;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_radio_work
connectedToService	wpa_gui-qt4/wpagui.h	/^	bool connectedToService;$/;"	m	class:WpaGui
connection	dbus/dbus_new_helpers.h	/^	DBusConnection *connection;$/;"	m	struct:wpa_dbus_object_desc
constructArguements	examples/p2p/p2p_connect.py	/^	def constructArguements(self):$/;"	m	class:P2P_Connect
constructArguements	examples/p2p/p2p_group_add.py	/^	def constructArguements(self):$/;"	m	class:P2P_Group_Add
constructArguements	examples/p2p/p2p_invite.py	/^	def constructArguements(self):$/;"	m	class:P2P_Invite
context_menu	wpa_gui-qt4/peers.cpp	/^void Peers::context_menu(const QPoint &pos)$/;"	f	class:Peers
continue_loop	examples/p2p-nfc.py	/^continue_loop = True$/;"	v
continue_loop	examples/wps-nfc.py	/^continue_loop = True$/;"	v
cookie	ctrl_iface_udp.c	/^	u8 cookie[COOKIE_LEN];$/;"	m	struct:ctrl_iface_global_priv	file:
cookie	ctrl_iface_udp.c	/^	u8 cookie[COOKIE_LEN];$/;"	m	struct:ctrl_iface_priv	file:
copy_supp_rates	mesh_mpm.c	/^static u16 copy_supp_rates(struct wpa_supplicant *wpa_s,$/;"	f	file:
could_be_psk_mismatch	events.c	/^static int could_be_psk_mismatch(struct wpa_supplicant *wpa_s, u16 reason_code,$/;"	f	file:
count	blacklist.h	/^	int count;$/;"	m	struct:wpa_blacklist
count	notifier.c	/^	int count;$/;"	m	struct:per_not	file:
count	notifier.c	/^static int count = 0;$/;"	v	file:
countermeasures	wpa_supplicant_i.h	/^	int countermeasures;$/;"	m	struct:wpa_supplicant
country	config.h	/^		char country[3];$/;"	m	struct:wpa_cred::roaming_partner
country	config.h	/^	char country[2];$/;"	m	struct:wpa_config
country	wnm_sta.h	/^	char country[2]; \/* valid if country_present=1 *\/$/;"	m	struct:neighbor_report
country_present	wnm_sta.h	/^	unsigned int country_present:1;$/;"	m	struct:neighbor_report
createTrayIcon	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::createTrayIcon(bool trayOnly)$/;"	f	class:WpaGui
create_p2p_iface	wpa_supplicant_i.h	/^	int create_p2p_iface;$/;"	m	struct:wpa_supplicant
cred	config.h	/^	struct wpa_cred *cred;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpa_cred
cred_below_min_backhaul	interworking.c	/^static int cred_below_min_backhaul(struct wpa_supplicant *wpa_s,$/;"	f	file:
cred_conn_capab_missing	interworking.c	/^static int cred_conn_capab_missing(struct wpa_supplicant *wpa_s,$/;"	f	file:
cred_excluded_ssid	interworking.c	/^static int cred_excluded_ssid(struct wpa_cred *cred, struct wpa_bss *bss)$/;"	f	file:
cred_no_required_oi_match	interworking.c	/^static int cred_no_required_oi_match(struct wpa_cred *cred, struct wpa_bss *bss)$/;"	f	file:
cred_over_max_bss_load	interworking.c	/^static int cred_over_max_bss_load(struct wpa_supplicant *wpa_s,$/;"	f	file:
cred_prio_cmp	interworking.c	/^static int cred_prio_cmp(const struct wpa_cred *a, const struct wpa_cred *b)$/;"	f	file:
cred_type	interworking.c	/^	u8 cred_type;$/;"	m	struct:nai_realm_eap	file:
cred_with_3gpp	interworking.c	/^static int cred_with_3gpp(struct wpa_supplicant *wpa_s)$/;"	f	file:
cred_with_conn_capab	interworking.c	/^static int cred_with_conn_capab(struct wpa_supplicant *wpa_s)$/;"	f	file:
cred_with_domain	interworking.c	/^static int cred_with_domain(struct wpa_supplicant *wpa_s)$/;"	f	file:
cred_with_min_backhaul	interworking.c	/^static int cred_with_min_backhaul(struct wpa_supplicant *wpa_s)$/;"	f	file:
cred_with_nai_realm	interworking.c	/^static int cred_with_nai_realm(struct wpa_supplicant *wpa_s)$/;"	f	file:
cred_with_roaming_consortium	interworking.c	/^static int cred_with_roaming_consortium(struct wpa_supplicant *wpa_s)$/;"	f	file:
credentials	examples/wpas-dbus-new-wps.py	/^def credentials(cred):$/;"	f
cross_connect_disallowed	wpa_supplicant_i.h	/^	int cross_connect_disallowed;$/;"	m	struct:wpa_supplicant
cross_connect_enabled	wpa_supplicant_i.h	/^	int cross_connect_enabled;$/;"	m	struct:wpa_supplicant
cross_connect_in_use	wpa_supplicant_i.h	/^	int cross_connect_in_use;$/;"	m	struct:wpa_supplicant
cross_connect_uplink	wpa_supplicant_i.h	/^	char cross_connect_uplink[100];$/;"	m	struct:wpa_supplicant
cross_connection	wpa_supplicant_i.h	/^	int cross_connection;$/;"	m	struct:wpa_global
ctrlRequest	wpa_gui-qt4/wpagui.cpp	/^int WpaGui::ctrlRequest(const char *cmd, char *buf, size_t *buflen)$/;"	f	class:WpaGui
ctrl_broken_pipe	ctrl_iface_named_pipe.c	/^static int ctrl_broken_pipe(HANDLE pipe, int used)$/;"	f	file:
ctrl_close_pipe	ctrl_iface_named_pipe.c	/^static void ctrl_close_pipe(struct wpa_ctrl_dst *dst)$/;"	f	file:
ctrl_conn	hostapd_cli.c	/^static struct wpa_ctrl *ctrl_conn;$/;"	v	typeref:struct:wpa_ctrl	file:
ctrl_conn	wpa_cli.c	/^static struct wpa_ctrl *ctrl_conn;$/;"	v	typeref:struct:wpa_ctrl	file:
ctrl_conn	wpa_gui-qt4/wpagui.h	/^	struct wpa_ctrl *ctrl_conn;$/;"	m	class:WpaGui	typeref:struct:WpaGui::wpa_ctrl
ctrl_dst	ctrl_iface_named_pipe.c	/^	struct wpa_ctrl_dst *ctrl_dst;$/;"	m	struct:ctrl_iface_priv	typeref:struct:ctrl_iface_priv::wpa_ctrl_dst	file:
ctrl_dst	ctrl_iface_named_pipe.c	/^	struct wpa_global_dst *ctrl_dst;$/;"	m	struct:ctrl_iface_global_priv	typeref:struct:ctrl_iface_global_priv::wpa_global_dst	file:
ctrl_dst	ctrl_iface_udp.c	/^	struct wpa_ctrl_dst *ctrl_dst;$/;"	m	struct:ctrl_iface_priv	typeref:struct:ctrl_iface_priv::wpa_ctrl_dst	file:
ctrl_dst	ctrl_iface_unix.c	/^	struct dl_list ctrl_dst;$/;"	m	struct:ctrl_iface_global_priv	typeref:struct:ctrl_iface_global_priv::dl_list	file:
ctrl_dst	ctrl_iface_unix.c	/^	struct dl_list ctrl_dst;$/;"	m	struct:ctrl_iface_priv	typeref:struct:ctrl_iface_priv::dl_list	file:
ctrl_flush_broken_pipes	ctrl_iface_named_pipe.c	/^static void ctrl_flush_broken_pipes(struct ctrl_iface_priv *priv)$/;"	f	file:
ctrl_iface	wpa_gui-qt4/wpagui.h	/^	char *ctrl_iface;$/;"	m	class:WpaGui
ctrl_iface	wpa_supplicant_i.h	/^	struct ctrl_iface_global_priv *ctrl_iface;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::ctrl_iface_global_priv
ctrl_iface	wpa_supplicant_i.h	/^	struct ctrl_iface_priv *ctrl_iface;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::ctrl_iface_priv
ctrl_iface_dir	bk_wpa_not_disp.c	/^static const char *ctrl_iface_dir = CONFIG_CTRL_IFACE_DIR;$/;"	v	file:
ctrl_iface_dir	hostapd_cli.c	/^static const char *ctrl_iface_dir = CONFIG_CTRL_IFACE_DIR;$/;"	v	file:
ctrl_iface_dir	notifier.c	/^static const char *ctrl_iface_dir = CONFIG_CTRL_IFACE_DIR;$/;"	v	file:
ctrl_iface_dir	wpa_cli.c	/^static const char *ctrl_iface_dir = CONFIG_CTRL_IFACE_DIR;$/;"	v	file:
ctrl_iface_dir	wpa_gui-qt4/wpagui.h	/^	char *ctrl_iface_dir;$/;"	m	class:WpaGui
ctrl_iface_dir	wpa_not_disp.c	/^static const char *ctrl_iface_dir = CONFIG_CTRL_IFACE_DIR;$/;"	v	file:
ctrl_iface_get_capability_auth_alg	ctrl_iface.c	/^static int ctrl_iface_get_capability_auth_alg(struct wpa_supplicant *wpa_s,$/;"	f	file:
ctrl_iface_get_capability_channels	ctrl_iface.c	/^static int ctrl_iface_get_capability_channels(struct wpa_supplicant *wpa_s,$/;"	f	file:
ctrl_iface_get_capability_freq	ctrl_iface.c	/^static int ctrl_iface_get_capability_freq(struct wpa_supplicant *wpa_s,$/;"	f	file:
ctrl_iface_get_capability_group	ctrl_iface.c	/^static int ctrl_iface_get_capability_group(int res, char *strict,$/;"	f	file:
ctrl_iface_get_capability_group_mgmt	ctrl_iface.c	/^static int ctrl_iface_get_capability_group_mgmt(int res, char *strict,$/;"	f	file:
ctrl_iface_get_capability_key_mgmt	ctrl_iface.c	/^static int ctrl_iface_get_capability_key_mgmt(int res, char *strict,$/;"	f	file:
ctrl_iface_get_capability_modes	ctrl_iface.c	/^static int ctrl_iface_get_capability_modes(int res, char *strict,$/;"	f	file:
ctrl_iface_get_capability_pairwise	ctrl_iface.c	/^static int ctrl_iface_get_capability_pairwise(int res, char *strict,$/;"	f	file:
ctrl_iface_get_capability_proto	ctrl_iface.c	/^static int ctrl_iface_get_capability_proto(int res, char *strict,$/;"	f	file:
ctrl_iface_get_capability_tdls	ctrl_iface.c	/^static int ctrl_iface_get_capability_tdls($/;"	f	file:
ctrl_iface_global_priv	ctrl_iface_named_pipe.c	/^struct ctrl_iface_global_priv {$/;"	s	file:
ctrl_iface_global_priv	ctrl_iface_udp.c	/^struct ctrl_iface_global_priv {$/;"	s	file:
ctrl_iface_global_priv	ctrl_iface_unix.c	/^struct ctrl_iface_global_priv {$/;"	s	file:
ctrl_iface_parse	ctrl_iface_named_pipe.c	/^static int ctrl_iface_parse(struct ctrl_iface_priv *priv, const char *params)$/;"	f	file:
ctrl_iface_priv	ctrl_iface_named_pipe.c	/^struct ctrl_iface_priv {$/;"	s	file:
ctrl_iface_priv	ctrl_iface_udp.c	/^struct ctrl_iface_priv {$/;"	s	file:
ctrl_iface_priv	ctrl_iface_unix.c	/^struct ctrl_iface_priv {$/;"	s	file:
ctrl_iface_read_completed	ctrl_iface_named_pipe.c	/^static VOID WINAPI ctrl_iface_read_completed(DWORD err, DWORD bytes,$/;"	f	file:
ctrl_iface_write_completed	ctrl_iface_named_pipe.c	/^static VOID WINAPI ctrl_iface_write_completed(DWORD err, DWORD bytes,$/;"	f	file:
ctrl_ifname	hostapd_cli.c	/^static char *ctrl_ifname = NULL;$/;"	v	file:
ctrl_ifname	wpa_cli.c	/^static char *ctrl_ifname = NULL;$/;"	v	file:
ctrl_interface	config.h	/^	char *ctrl_interface;$/;"	m	struct:wpa_config
ctrl_interface	wpa_supplicant_i.h	/^	char *ctrl_interface;$/;"	m	struct:wpa_params
ctrl_interface	wpa_supplicant_i.h	/^	const char *ctrl_interface;$/;"	m	struct:wpa_interface
ctrl_interface_group	config.h	/^	char *ctrl_interface_group;$/;"	m	struct:wpa_config
ctrl_interface_group	wpa_supplicant_i.h	/^	char *ctrl_interface_group;$/;"	m	struct:wpa_params
ctrl_interworking_connect	ctrl_iface.c	/^static int ctrl_interworking_connect(struct wpa_supplicant *wpa_s, char *dst,$/;"	f	file:
ctrl_interworking_select	ctrl_iface.c	/^static int ctrl_interworking_select(struct wpa_supplicant *wpa_s, char *param)$/;"	f	file:
ctrl_open_pipe	ctrl_iface_named_pipe.c	/^static int ctrl_open_pipe(struct ctrl_iface_priv *priv)$/;"	f	file:
ctx	gas_query.c	/^	void *ctx;$/;"	m	struct:gas_query_pending	file:
ctx	wpa_supplicant_i.h	/^	void *ctx;$/;"	m	struct:wpa_radio_work
ctx_hide_ap	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_hide_ap()$/;"	f	class:Peers
ctx_item	wpa_gui-qt4/peers.h	/^	QStandardItem *ctx_item;$/;"	m	class:Peers
ctx_p2p_connect	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_connect()$/;"	f	class:Peers
ctx_p2p_delete	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_delete()$/;"	f	class:Peers
ctx_p2p_display_pin	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_display_pin()$/;"	f	class:Peers
ctx_p2p_display_pin_pd	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_display_pin_pd()$/;"	f	class:Peers
ctx_p2p_enter_pin	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_enter_pin()$/;"	f	class:Peers
ctx_p2p_invite	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_invite()$/;"	f	class:Peers
ctx_p2p_listen	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_listen()$/;"	f	class:Peers
ctx_p2p_remove_group	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_remove_group()$/;"	f	class:Peers
ctx_p2p_req_pin	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_req_pin()$/;"	f	class:Peers
ctx_p2p_show_passphrase	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_show_passphrase()$/;"	f	class:Peers
ctx_p2p_show_pin	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_show_pin()$/;"	f	class:Peers
ctx_p2p_start	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_start()$/;"	f	class:Peers
ctx_p2p_start_group	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_start_group()$/;"	f	class:Peers
ctx_p2p_start_persistent	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_start_persistent()$/;"	f	class:Peers
ctx_p2p_stop	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_p2p_stop()$/;"	f	class:Peers
ctx_refresh	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_refresh()$/;"	f	class:Peers
ctx_show_ap	wpa_gui-qt4/peers.cpp	/^void Peers::ctx_show_ap()$/;"	f	class:Peers
cur_addr	bk_wpa_not_disp.c	/^char*  cur_addr;$/;"	v
cur_addr	wpa_not_disp.c	/^char*  cur_addr;$/;"	v
cur_mid	bk_wpa_not_disp.c	/^u32* cur_mid;$/;"	v
cur_mid	wpa_not_disp.c	/^u32* cur_mid;$/;"	v
current	gas_query.c	/^	struct gas_query_pending *current;$/;"	m	struct:gas_query	typeref:struct:gas_query::gas_query_pending	file:
current_bss	wpa_supplicant_i.h	/^	struct wpa_bss *current_bss;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_bss
current_ssid	wpa_supplicant_i.h	/^	struct wpa_ssid *current_ssid;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid
daemonize	wpa_supplicant_i.h	/^	int daemonize;$/;"	m	struct:wpa_params
data	eapol_test.c	/^	char *data;$/;"	m	struct:extra_radius_attr	file:
data	wpa_gui-qt4/eventhistory.cpp	/^QVariant EventListModel::data(const QModelIndex &index, int role) const$/;"	f	class:EventListModel
dbus	wpa_supplicant_i.h	/^	struct wpas_dbus_priv *dbus;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpas_dbus_priv
dbus_arg_direction	dbus/dbus_new_helpers.h	/^enum dbus_arg_direction { ARG_IN, ARG_OUT };$/;"	g
dbus_ctrl_interface	wpa_supplicant_i.h	/^	int dbus_ctrl_interface;$/;"	m	struct:wpa_params
dbus_groupobj_path	wpa_supplicant_i.h	/^	char *dbus_groupobj_path;$/;"	m	struct:wpa_supplicant
dbus_interface	dbus/dbus_new_helpers.h	/^	const char *dbus_interface;$/;"	m	struct:wpa_dbus_method_desc
dbus_interface	dbus/dbus_new_helpers.h	/^	const char *dbus_interface;$/;"	m	struct:wpa_dbus_property_desc
dbus_interface	dbus/dbus_new_helpers.h	/^	const char *dbus_interface;$/;"	m	struct:wpa_dbus_signal_desc
dbus_interface	dbus/dbus_new_introspect.c	/^	char *dbus_interface;$/;"	m	struct:interfaces	file:
dbus_method	dbus/dbus_new_helpers.h	/^	const char *dbus_method;$/;"	m	struct:wpa_dbus_method_desc
dbus_new_initialized	dbus/dbus_common_i.h	/^	int dbus_new_initialized;$/;"	m	struct:wpas_dbus_priv
dbus_new_path	wpa_supplicant_i.h	/^	char *dbus_new_path;$/;"	m	struct:wpa_supplicant
dbus_noc_refcnt	dbus/dbus_common_i.h	/^	int dbus_noc_refcnt;$/;"	m	struct:wpas_dbus_priv
dbus_path	wpa_supplicant_i.h	/^	char *dbus_path;$/;"	m	struct:wpa_supplicant
dbus_property	dbus/dbus_new_helpers.h	/^	const char *dbus_property;$/;"	m	struct:wpa_dbus_property_desc
dbus_signal	dbus/dbus_new_helpers.h	/^	const char *dbus_signal;$/;"	m	struct:wpa_dbus_signal_desc
debug	wpa_gui-qt4/wpagui.cpp	31;"	d	file:
debug	wpa_gui-qt4/wpagui.cpp	33;"	d	file:
debug_level	ctrl_iface_named_pipe.c	/^	int debug_level;$/;"	m	struct:wpa_ctrl_dst	file:
debug_level	ctrl_iface_udp.c	/^	int debug_level;$/;"	m	struct:wpa_ctrl_dst	file:
debug_level	ctrl_iface_unix.c	/^	int debug_level;$/;"	m	struct:wpa_ctrl_dst	file:
debug_level_str	ctrl_iface.c	/^static const char * debug_level_str(int level)$/;"	f	file:
debug_strings	dbus/dbus_new_handlers.c	/^static const char * const debug_strings[] = {$/;"	v	file:
default_icon	wpa_gui-qt4/peers.h	/^	QIcon *default_icon;$/;"	m	class:Peers
deinit	autoscan.h	/^	void (*deinit)(void *priv);$/;"	m	struct:autoscan_ops
deinit	bgscan.h	/^	void (*deinit)(void *priv);$/;"	m	struct:bgscan_ops
deinit	tests/test_wpa.c	/^static void deinit(struct wpa *wpa)$/;"	f	file:
delete_all_msg	notifier.c	/^static int delete_all_msg(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
delete_msg	notifier.c	/^static int delete_msg(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
delete_pending_action	action_handler.c	/^static void delete_pending_action(struct action_pending *not){$/;"	f	file:
deliver_notification	action_handler.c	/^static int deliver_notification(struct wpa_supplicant *wpa_s, struct action_handle *act, const u8 *sa, const u8 *payload, int freq)$/;"	f	file:
deviceFound	examples/p2p/p2p_find.py	/^def deviceFound(devicepath):$/;"	f
deviceLost	examples/p2p/p2p_find.py	/^def deviceLost(devicepath):$/;"	f
deviceLost	examples/p2p/p2p_flush.py	/^def deviceLost(devicepath):$/;"	f
deviceLost	examples/p2p/p2p_stop_find.py	/^def deviceLost(devicepath):$/;"	f
device_name	config.h	/^	char *device_name;$/;"	m	struct:wpa_config
device_type	config.h	/^	u8 device_type[WPS_DEV_TYPE_LEN];$/;"	m	struct:wpa_config
dialog_token	gas_query.c	/^	u8 dialog_token;$/;"	m	struct:gas_query_pending	file:
dialog_token	wmm_ac.h	/^	u8 dialog_token;$/;"	m	struct:wmm_ac_addts_request
dir	dbus/dbus_new_helpers.h	/^	enum dbus_arg_direction dir;$/;"	m	struct:wpa_dbus_argument	typeref:enum:wpa_dbus_argument::dbus_arg_direction
direction	wmm_ac.h	/^	enum wmm_ac_dir direction;$/;"	m	struct:wmm_ac_ts_setup_params	typeref:enum:wmm_ac_ts_setup_params::wmm_ac_dir
disableAllNetworks	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::disableAllNetworks()$/;"	f	class:WpaGui
disableListedNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::disableListedNetwork(bool disabled)$/;"	f	class:WpaGui
disableNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::disableNetwork(const QString &sel)$/;"	f	class:WpaGui
disable_ht	config_ssid.h	/^	int disable_ht;$/;"	m	struct:wpa_ssid
disable_ht40	config_ssid.h	/^	int disable_ht40;$/;"	m	struct:wpa_ssid
disable_ldpc	config_ssid.h	/^	int disable_ldpc;$/;"	m	struct:wpa_ssid
disable_max_amsdu	config_ssid.h	/^	int disable_max_amsdu;$/;"	m	struct:wpa_ssid
disable_scan_offload	config.h	/^	int disable_scan_offload;$/;"	m	struct:wpa_config
disable_sgi	config_ssid.h	/^	int disable_sgi;$/;"	m	struct:wpa_ssid
disable_vht	config_ssid.h	/^	int disable_vht;$/;"	m	struct:wpa_ssid
disabled	config_ssid.h	/^	int disabled;$/;"	m	struct:wpa_ssid
disabled_for_connect	config_ssid.h	/^	int disabled_for_connect;$/;"	m	struct:wpa_ssid
disabled_until	config_ssid.h	/^	struct os_reltime disabled_until;$/;"	m	struct:wpa_ssid	typeref:struct:wpa_ssid::os_reltime
disallow_aps_bssid	wpa_supplicant_i.h	/^	u8 *disallow_aps_bssid;$/;"	m	struct:wpa_supplicant
disallow_aps_bssid_count	wpa_supplicant_i.h	/^	size_t disallow_aps_bssid_count;$/;"	m	struct:wpa_supplicant
disallow_aps_ssid	wpa_supplicant_i.h	/^	struct wpa_ssid_value *disallow_aps_ssid;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid_value
disallow_aps_ssid_count	wpa_supplicant_i.h	/^	size_t disallow_aps_ssid_count;$/;"	m	struct:wpa_supplicant
disallowed_bssid	wpa_supplicant.c	/^int disallowed_bssid(struct wpa_supplicant *wpa_s, const u8 *bssid)$/;"	f
disallowed_ssid	wpa_supplicant.c	/^int disallowed_ssid(struct wpa_supplicant *wpa_s, const u8 *ssid,$/;"	f
disassoc_low_ack	config.h	/^	int disassoc_low_ack;$/;"	m	struct:wpa_config
disconnect	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::disconnect()$/;"	f	class:WpaGui
disconnectAction	wpa_gui-qt4/wpagui.h	/^	QAction *disconnectAction;$/;"	m	class:WpaGui
disconnect_filter	dbus/dbus_common.c	/^static DBusHandlerResult disconnect_filter(DBusConnection *conn,$/;"	f	file:
disconnect_reason	wpa_supplicant_i.h	/^	int disconnect_reason;$/;"	m	struct:wpa_supplicant
disconnect_reason_recoverable	events.c	/^static int disconnect_reason_recoverable(u16 reason_code)$/;"	f	file:
disconnected	wpa_supplicant_i.h	/^	int disconnected; \/* all connections disabled; i.e., do no reassociate$/;"	m	struct:wpa_supplicant
dispatch_data	dbus/dbus_common.c	/^static void dispatch_data(DBusConnection *con)$/;"	f	file:
dispatch_initial_dbus_messages	dbus/dbus_common.c	/^static void dispatch_initial_dbus_messages(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
display_message	bk_wpa_not_disp.c	/^static void display_message(const char *str){$/;"	f	file:
display_message	wpa_not_disp.c	/^static void display_message(const char *str){$/;"	f	file:
display_not	bk_wpa_not_disp.c	/^static void display_not(const char *str){$/;"	f	file:
display_not	wpa_not_disp.c	/^static void display_not(const char *str){$/;"	f	file:
distance	wnm_sta.h	/^	u32 distance; \/* valid if bearing_present=1 *\/$/;"	m	struct:neighbor_report
do_send_deprecated_prop_changed_signal	dbus/dbus_new_helpers.c	/^static void do_send_deprecated_prop_changed_signal($/;"	f	file:
do_send_prop_changed_signal	dbus/dbus_new_helpers.c	/^static void do_send_prop_changed_signal($/;"	f	file:
domain	config.h	/^	char **domain;$/;"	m	struct:wpa_cred
domain_name	bss.h	/^	struct wpabuf *domain_name;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
domain_name_list_contains	interworking.c	/^int domain_name_list_contains(struct wpabuf *domain_names,$/;"	f
domain_suffix_match	config.h	/^	char *domain_suffix_match;$/;"	m	struct:wpa_cred
done	wpa_gui-qt4/peers.cpp	/^void Peers::done(int r)$/;"	f	class:Peers
dont_quote	dbus/dbus_new_handlers.c	/^static const char * const dont_quote[] = {$/;"	v	file:
dont_quote	dbus/dbus_old_handlers.c	/^static const char  const *dont_quote[] = {$/;"	v	file:
dot11MeshConfirmTimeout	config_ssid.h	/^	int dot11MeshConfirmTimeout; \/* msec *\/$/;"	m	struct:wpa_ssid
dot11MeshHoldingTimeout	config_ssid.h	/^	int dot11MeshHoldingTimeout; \/* msec *\/$/;"	m	struct:wpa_ssid
dot11MeshMaxRetries	config_ssid.h	/^	int dot11MeshMaxRetries;$/;"	m	struct:wpa_ssid
dot11MeshRetryTimeout	config_ssid.h	/^	int dot11MeshRetryTimeout; \/* msec *\/$/;"	m	struct:wpa_ssid
dot11RSNAConfigPMKLifetime	config.h	/^	unsigned int dot11RSNAConfigPMKLifetime;$/;"	m	struct:wpa_config
dot11RSNAConfigPMKReauthThreshold	config.h	/^	unsigned int dot11RSNAConfigPMKReauthThreshold;$/;"	m	struct:wpa_config
dot11RSNAConfigSATimeout	config.h	/^	unsigned int dot11RSNAConfigSATimeout;$/;"	m	struct:wpa_config
double_value	dbus/dbus_dict_helpers.h	/^		double double_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
driver	wpa_priv.c	/^	struct wpa_driver_ops *driver;$/;"	m	struct:wpa_priv_interface	typeref:struct:wpa_priv_interface::wpa_driver_ops	file:
driver	wpa_supplicant_i.h	/^	const char *driver;$/;"	m	struct:wpa_interface
driver	wpa_supplicant_i.h	/^	struct wpa_driver_ops *driver;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_driver_ops
driver_name	wpa_priv.c	/^	char *driver_name;$/;"	m	struct:wpa_priv_interface	file:
driver_param	config.h	/^	char *driver_param;$/;"	m	struct:wpa_config
driver_param	wpa_supplicant_i.h	/^	const char *driver_param;$/;"	m	struct:wpa_interface
drv_addr	wpa_priv.c	/^	struct sockaddr_un drv_addr;$/;"	m	struct:wpa_priv_interface	typeref:struct:wpa_priv_interface::sockaddr_un	file:
drv_capa_known	wpa_supplicant_i.h	/^	unsigned int drv_capa_known;$/;"	m	struct:wpa_supplicant
drv_count	wpa_supplicant_i.h	/^	size_t drv_count;$/;"	m	struct:wpa_global
drv_enc	wpa_supplicant_i.h	/^	unsigned int drv_enc;$/;"	m	struct:wpa_supplicant
drv_flags	wpa_supplicant_i.h	/^	u64 drv_flags;$/;"	m	struct:wpa_supplicant
drv_priv	wpa_priv.c	/^	void *drv_priv;$/;"	m	struct:wpa_priv_interface	file:
drv_priv	wpa_supplicant_i.h	/^	void **drv_priv;$/;"	m	struct:wpa_global
drv_priv	wpa_supplicant_i.h	/^	void *drv_priv; \/* private data used by driver_ops *\/$/;"	m	struct:wpa_supplicant
drv_rrm_flags	wpa_supplicant_i.h	/^	unsigned int drv_rrm_flags;$/;"	m	struct:wpa_supplicant
drv_smps_modes	wpa_supplicant_i.h	/^	unsigned int drv_smps_modes;$/;"	m	struct:wpa_supplicant
dst	action_handler.c	/^	struct action_ctrl_dst *dst;$/;"	m	struct:action_handle	typeref:struct:action_handle::action_ctrl_dst	file:
dst	p2p_supplicant.c	/^	u8 dst[ETH_ALEN];$/;"	m	struct:send_action_work	file:
dtim_period	config.h	/^	int dtim_period;$/;"	m	struct:wpa_config
dtim_period	config_ssid.h	/^	int dtim_period;$/;"	m	struct:wpa_ssid
dummy_driver	preauth_test.c	/^static struct wpa_driver_ops dummy_driver;$/;"	v	typeref:struct:wpa_driver_ops	file:
dump_freq_data	wpa_supplicant.c	/^void dump_freq_data(struct wpa_supplicant *wpa_s, const char *title,$/;"	f
dump_scan_res	scan.c	/^static void dump_scan_res(struct wpa_scan_results *scan_res)$/;"	f	file:
duration	p2p_supplicant.c	/^	unsigned int duration;$/;"	m	struct:wpas_p2p_listen_work	file:
dynamic_test	notifier.c	/^static int dynamic_test = 0;$/;"	v	file:
eap	config_ssid.h	/^	struct eap_peer_config eap;$/;"	m	struct:wpa_ssid	typeref:struct:wpa_ssid::eap_peer_config
eap	interworking.c	/^	struct nai_realm_eap *eap;$/;"	m	struct:nai_realm	typeref:struct:nai_realm::nai_realm_eap	file:
eapChanged	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::eapChanged(int sel)$/;"	f	class:NetworkConfig
eap_count	interworking.c	/^	u8 eap_count;$/;"	m	struct:nai_realm	file:
eap_expected_failure	wpa_supplicant_i.h	/^	unsigned int eap_expected_failure:1;$/;"	m	struct:wpa_supplicant
eap_identity	eapol_test.c	/^	u8 *eap_identity;$/;"	m	struct:eapol_test_data	file:
eap_identity_len	eapol_test.c	/^	size_t eap_identity_len;$/;"	m	struct:eapol_test_data	file:
eap_method	config.h	/^	struct eap_method_type *eap_method;$/;"	m	struct:wpa_cred	typeref:struct:wpa_cred::eap_method_type
eap_peer_config_free	config.c	/^static void eap_peer_config_free(struct eap_peer_config *eap)$/;"	f	file:
eap_register_methods	eap_register.c	/^int eap_register_methods(void)$/;"	f
eap_type_text	eapol_test.c	/^static char *eap_type_text(u8 type)$/;"	f	file:
eap_workaround	config_ssid.h	/^	unsigned int eap_workaround;$/;"	m	struct:wpa_ssid
eapol	wpa_supplicant_i.h	/^	struct eapol_sm *eapol;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::eapol_sm
eapol_flags	config_ssid.h	/^	int eapol_flags;$/;"	m	struct:wpa_ssid
eapol_received	wpa_supplicant_i.h	/^	int eapol_received; \/* number of EAPOL packets received after the$/;"	m	struct:wpa_supplicant
eapol_sm_cb	eapol_test.c	/^static void eapol_sm_cb(struct eapol_sm *eapol, enum eapol_supp_result result,$/;"	f	file:
eapol_sm_reauth	eapol_test.c	/^static void eapol_sm_reauth(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
eapol_test	eapol_test.c	/^static struct eapol_test_data eapol_test;$/;"	v	typeref:struct:eapol_test_data	file:
eapol_test_cert_cb	eapol_test.c	/^static void eapol_test_cert_cb(void *ctx, int depth, const char *subject,$/;"	f	file:
eapol_test_compare_pmk	eapol_test.c	/^static int eapol_test_compare_pmk(struct eapol_test_data *e)$/;"	f	file:
eapol_test_data	eapol_test.c	/^struct eapol_test_data {$/;"	s	file:
eapol_test_eap_param_needed	eapol_test.c	/^static void eapol_test_eap_param_needed(void *ctx, enum wpa_ctrl_req_type field,$/;"	f	file:
eapol_test_eap_param_needed	eapol_test.c	478;"	d	file:
eapol_test_eapol_done_cb	eapol_test.c	/^static void eapol_test_eapol_done_cb(void *ctx)$/;"	f	file:
eapol_test_eapol_send	eapol_test.c	/^static int eapol_test_eapol_send(void *ctx, int type, const u8 *buf,$/;"	f	file:
eapol_test_get_config_blob	eapol_test.c	/^eapol_test_get_config_blob(void *ctx, const char *name)$/;"	f	file:
eapol_test_num_reauths	eapol_test.c	/^	int eapol_test_num_reauths;$/;"	m	struct:eapol_test_data	file:
eapol_test_poll	preauth_test.c	/^static void eapol_test_poll(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
eapol_test_set_anon_id	eapol_test.c	/^static void eapol_test_set_anon_id(void *ctx, const u8 *id, size_t len)$/;"	f	file:
eapol_test_set_config_blob	eapol_test.c	/^static void eapol_test_set_config_blob(void *ctx,$/;"	f	file:
eapol_test_terminate	eapol_test.c	/^static void eapol_test_terminate(int sig, void *signal_ctx)$/;"	f	file:
eapol_test_terminate	preauth_test.c	/^static void eapol_test_terminate(int sig, void *signal_ctx)$/;"	f	file:
eapol_test_timeout	eapol_test.c	/^static void eapol_test_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
eapol_test_timeout	preauth_test.c	/^static void eapol_test_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
eapol_test_write_cert	eapol_test.c	/^static void eapol_test_write_cert(FILE *f, const char *subject,$/;"	f	file:
eapol_version	config.h	/^	int eapol_version;$/;"	m	struct:wpa_config
edit	wpa_gui-qt4/stringquery.h	/^	QLineEdit *edit;$/;"	m	class:StringQuery
editListedNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::editListedNetwork()$/;"	f	class:WpaGui
editNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::editNetwork(const QString &sel)$/;"	f	class:WpaGui
editSelectedNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::editSelectedNetwork()$/;"	f	class:WpaGui
edit_network_id	wpa_gui-qt4/networkconfig.h	/^	int edit_network_id;$/;"	m	class:NetworkConfig
edit_started	wpa_cli.c	/^static int edit_started = 0;$/;"	v	file:
eh	wpa_gui-qt4/wpagui.h	/^	EventHistory *eh;$/;"	m	class:WpaGui
elm	wpa_gui-qt4/eventhistory.h	/^	EventListModel *elm;$/;"	m	class:EventHistory
enableAllNetworks	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::enableAllNetworks()$/;"	f	class:WpaGui
enableListedNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::enableListedNetwork(bool enabled)$/;"	f	class:WpaGui
enableNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::enableNetwork(const QString &sel)$/;"	f	class:WpaGui
enable_persistent	wpa_gui-qt4/peers.cpp	/^void Peers::enable_persistent(int id)$/;"	f	class:Peers
encoding	interworking.c	/^	u8 encoding;$/;"	m	struct:nai_realm	file:
encr	wps_supplicant.h	/^	const char *encr;$/;"	m	struct:wps_new_ap_settings
encrChanged	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::encrChanged(const QString &)$/;"	f	class:NetworkConfig
enter_pin	examples/wps-ap-cli	/^enter_pin()$/;"	f
enter_pin	wpa_gui-qt4/peers.cpp	/^void Peers::enter_pin()$/;"	f	class:Peers
entropy_file	wpa_supplicant_i.h	/^	char *entropy_file;$/;"	m	struct:wpa_params
err	wpa_gui-qt4/wpagui.cpp	/^	DWORD err;$/;"	m	class:ErrorMsg	file:
error	dbus/dbus_new_handlers_p2p.c	/^	int error;$/;"	m	struct:peer_group_data	file:
errors	action_handler.c	/^	int errors;$/;"	m	struct:action_ctrl_dst	file:
errors	ctrl_iface_named_pipe.c	/^	int errors;$/;"	m	struct:wpa_ctrl_dst	file:
errors	ctrl_iface_udp.c	/^	int errors;$/;"	m	struct:wpa_ctrl_dst	file:
errors	ctrl_iface_unix.c	/^	int errors;$/;"	m	struct:wpa_ctrl_dst	file:
est_throughput	bss.h	/^	unsigned int est_throughput;$/;"	m	struct:wpa_bss
eventAction	wpa_gui-qt4/wpagui.h	/^	QAction *eventAction;$/;"	m	class:WpaGui
eventHistory	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::eventHistory()$/;"	f	class:WpaGui
event_notify	wpa_gui-qt4/peers.cpp	/^void Peers::event_notify(WpaMsg msg)$/;"	f	class:Peers
exact_match	config.h	/^		int exact_match;$/;"	m	struct:wpa_cred::roaming_partner
excluded_ssid	config.h	/^	struct excluded_ssid {$/;"	s	struct:wpa_cred
excluded_ssid	config.h	/^	} *excluded_ssid;$/;"	m	struct:wpa_cred	typeref:struct:wpa_cred::excluded_ssid
export_keys	config_ssid.h	/^	int export_keys;$/;"	m	struct:wpa_ssid
ext_eapol_frame_io	wpa_supplicant_i.h	/^	unsigned int ext_eapol_frame_io:1;$/;"	m	struct:wpa_supplicant
ext_mgmt_frame_handling	wpa_supplicant_i.h	/^	unsigned int ext_mgmt_frame_handling:1;$/;"	m	struct:wpa_supplicant
ext_password	config.h	/^	int ext_password;$/;"	m	struct:wpa_cred
ext_password_backend	config.h	/^	char *ext_password_backend;$/;"	m	struct:wpa_config
ext_psk	config_ssid.h	/^	char *ext_psk;$/;"	m	struct:wpa_ssid
ext_pw	wpa_supplicant_i.h	/^	struct ext_password_data *ext_pw;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::ext_password_data
ext_work_id	wpa_supplicant_i.h	/^	unsigned int ext_work_id;$/;"	m	struct:wpa_supplicant
ext_work_in_progress	wpa_supplicant_i.h	/^	unsigned int ext_work_in_progress:1;$/;"	m	struct:wpa_supplicant
extended_capa	wpa_supplicant_i.h	/^	const u8 *extended_capa, *extended_capa_mask;$/;"	m	struct:wpa_supplicant
extended_capa_len	wpa_supplicant_i.h	/^	unsigned int extended_capa_len;$/;"	m	struct:wpa_supplicant
extended_capa_mask	wpa_supplicant_i.h	/^	const u8 *extended_capa, *extended_capa_mask;$/;"	m	struct:wpa_supplicant
external_scan_running	wpa_supplicant_i.h	/^	unsigned int external_scan_running:1;$/;"	m	struct:wpa_radio
external_sim	config.h	/^	int external_sim;$/;"	m	struct:wpa_config
extra_attrs	eapol_test.c	/^	struct extra_radius_attr *extra_attrs;$/;"	m	struct:eapol_test_data	typeref:struct:eapol_test_data::extra_radius_attr	file:
extra_blacklist_count	wpa_supplicant_i.h	/^	int extra_blacklist_count;$/;"	m	struct:wpa_supplicant
extra_radius_attr	eapol_test.c	/^struct extra_radius_attr {$/;"	s	file:
extra_roc_dur	wpa_supplicant_i.h	/^	unsigned int extra_roc_dur;$/;"	m	struct:wpa_supplicant
extract_interfaces	dbus/dbus_new_introspect.c	/^static void extract_interfaces(struct dl_list *list,$/;"	f	file:
extract_interfaces_methods	dbus/dbus_new_introspect.c	/^static void extract_interfaces_methods($/;"	f	file:
extract_interfaces_properties	dbus/dbus_new_introspect.c	/^static void extract_interfaces_properties($/;"	f	file:
extract_interfaces_signals	dbus/dbus_new_introspect.c	/^static void extract_interfaces_signals($/;"	f	file:
failed	hs20_supplicant.c	/^	unsigned int failed:1;$/;"	m	struct:osu_icon	file:
fast_periodic	notifier.c	/^static int fast_periodic(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
fast_reauth	config.h	/^	int fast_reauth;$/;"	m	struct:wpa_config
fd	action_handler.c	/^	int fd;$/;"	m	struct:action_handle	file:
fd	wpa_priv.c	/^	int fd;$/;"	m	struct:wpa_priv_interface	file:
fetch_all_anqp	wpa_supplicant_i.h	/^	unsigned int fetch_all_anqp:1;$/;"	m	struct:wpa_supplicant
fetch_anqp_in_progress	wpa_supplicant_i.h	/^	unsigned int fetch_anqp_in_progress:1;$/;"	m	struct:wpa_supplicant
fetch_osu_icon_in_progress	wpa_supplicant_i.h	/^	unsigned int fetch_osu_icon_in_progress:1;$/;"	m	struct:wpa_supplicant
fetch_osu_info	wpa_supplicant_i.h	/^	unsigned int fetch_osu_info:1;$/;"	m	struct:wpa_supplicant
fetch_osu_waiting_scan	wpa_supplicant_i.h	/^	unsigned int fetch_osu_waiting_scan:1;$/;"	m	struct:wpa_supplicant
field	wpa_gui-qt4/userdatarequest.h	/^	QString field;$/;"	m	class:UserDataRequest
fileStartServiceAction	wpa_gui-qt4/wpagui.h	/^	QAction *fileStartServiceAction;$/;"	m	class:WpaGui
fileStopServiceAction	wpa_gui-qt4/wpagui.h	/^	QAction *fileStopServiceAction;$/;"	m	class:WpaGui
filename	hs20_supplicant.c	/^	char filename[256];$/;"	m	struct:osu_icon	file:
fill_dict_with_properties	dbus/dbus_new_helpers.c	/^static dbus_bool_t fill_dict_with_properties($/;"	f	file:
filter_rssi	config.h	/^	int filter_rssi;$/;"	m	struct:wpa_config
filter_scan_res	scan.c	/^static void filter_scan_res(struct wpa_supplicant *wpa_s,$/;"	f	file:
filter_ssids	config.h	/^	int filter_ssids;$/;"	m	struct:wpa_config
find_addr	wpa_gui-qt4/peers.cpp	/^QStandardItem * Peers::find_addr(QString addr)$/;"	f	class:Peers
find_addr_type	wpa_gui-qt4/peers.cpp	/^QStandardItem * Peers::find_addr_type(QString addr, int type)$/;"	f	class:Peers
find_extra_attr	eapol_test.c	/^find_extra_attr(struct extra_radius_attr *attrs, u8 type)$/;"	f	file:
find_p2ps_substr	p2p_supplicant.c	/^static int find_p2ps_substr(struct p2ps_advertisement *adv_data,$/;"	f	file:
find_uuid	wpa_gui-qt4/peers.cpp	/^QStandardItem * Peers::find_uuid(QString uuid)$/;"	f	class:Peers
first_sched_scan	wpa_supplicant_i.h	/^	int first_sched_scan;$/;"	m	struct:wpa_supplicant
fixed_freq	config_ssid.h	/^	int fixed_freq;$/;"	m	struct:wpa_ssid
fixed_nominal_msdu	wmm_ac.h	/^	int fixed_nominal_msdu;$/;"	m	struct:wmm_ac_ts_setup_params
flags	bss.h	/^	unsigned int flags;$/;"	m	struct:wpa_bss
flags	wpa_cli.c	/^	enum wpa_cli_cmd_flags flags;$/;"	m	struct:wpa_cli_cmd	typeref:enum:wpa_cli_cmd::wpa_cli_cmd_flags	file:
flags	wpa_supplicant_i.h	/^		u16 flags;$/;"	m	struct:wpa_supplicant::__anon8
flags	wpa_supplicant_i.h	/^	unsigned int flags;$/;"	m	struct:wpa_used_freq_data
flush_object_timeout_handler	dbus/dbus_new_helpers.c	/^static void flush_object_timeout_handler(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
fname	bgscan_learn.c	/^	char *fname;$/;"	m	struct:bgscan_learn_data	file:
force_long_sd	wpa_supplicant_i.h	/^	int force_long_sd;$/;"	m	struct:wpa_supplicant
fqdn	config.h	/^		char fqdn[128];$/;"	m	struct:wpa_cred::roaming_partner
free_dbus_object_desc	dbus/dbus_new_helpers.c	/^void free_dbus_object_desc(struct wpa_dbus_object_desc *obj_dsc)$/;"	f
free_dbus_object_desc_cb	dbus/dbus_new_helpers.c	/^static void free_dbus_object_desc_cb(DBusConnection *connection, void *obj_dsc)$/;"	f	file:
free_hw_features	wpa_supplicant.c	/^void free_hw_features(struct wpa_supplicant *wpa_s)$/;"	f
freq	action_handler.c	/^	int freq;$/;"	m	struct:action_pending	file:
freq	bgscan_learn.c	/^	int freq;$/;"	m	struct:bgscan_learn_bss	file:
freq	bss.h	/^	int freq;$/;"	m	struct:wpa_bss
freq	gas_query.c	/^	int freq;$/;"	m	struct:gas_query_pending	file:
freq	p2p_supplicant.c	/^	unsigned int freq;$/;"	m	struct:send_action_work	file:
freq	p2p_supplicant.c	/^	unsigned int freq;$/;"	m	struct:wpas_p2p_listen_work	file:
freq	wnm_sta.h	/^	int freq;$/;"	m	struct:neighbor_report
freq	wpa_supplicant_i.h	/^		int freq;$/;"	m	struct:wpa_supplicant::__anon4
freq	wpa_supplicant_i.h	/^	int freq;$/;"	m	struct:wpa_used_freq_data
freq	wpa_supplicant_i.h	/^	unsigned int freq; \/* known frequency (MHz) or 0 for multiple\/unknown *\/$/;"	m	struct:wpa_radio_work
freq_allowed	events.c	/^static int freq_allowed(int *freqs, int freq)$/;"	f	file:
freq_included	p2p_supplicant.c	/^static int freq_included(const struct p2p_channels *channels, unsigned int freq)$/;"	f	file:
freq_list	config.h	/^	int *freq_list;$/;"	m	struct:wpa_config
freq_list	config_ssid.h	/^	int *freq_list;$/;"	m	struct:wpa_ssid
freq_range_to_channel_list	ctrl_iface.c	/^static int * freq_range_to_channel_list(struct wpa_supplicant *wpa_s, char *val)$/;"	f	file:
frequency	config_ssid.h	/^	int frequency;$/;"	m	struct:wpa_ssid
frequency	examples/p2p/p2p_group_add.py	/^	frequency = None$/;"	v
friendly_name	hs20_supplicant.c	/^	struct osu_lang_string friendly_name[OSU_MAX_ITEMS];$/;"	m	struct:osu_provider	typeref:struct:osu_provider::osu_lang_string	file:
friendly_name_count	hs20_supplicant.c	/^	size_t friendly_name_count;$/;"	m	struct:osu_provider	file:
ft_ies	wpa_supplicant_i.h	/^		u8 *ft_ies;$/;"	m	struct:wpa_supplicant::__anon4
ft_ies_len	wpa_supplicant_i.h	/^		size_t ft_ies_len;$/;"	m	struct:wpa_supplicant::__anon4
ft_rx_action	events.c	/^static void ft_rx_action(struct wpa_supplicant *wpa_s, const u8 *data,$/;"	f	file:
ft_used	wpa_supplicant_i.h	/^		int ft_used;$/;"	m	struct:wpa_supplicant::__anon4
gas	gas_query.c	/^	struct gas_query *gas;$/;"	m	struct:gas_query_pending	typeref:struct:gas_query_pending::gas_query	file:
gas	wpa_supplicant_i.h	/^	struct gas_query *gas;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::gas_query
gas_query	gas_query.c	/^struct gas_query {$/;"	s	file:
gas_query_append	gas_query.c	/^static int gas_query_append(struct gas_query_pending *query, const u8 *data,$/;"	f	file:
gas_query_cancel	gas_query.c	/^void gas_query_cancel(struct gas_query *gas, const u8 *dst, u8 dialog_token)$/;"	f
gas_query_deinit	gas_query.c	/^void gas_query_deinit(struct gas_query *gas)$/;"	f
gas_query_deinit	gas_query.h	/^static inline void gas_query_deinit(struct gas_query *gas)$/;"	f
gas_query_dialog_token_available	gas_query.c	/^static int gas_query_dialog_token_available(struct gas_query *gas,$/;"	f	file:
gas_query_done	gas_query.c	/^static void gas_query_done(struct gas_query *gas,$/;"	f	file:
gas_query_free	gas_query.c	/^static void gas_query_free(struct gas_query_pending *query, int del_list)$/;"	f	file:
gas_query_get_pending	gas_query.c	/^gas_query_get_pending(struct gas_query *gas, const u8 *addr, u8 dialog_token)$/;"	f	file:
gas_query_init	gas_query.c	/^struct gas_query * gas_query_init(struct wpa_supplicant *wpa_s)$/;"	f
gas_query_init	gas_query.h	/^static inline struct gas_query * gas_query_init(struct wpa_supplicant *wpa_s)$/;"	f
gas_query_pending	gas_query.c	/^struct gas_query_pending {$/;"	s	file:
gas_query_req	gas_query.c	/^int gas_query_req(struct gas_query *gas, const u8 *dst, int freq,$/;"	f
gas_query_result	gas_query.h	/^enum gas_query_result {$/;"	g
gas_query_rx	gas_query.c	/^int gas_query_rx(struct gas_query *gas, const u8 *da, const u8 *sa,$/;"	f
gas_query_rx_comeback	gas_query.c	/^static void gas_query_rx_comeback(struct gas_query *gas,$/;"	f	file:
gas_query_rx_initial	gas_query.c	/^static void gas_query_rx_initial(struct gas_query *gas,$/;"	f	file:
gas_query_start_cb	gas_query.c	/^static void gas_query_start_cb(struct wpa_radio_work *work, int deinit)$/;"	f	file:
gas_query_timeout	gas_query.c	/^static void gas_query_timeout(void *eloop_data, void *user_ctx)$/;"	f	file:
gas_query_tx	gas_query.c	/^static int gas_query_tx(struct gas_query *gas, struct gas_query_pending *query,$/;"	f	file:
gas_query_tx_comeback_req	gas_query.c	/^static void gas_query_tx_comeback_req(struct gas_query *gas,$/;"	f	file:
gas_query_tx_comeback_req_delay	gas_query.c	/^static void gas_query_tx_comeback_req_delay(struct gas_query *gas,$/;"	f	file:
gas_query_tx_comeback_timeout	gas_query.c	/^static void gas_query_tx_comeback_timeout(void *eloop_data, void *user_ctx)$/;"	f	file:
gas_query_tx_status	gas_query.c	/^static void gas_query_tx_status(struct wpa_supplicant *wpa_s,$/;"	f	file:
gas_request	ctrl_iface.c	/^static int gas_request(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
gas_resp_cb	interworking.c	/^static void gas_resp_cb(void *ctx, const u8 *addr, u8 dialog_token,$/;"	f	file:
gas_response_get	ctrl_iface.c	/^static int gas_response_get(struct wpa_supplicant *wpa_s, char *cmd, char *buf,$/;"	f	file:
gas_result_txt	gas_query.c	/^static const char * gas_result_txt(enum gas_query_result result)$/;"	f	file:
gas_send_request	interworking.c	/^int gas_send_request(struct wpa_supplicant *wpa_s, const u8 *dst,$/;"	f
get	config.c	/^	int (*get)(const char *name, struct wpa_config *config, long offset,$/;"	m	struct:global_parse_data	file:
getEapCapa	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::getEapCapa()$/;"	f	class:NetworkConfig
getMsg	wpa_gui-qt4/wpamsg.h	/^	QString getMsg() const { return msg; }$/;"	f	class:WpaMsg
getNetworkDisabled	wpa_gui-qt4/wpagui.cpp	/^int WpaGui::getNetworkDisabled(const QString &sel)$/;"	f	class:WpaGui
getPending	action_handler.c	/^static struct action_pending *getPending(struct action_handle *act, const u8 *addr,  u32 mid){$/;"	f	file:
getPriority	wpa_gui-qt4/wpamsg.h	/^	int getPriority() const { return priority; }$/;"	f	class:WpaMsg
getResults	wpa_gui-qt4/scanresults.cpp	/^void ScanResults::getResults()$/;"	f	class:ScanResults
getTimestamp	wpa_gui-qt4/wpamsg.h	/^	QDateTime getTimestamp() const { return timestamp; }$/;"	f	class:WpaMsg
get_ac_str	wmm_ac.c	/^static const char * get_ac_str(u8 ac)$/;"	f	file:
get_all_properties	dbus/dbus_new_helpers.c	/^static DBusMessage * get_all_properties(DBusMessage *message, char *interface,$/;"	f	file:
get_anqp	ctrl_iface.c	/^static int get_anqp(struct wpa_supplicant *wpa_s, char *dst)$/;"	f	file:
get_bss_freqs_in_ess	wpa_supplicant.c	/^static int * get_bss_freqs_in_ess(struct wpa_supplicant *wpa_s)$/;"	f	file:
get_bss_helper	dbus/dbus_new_handlers.c	/^static struct wpa_bss * get_bss_helper(struct bss_handler_args *args,$/;"	f	file:
get_cmd_arg_num	wpa_cli.c	/^static int get_cmd_arg_num(const char *str, int pos)$/;"	f	file:
get_direction_str	wmm_ac.c	/^static const char * get_direction_str(u8 direction)$/;"	f	file:
get_hs20_anqp	ctrl_iface.c	/^static int get_hs20_anqp(struct wpa_supplicant *wpa_s, char *dst)$/;"	f	file:
get_iface_by_dbus_path	dbus/dbus_new_handlers.c	/^static struct wpa_supplicant * get_iface_by_dbus_path($/;"	f	file:
get_mode	p2p_supplicant.c	/^static struct hostapd_hw_modes * get_mode(struct hostapd_hw_modes *modes,$/;"	f	file:
get_mode	scan.c	/^static struct hostapd_hw_modes * get_mode(struct hostapd_hw_modes *modes,$/;"	f	file:
get_mode	sme.c	/^static struct hostapd_hw_modes * get_mode(struct hostapd_hw_modes *modes,$/;"	f	file:
get_peer_hwaddr_helper	dbus/dbus_new_handlers.c	/^static int get_peer_hwaddr_helper(DBusMessage *message, const char *func_name,$/;"	f	file:
get_shared_radio_freqs	wpa_supplicant.c	/^int get_shared_radio_freqs(struct wpa_supplicant *wpa_s,$/;"	f
get_shared_radio_freqs_data	wpa_supplicant.c	/^int get_shared_radio_freqs_data(struct wpa_supplicant *wpa_s,$/;"	f
get_string	wpa_gui-qt4/stringquery.cpp	/^QString StringQuery::get_string()$/;"	f	class:StringQuery
getch	examples/p2p-nfc.py	/^def getch():$/;"	f
getter	dbus/dbus_new_helpers.h	/^	WPADBusPropertyAccessor getter;$/;"	m	struct:wpa_dbus_property_desc
global	ctrl_iface_named_pipe.c	/^	struct wpa_global *global;$/;"	m	struct:ctrl_iface_global_priv	typeref:struct:ctrl_iface_global_priv::wpa_global	file:
global	ctrl_iface_unix.c	/^	struct wpa_global *global;$/;"	m	struct:ctrl_iface_global_priv	typeref:struct:ctrl_iface_global_priv::wpa_global	file:
global	dbus/dbus_common_i.h	/^	struct wpa_global *global;$/;"	m	struct:wpas_dbus_priv	typeref:struct:wpas_dbus_priv::wpa_global
global	wpa_supplicant_i.h	/^	struct wpa_global *global;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_global
global_close_pipe	ctrl_iface_named_pipe.c	/^static void global_close_pipe(struct wpa_global_dst *dst)$/;"	f	file:
global_drv_priv	wpa_supplicant_i.h	/^	void *global_drv_priv;$/;"	m	struct:wpa_supplicant
global_fields	config.c	/^static const struct global_parse_data global_fields[] = {$/;"	v	typeref:struct:global_parse_data	file:
global_flush_broken_pipes	ctrl_iface_named_pipe.c	/^static void global_flush_broken_pipes(struct ctrl_iface_global_priv *priv)$/;"	f	file:
global_iface_read_completed	ctrl_iface_named_pipe.c	/^static VOID WINAPI global_iface_read_completed(DWORD err, DWORD bytes,$/;"	f	file:
global_iface_write_completed	ctrl_iface_named_pipe.c	/^static VOID WINAPI global_iface_write_completed(DWORD err, DWORD bytes,$/;"	f	file:
global_open_pipe	ctrl_iface_named_pipe.c	/^static int global_open_pipe(struct ctrl_iface_global_priv *priv)$/;"	f	file:
global_parse_data	config.c	/^struct global_parse_data {$/;"	s	file:
go_dev_addr	wpa_supplicant_i.h	/^	u8 go_dev_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
go_intent	examples/p2p/p2p_connect.py	/^	go_intent = None$/;"	v	class:P2P_Connect
go_p2p_dev_addr	config_ssid.h	/^	u8 go_p2p_dev_addr[ETH_ALEN];$/;"	m	struct:wpa_ssid
go_params	wpa_supplicant_i.h	/^	struct p2p_go_neg_results *go_params;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::p2p_go_neg_results
group_changed_data	dbus/dbus_new.c	/^struct group_changed_data {$/;"	s	file:
group_cipher	config_ssid.h	/^	int group_cipher;$/;"	m	struct:wpa_ssid
group_cipher	wpa_supplicant_i.h	/^	int group_cipher;$/;"	m	struct:wpa_supplicant
group_formation_reported	wpa_supplicant_i.h	/^	unsigned int group_formation_reported:1;$/;"	m	struct:wpa_supplicant
group_icon	wpa_gui-qt4/peers.h	/^	QIcon *group_icon;$/;"	m	class:Peers
group_only	ctrl_iface.c	/^	int group_only;$/;"	m	struct:cipher_info	file:
handle_not_response	notifier.c	/^static void handle_not_response(char *buf, size_t len){$/;"	f	file:
handler	hostapd_cli.c	/^	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);$/;"	m	struct:hostapd_cli_cmd	file:
handler	notifier.c	/^	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);$/;"	m	struct:not_cmd	file:
handler	wpa_cli.c	/^	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);$/;"	m	struct:wpa_cli_cmd	file:
handler	wpa_not_disp.c	/^	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);$/;"	m	struct:not_cmd	file:
has_channel	p2p_supplicant.c	/^static int has_channel(struct wpa_global *global,$/;"	f	file:
has_proto_match	interworking.c	/^static int has_proto_match(const u8 *pos, const u8 *end, u8 proto)$/;"	f	file:
has_proto_port_match	interworking.c	/^static int has_proto_port_match(const u8 *pos, const u8 *end, u8 proto,$/;"	f	file:
has_wep_key	events.c	/^static int has_wep_key(struct wpa_ssid *ssid)$/;"	f	file:
headerData	wpa_gui-qt4/eventhistory.cpp	/^QVariant EventListModel::headerData(int section, Qt::Orientation orientation,$/;"	f	class:EventListModel
height	hs20_supplicant.c	/^	u16 height;$/;"	m	struct:osu_icon	file:
helpAbout	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::helpAbout()$/;"	f	class:WpaGui
helpContents	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::helpContents()$/;"	f	class:WpaGui
helpIndex	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::helpIndex()$/;"	f	class:WpaGui
hessid	bss.h	/^	u8 hessid[ETH_ALEN];$/;"	m	struct:wpa_bss
hessid	config.h	/^	u8 hessid[ETH_ALEN];$/;"	m	struct:wpa_config
hfile	wpa_cli.c	/^static char *hfile = NULL;$/;"	v	file:
hideAction	wpa_gui-qt4/wpagui.h	/^	QAction *hideAction;$/;"	m	class:WpaGui
hide_ap	wpa_gui-qt4/peers.h	/^	bool hide_ap;$/;"	m	class:Peers
hostapd_cli_action	hostapd_cli.c	/^static void hostapd_cli_action(struct wpa_ctrl *ctrl)$/;"	f	file:
hostapd_cli_action_process	hostapd_cli.c	/^static void hostapd_cli_action_process(char *msg, size_t len)$/;"	f	file:
hostapd_cli_attached	hostapd_cli.c	/^static int hostapd_cli_attached = 0;$/;"	v	file:
hostapd_cli_cleanup	hostapd_cli.c	/^static void hostapd_cli_cleanup(void)$/;"	f	file:
hostapd_cli_close_connection	hostapd_cli.c	/^static void hostapd_cli_close_connection(void)$/;"	f	file:
hostapd_cli_cmd	hostapd_cli.c	/^struct hostapd_cli_cmd {$/;"	s	file:
hostapd_cli_cmd_all_sta	hostapd_cli.c	/^static int hostapd_cli_cmd_all_sta(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_bss_tm_req	hostapd_cli.c	/^static int hostapd_cli_cmd_bss_tm_req(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_chan_switch	hostapd_cli.c	/^static int hostapd_cli_cmd_chan_switch(struct wpa_ctrl *ctrl,$/;"	f	file:
hostapd_cli_cmd_deauthenticate	hostapd_cli.c	/^static int hostapd_cli_cmd_deauthenticate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_disable	hostapd_cli.c	/^static int hostapd_cli_cmd_disable(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_disassoc_imminent	hostapd_cli.c	/^static int hostapd_cli_cmd_disassoc_imminent(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_disassociate	hostapd_cli.c	/^static int hostapd_cli_cmd_disassociate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_enable	hostapd_cli.c	/^static int hostapd_cli_cmd_enable(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_erp_flush	hostapd_cli.c	/^static int hostapd_cli_cmd_erp_flush(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_ess_disassoc	hostapd_cli.c	/^static int hostapd_cli_cmd_ess_disassoc(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_get	hostapd_cli.c	/^static int hostapd_cli_cmd_get(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_get_config	hostapd_cli.c	/^static int hostapd_cli_cmd_get_config(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_help	hostapd_cli.c	/^static int hostapd_cli_cmd_help(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_hs20_deauth_req	hostapd_cli.c	/^static int hostapd_cli_cmd_hs20_deauth_req(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_hs20_wnm_notif	hostapd_cli.c	/^static int hostapd_cli_cmd_hs20_wnm_notif(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_interface	hostapd_cli.c	/^static int hostapd_cli_cmd_interface(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_level	hostapd_cli.c	/^static int hostapd_cli_cmd_level(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_license	hostapd_cli.c	/^static int hostapd_cli_cmd_license(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_mib	hostapd_cli.c	/^static int hostapd_cli_cmd_mib(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_new_sta	hostapd_cli.c	/^static int hostapd_cli_cmd_new_sta(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_nfc_get_handover_sel	hostapd_cli.c	/^static int hostapd_cli_cmd_nfc_get_handover_sel(struct wpa_ctrl *ctrl,$/;"	f	file:
hostapd_cli_cmd_ping	hostapd_cli.c	/^static int hostapd_cli_cmd_ping(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_push	hostapd_cli.c	/^static int hostapd_cli_cmd_push(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_quit	hostapd_cli.c	/^static int hostapd_cli_cmd_quit(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_reload	hostapd_cli.c	/^static int hostapd_cli_cmd_reload(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_relog	hostapd_cli.c	/^static int hostapd_cli_cmd_relog(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_sa_query	hostapd_cli.c	/^static int hostapd_cli_cmd_sa_query(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_send_qos_map_conf	hostapd_cli.c	/^static int hostapd_cli_cmd_send_qos_map_conf(struct wpa_ctrl *ctrl,$/;"	f	file:
hostapd_cli_cmd_set	hostapd_cli.c	/^static int hostapd_cli_cmd_set(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_set_nottime	hostapd_cli.c	/^static int hostapd_cli_cmd_set_nottime(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_set_qos_map_set	hostapd_cli.c	/^static int hostapd_cli_cmd_set_qos_map_set(struct wpa_ctrl *ctrl,$/;"	f	file:
hostapd_cli_cmd_sta	hostapd_cli.c	/^static int hostapd_cli_cmd_sta(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_status	hostapd_cli.c	/^static int hostapd_cli_cmd_status(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_vendor	hostapd_cli.c	/^static int hostapd_cli_cmd_vendor(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
hostapd_cli_cmd_wps_ap_pin	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_ap_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_wps_cancel	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_cancel(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_wps_check_pin	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_check_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_wps_config	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_config(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_wps_get_status	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_get_status(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_wps_nfc_config_token	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_nfc_config_token(struct wpa_ctrl *ctrl,$/;"	f	file:
hostapd_cli_cmd_wps_nfc_tag_read	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_nfc_tag_read(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_wps_nfc_token	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_nfc_token(struct wpa_ctrl *ctrl,$/;"	f	file:
hostapd_cli_cmd_wps_pbc	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_pbc(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_cmd_wps_pin	hostapd_cli.c	/^static int hostapd_cli_cmd_wps_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_commands	hostapd_cli.c	/^static struct hostapd_cli_cmd hostapd_cli_commands[] = {$/;"	v	typeref:struct:hostapd_cli_cmd	file:
hostapd_cli_delnot	hostapd_cli.c	/^static int hostapd_cli_delnot(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
hostapd_cli_edit_cmd_cb	hostapd_cli.c	/^static void hostapd_cli_edit_cmd_cb(void *ctx, char *cmd)$/;"	f	file:
hostapd_cli_edit_eof_cb	hostapd_cli.c	/^static void hostapd_cli_edit_eof_cb(void *ctx)$/;"	f	file:
hostapd_cli_eloop_terminate	hostapd_cli.c	/^static void hostapd_cli_eloop_terminate(int sig, void *signal_ctx)$/;"	f	file:
hostapd_cli_exec	hostapd_cli.c	/^static int hostapd_cli_exec(const char *program, const char *arg1,$/;"	f	file:
hostapd_cli_full_license	hostapd_cli.c	/^static const char *hostapd_cli_full_license =$/;"	v	file:
hostapd_cli_interactive	hostapd_cli.c	/^static void hostapd_cli_interactive(void)$/;"	f	file:
hostapd_cli_license	hostapd_cli.c	/^static const char *hostapd_cli_license =$/;"	v	file:
hostapd_cli_list_interfaces	hostapd_cli.c	/^static void hostapd_cli_list_interfaces(struct wpa_ctrl *ctrl)$/;"	f	file:
hostapd_cli_msg_cb	hostapd_cli.c	/^static void hostapd_cli_msg_cb(char *msg, size_t len)$/;"	f	file:
hostapd_cli_open_connection	hostapd_cli.c	/^static struct wpa_ctrl * hostapd_cli_open_connection(const char *ifname)$/;"	f	file:
hostapd_cli_ping	hostapd_cli.c	/^static void hostapd_cli_ping(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
hostapd_cli_quit	hostapd_cli.c	/^static int hostapd_cli_quit = 0;$/;"	v	file:
hostapd_cli_recv_pending	hostapd_cli.c	/^static void hostapd_cli_recv_pending(struct wpa_ctrl *ctrl, int in_read,$/;"	f	file:
hostapd_cli_version	hostapd_cli.c	/^static const char *hostapd_cli_version =$/;"	v	file:
hostapd_get_eap_user	tests/link_test.c	/^hostapd_get_eap_user(const struct hostapd_bss_config *conf, const u8 *identity,$/;"	f
hostapd_get_vlan_id_ifname	tests/link_test.c	/^const char * hostapd_get_vlan_id_ifname(struct hostapd_vlan *vlan, int vlan_id)$/;"	f
hostapd_logger_cb	eapol_test.c	/^static void hostapd_logger_cb(void *ctx, const u8 *addr, unsigned int module,$/;"	f	file:
hs20	config.h	/^	int hs20;$/;"	m	struct:wpa_config
hs20_anqp_send_req	hs20_supplicant.c	/^int hs20_anqp_send_req(struct wpa_supplicant *wpa_s, const u8 *dst, u32 stypes,$/;"	f
hs20_build_anqp_req	hs20_supplicant.c	/^struct wpabuf * hs20_build_anqp_req(u32 stypes, const u8 *payload,$/;"	f
hs20_cancel_fetch_osu	hs20_supplicant.c	/^void hs20_cancel_fetch_osu(struct wpa_supplicant *wpa_s)$/;"	f
hs20_capability_list	bss.h	/^	struct wpabuf *hs20_capability_list;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
hs20_connection_capability	bss.h	/^	struct wpabuf *hs20_connection_capability;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
hs20_continue_icon_fetch	hs20_supplicant.c	/^static void hs20_continue_icon_fetch(void *eloop_ctx, void *sock_ctx)$/;"	f	file:
hs20_deinit	hs20_supplicant.c	/^void hs20_deinit(struct wpa_supplicant *wpa_s)$/;"	f
hs20_fetch_osu	hs20_supplicant.c	/^int hs20_fetch_osu(struct wpa_supplicant *wpa_s)$/;"	f
hs20_free_osu_prov	hs20_supplicant.c	/^void hs20_free_osu_prov(struct wpa_supplicant *wpa_s)$/;"	f
hs20_free_osu_prov_entry	hs20_supplicant.c	/^static void hs20_free_osu_prov_entry(struct osu_provider *prov)$/;"	f	file:
hs20_get_nai_home_realm_list	ctrl_iface.c	/^static int hs20_get_nai_home_realm_list(struct wpa_supplicant *wpa_s,$/;"	f	file:
hs20_get_pps_mo_id	hs20_supplicant.c	/^int hs20_get_pps_mo_id(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid)$/;"	f
hs20_icon_fetch_failed	hs20_supplicant.c	/^void hs20_icon_fetch_failed(struct wpa_supplicant *wpa_s)$/;"	f
hs20_icon_request	ctrl_iface.c	/^static int hs20_icon_request(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
hs20_nai_home_realm_list	ctrl_iface.c	/^static int hs20_nai_home_realm_list(struct wpa_supplicant *wpa_s,$/;"	f	file:
hs20_next_osu_icon	hs20_supplicant.c	/^void hs20_next_osu_icon(struct wpa_supplicant *wpa_s)$/;"	f
hs20_notify_parse_done	hs20_supplicant.c	/^void hs20_notify_parse_done(struct wpa_supplicant *wpa_s)$/;"	f
hs20_operating_class	bss.h	/^	struct wpabuf *hs20_operating_class;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
hs20_operator_friendly_name	bss.h	/^	struct wpabuf *hs20_operator_friendly_name;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
hs20_osu_add_prov	hs20_supplicant.c	/^static void hs20_osu_add_prov(struct wpa_supplicant *wpa_s, struct wpa_bss *bss,$/;"	f	file:
hs20_osu_fetch_done	hs20_supplicant.c	/^static void hs20_osu_fetch_done(struct wpa_supplicant *wpa_s)$/;"	f	file:
hs20_osu_icon_fetch	hs20_supplicant.c	/^void hs20_osu_icon_fetch(struct wpa_supplicant *wpa_s)$/;"	f
hs20_osu_icon_fetch_result	hs20_supplicant.c	/^static void hs20_osu_icon_fetch_result(struct wpa_supplicant *wpa_s, int res)$/;"	f	file:
hs20_osu_providers_list	bss.h	/^	struct wpabuf *hs20_osu_providers_list;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
hs20_osu_scan_res_handler	hs20_supplicant.c	/^static void hs20_osu_scan_res_handler(struct wpa_supplicant *wpa_s,$/;"	f	file:
hs20_parse_rx_hs20_anqp_resp	hs20_supplicant.c	/^void hs20_parse_rx_hs20_anqp_resp(struct wpa_supplicant *wpa_s,$/;"	f
hs20_process_icon_binary_file	hs20_supplicant.c	/^static int hs20_process_icon_binary_file(struct wpa_supplicant *wpa_s,$/;"	f	file:
hs20_put_anqp_req	hs20_supplicant.c	/^void hs20_put_anqp_req(u32 stypes, const u8 *payload, size_t payload_len,$/;"	f
hs20_rx_deauth_imminent_notice	hs20_supplicant.c	/^void hs20_rx_deauth_imminent_notice(struct wpa_supplicant *wpa_s, u8 code,$/;"	f
hs20_rx_subscription_remediation	hs20_supplicant.c	/^void hs20_rx_subscription_remediation(struct wpa_supplicant *wpa_s,$/;"	f
hs20_set_osu_access_permission	hs20_supplicant.c	/^static void hs20_set_osu_access_permission(const char *osu_dir,$/;"	f	file:
hs20_start_osu_scan	hs20_supplicant.c	/^void hs20_start_osu_scan(struct wpa_supplicant *wpa_s)$/;"	f
hs20_wan_metrics	bss.h	/^	struct wpabuf *hs20_wan_metrics;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
ht40	config_ssid.h	/^	int ht40;$/;"	m	struct:wpa_ssid
ht40_intolerant	config_ssid.h	/^	int ht40_intolerant;$/;"	m	struct:wpa_ssid
ht_mcs	config_ssid.h	/^	char *ht_mcs;$/;"	m	struct:wpa_ssid
ht_sec_chan	wpa_supplicant_i.h	/^		       HT_SEC_CHAN_BELOW } ht_sec_chan;$/;"	m	struct:wpa_supplicant::__anon4	typeref:enum:wpa_supplicant::__anon4::__anon5
hw	wpa_supplicant_i.h	/^	} hw;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::__anon8
hw_capab	wpa_supplicant_i.h	/^	} hw_capab;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::local_hw_capab
ibss_check_rsn_completed	ibss_rsn.c	/^static void ibss_check_rsn_completed(struct ibss_rsn_peer *peer)$/;"	f	file:
ibss_mesh_setup_freq	wpa_supplicant.c	/^void ibss_mesh_setup_freq(struct wpa_supplicant *wpa_s,$/;"	f
ibss_rsn	ibss_rsn.h	/^	struct ibss_rsn *ibss_rsn;$/;"	m	struct:ibss_rsn_peer	typeref:struct:ibss_rsn_peer::ibss_rsn
ibss_rsn	ibss_rsn.h	/^struct ibss_rsn {$/;"	s
ibss_rsn	wpa_supplicant_i.h	/^	struct ibss_rsn *ibss_rsn;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::ibss_rsn
ibss_rsn_auth_init	ibss_rsn.c	/^static int ibss_rsn_auth_init(struct ibss_rsn *ibss_rsn,$/;"	f	file:
ibss_rsn_auth_init_group	ibss_rsn.c	/^static int ibss_rsn_auth_init_group(struct ibss_rsn *ibss_rsn,$/;"	f	file:
ibss_rsn_auth_timeout	ibss_rsn.c	/^static void ibss_rsn_auth_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
ibss_rsn_deinit	ibss_rsn.c	/^void ibss_rsn_deinit(struct ibss_rsn *ibss_rsn)$/;"	f
ibss_rsn_disconnect	ibss_rsn.c	/^static void ibss_rsn_disconnect(void *ctx, const u8 *addr, u16 reason)$/;"	f	file:
ibss_rsn_eapol_dst_supp	ibss_rsn.c	/^static int ibss_rsn_eapol_dst_supp(const u8 *buf, size_t len)$/;"	f	file:
ibss_rsn_free	ibss_rsn.c	/^static void ibss_rsn_free(struct ibss_rsn_peer *peer)$/;"	f	file:
ibss_rsn_get_peer	ibss_rsn.c	/^static struct ibss_rsn_peer * ibss_rsn_get_peer(struct ibss_rsn *ibss_rsn,$/;"	f	file:
ibss_rsn_handle_auth	ibss_rsn.c	/^void ibss_rsn_handle_auth(struct ibss_rsn *ibss_rsn, const u8 *auth_frame,$/;"	f
ibss_rsn_handle_auth_1_of_2	ibss_rsn.c	/^static void ibss_rsn_handle_auth_1_of_2(struct ibss_rsn *ibss_rsn,$/;"	f	file:
ibss_rsn_init	ibss_rsn.c	/^struct ibss_rsn * ibss_rsn_init(struct wpa_supplicant *wpa_s)$/;"	f
ibss_rsn_is_auth_started	ibss_rsn.c	/^static int ibss_rsn_is_auth_started(struct ibss_rsn_peer * peer)$/;"	f	file:
ibss_rsn_peer	ibss_rsn.h	/^struct ibss_rsn_peer {$/;"	s
ibss_rsn_peer_authenticated	ibss_rsn.c	/^static int ibss_rsn_peer_authenticated(struct ibss_rsn *ibss_rsn,$/;"	f	file:
ibss_rsn_peer_init	ibss_rsn.c	/^ibss_rsn_peer_init(struct ibss_rsn *ibss_rsn, const u8 *addr)$/;"	f	file:
ibss_rsn_process_rx_eapol	ibss_rsn.c	/^static int ibss_rsn_process_rx_eapol(struct ibss_rsn *ibss_rsn,$/;"	f	file:
ibss_rsn_rx_eapol	ibss_rsn.c	/^int ibss_rsn_rx_eapol(struct ibss_rsn *ibss_rsn, const u8 *src_addr,$/;"	f
ibss_rsn_send_auth	ibss_rsn.c	/^static int ibss_rsn_send_auth(struct ibss_rsn *ibss_rsn, const u8 *da, int seq)$/;"	f	file:
ibss_rsn_set_psk	ibss_rsn.c	/^void ibss_rsn_set_psk(struct ibss_rsn *ibss_rsn, const u8 *psk)$/;"	f
ibss_rsn_start	ibss_rsn.c	/^int ibss_rsn_start(struct ibss_rsn *ibss_rsn, const u8 *addr)$/;"	f
ibss_rsn_stop	ibss_rsn.c	/^void ibss_rsn_stop(struct ibss_rsn *ibss_rsn, const u8 *peermac)$/;"	f
ibss_rsn_supp_init	ibss_rsn.c	/^static int ibss_rsn_supp_init(struct ibss_rsn_peer *peer, const u8 *own_addr,$/;"	f	file:
ibss_set_sta_authorized	ibss_rsn.c	/^static void ibss_set_sta_authorized(struct ibss_rsn *ibss_rsn,$/;"	f	file:
icon	hs20_supplicant.c	/^	struct osu_icon icon[OSU_MAX_ITEMS];$/;"	m	struct:osu_provider	typeref:struct:osu_provider::osu_icon	file:
icon_count	hs20_supplicant.c	/^	size_t icon_count;$/;"	m	struct:osu_provider	file:
icon_type	hs20_supplicant.c	/^	char icon_type[256];$/;"	m	struct:osu_icon	file:
id	bss.h	/^	unsigned int id;$/;"	m	struct:wpa_bss
id	config.h	/^	int id;$/;"	m	struct:wpa_cred
id	config_ssid.h	/^	int id;$/;"	m	struct:wpa_ssid
id	dbus/dbus_new_handlers.h	/^	unsigned int id;$/;"	m	struct:bss_handler_args
id	hs20_supplicant.c	/^	unsigned int id;$/;"	m	struct:osu_icon	file:
id	wpa_supplicant_i.h	/^	unsigned int id;$/;"	m	struct:wpa_external_work
id_str	config_ssid.h	/^	char *id_str;$/;"	m	struct:wpa_ssid
ie_len	bss.h	/^	size_t ie_len;$/;"	m	struct:wpa_bss
ieee80211_11_get_tfs_ie	wnm_sta.c	/^static int ieee80211_11_get_tfs_ie(struct wpa_supplicant *wpa_s, u8 *buf,$/;"	f	file:
ieee80211_11_set_tfs_ie	wnm_sta.c	/^static int ieee80211_11_set_tfs_ie(struct wpa_supplicant *wpa_s,$/;"	f	file:
ieee80211w	config_ssid.h	/^	enum mfp_options ieee80211w;$/;"	m	struct:wpa_ssid	typeref:enum:wpa_ssid::mfp_options
ieee802_11_rx_bss_trans_mgmt_req	wnm_sta.c	/^static void ieee802_11_rx_bss_trans_mgmt_req(struct wpa_supplicant *wpa_s,$/;"	f	file:
ieee802_11_rx_wnm_action	wnm_sta.c	/^void ieee802_11_rx_wnm_action(struct wpa_supplicant *wpa_s,$/;"	f
ieee802_11_rx_wnm_notif_req	wnm_sta.c	/^static void ieee802_11_rx_wnm_notif_req(struct wpa_supplicant *wpa_s,$/;"	f	file:
ieee802_11_rx_wnm_notif_req_wfa	wnm_sta.c	/^static void ieee802_11_rx_wnm_notif_req_wfa(struct wpa_supplicant *wpa_s,$/;"	f	file:
ieee802_11_rx_wnmsleep_resp	wnm_sta.c	/^static void ieee802_11_rx_wnmsleep_resp(struct wpa_supplicant *wpa_s,$/;"	f	file:
ieee802_11_send_wnmsleep_req	wnm_sta.c	/^int ieee802_11_send_wnmsleep_req(struct wpa_supplicant *wpa_s,$/;"	f
ieee802_1x_alloc_kay_sm	wpas_kay.c	/^int ieee802_1x_alloc_kay_sm(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid)$/;"	f
ieee802_1x_alloc_kay_sm	wpas_kay.h	/^static inline int ieee802_1x_alloc_kay_sm(struct wpa_supplicant *wpa_s,$/;"	f
ieee802_1x_auth_get_msk	wpas_kay.c	/^static int ieee802_1x_auth_get_msk(struct wpa_supplicant *wpa_s, const u8 *addr,$/;"	f	file:
ieee802_1x_auth_get_session_id	wpas_kay.c	/^static int ieee802_1x_auth_get_session_id(struct wpa_supplicant *wpa_s,$/;"	f	file:
ieee802_1x_dealloc_kay_sm	wpas_kay.c	/^void ieee802_1x_dealloc_kay_sm(struct wpa_supplicant *wpa_s)$/;"	f
ieee802_1x_dealloc_kay_sm	wpas_kay.h	/^static inline void ieee802_1x_dealloc_kay_sm(struct wpa_supplicant *wpa_s)$/;"	f
ieee802_1x_decapsulate_radius	eapol_test.c	/^static void ieee802_1x_decapsulate_radius(struct eapol_test_data *e)$/;"	f	file:
ieee802_1x_encapsulate_radius	eapol_test.c	/^static void ieee802_1x_encapsulate_radius(struct eapol_test_data *e,$/;"	f	file:
ieee802_1x_get_keys	eapol_test.c	/^static void ieee802_1x_get_keys(struct eapol_test_data *e,$/;"	f	file:
ieee802_1x_notify_create_actor	wpas_kay.c	/^void * ieee802_1x_notify_create_actor(struct wpa_supplicant *wpa_s,$/;"	f
ieee802_1x_notify_create_actor	wpas_kay.h	/^ieee802_1x_notify_create_actor(struct wpa_supplicant *wpa_s,$/;"	f
ieee802_1x_receive_auth	eapol_test.c	/^ieee802_1x_receive_auth(struct radius_msg *msg, struct radius_msg *req,$/;"	f	file:
ifaces	wpa_supplicant_i.h	/^	struct dl_list ifaces; \/* struct wpa_supplicant::radio_list entries *\/$/;"	m	struct:wpa_radio	typeref:struct:wpa_radio::dl_list
ifaces	wpa_supplicant_i.h	/^	struct wpa_supplicant *ifaces;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpa_supplicant
ifmsh	wpa_supplicant_i.h	/^	struct hostapd_iface *ifmsh;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::hostapd_iface
ifname	examples/p2p-nfc.py	/^ifname = None$/;"	v
ifname	wpa_priv.c	/^	char *ifname;$/;"	m	struct:wpa_priv_interface	file:
ifname	wpa_supplicant_i.h	/^	char ifname[100];$/;"	m	struct:wpa_supplicant
ifname	wpa_supplicant_i.h	/^	const char *ifname;$/;"	m	struct:wpa_interface
ifname_prefix	wpa_cli.c	/^static char *ifname_prefix = NULL;$/;"	v	file:
ignore_broadcast_ssid	config_ssid.h	/^	int ignore_broadcast_ssid;$/;"	m	struct:wpa_ssid
ignore_old_scan_res	config.h	/^	int ignore_old_scan_res;$/;"	m	struct:wpa_config
imsi	config.h	/^	char *imsi;$/;"	m	struct:wpa_cred
imsi	wpa_supplicant_i.h	/^	char imsi[20];$/;"	m	struct:wpa_supplicant
inTray	wpa_gui-qt4/wpagui.h	/^	bool inTray;$/;"	m	class:WpaGui
in_array	bgscan_learn.c	/^static int in_array(int *array, int val)$/;"	f	file:
in_raw_mode	examples/p2p-nfc.py	/^in_raw_mode = False$/;"	v
inc	p2p_supplicant.c	/^	u8 inc;$/;"	m	struct:p2p_oper_class_map	file:
include_p2p_req	examples/p2p-nfc.py	/^include_p2p_req = True$/;"	v
include_wps_req	examples/p2p-nfc.py	/^include_wps_req = True$/;"	v
index_within_array	mesh_rsn.c	/^static int index_within_array(const int *array, int idx)$/;"	f	file:
index_within_array	sme.c	/^static int index_within_array(const int *array, int idx)$/;"	f	file:
info	dbus/dbus_new.c	/^	struct p2p_peer_info *info;$/;"	m	struct:group_changed_data	typeref:struct:group_changed_data::p2p_peer_info	file:
info	dbus/dbus_new_handlers_p2p.c	/^	const struct p2p_peer_info *info;$/;"	m	struct:peer_group_data	typeref:struct:peer_group_data::p2p_peer_info	file:
init	autoscan.h	/^	void * (*init)(struct wpa_supplicant *wpa_s, const char *params);$/;"	m	struct:autoscan_ops
init	bgscan.h	/^	void * (*init)(struct wpa_supplicant *wpa_s, const char *params,$/;"	m	struct:bgscan_ops
init_on_touch	examples/p2p-nfc.py	/^init_on_touch = False$/;"	v
inner_method	interworking.c	/^	u8 inner_method;$/;"	m	struct:nai_realm_eap	file:
inner_non_eap	interworking.c	/^	enum nai_realm_eap_auth_inner_non_eap inner_non_eap;$/;"	m	struct:nai_realm_eap	typeref:enum:nai_realm_eap::nai_realm_eap_auth_inner_non_eap	file:
int16_value	dbus/dbus_dict_helpers.h	/^		dbus_int16_t int16_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
int32_value	dbus/dbus_dict_helpers.h	/^		dbus_int32_t int32_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
int64_value	dbus/dbus_dict_helpers.h	/^		dbus_int64_t int64_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
integrate_with_eloop	dbus/dbus_common.c	/^static int integrate_with_eloop(struct wpas_dbus_priv *priv)$/;"	f	file:
interactive	hostapd_cli.c	/^static int interactive = 0;$/;"	v	file:
interactive	notifier.c	/^static int interactive = 0;$/;"	v	file:
interactive	wpa_cli.c	/^static int interactive = 0;$/;"	v	file:
interfaceAdded	examples/wpas-dbus-new-signals.py	/^def interfaceAdded(interface, properties):$/;"	f
interfaceRemoved	examples/wpas-dbus-new-signals.py	/^def interfaceRemoved(interface):$/;"	f
interfaceSelected	wpa_gui-qt4/addinterface.cpp	/^void AddInterface::interfaceSelected(QTreeWidgetItem *sel)$/;"	f	class:AddInterface
interfaceWidget	wpa_gui-qt4/addinterface.h	/^	QTreeWidget *interfaceWidget;$/;"	m	class:AddInterface
interface_name	examples/p2p/p2p_connect.py	/^	interface_name = None$/;"	v	class:P2P_Connect
interface_name	examples/p2p/p2p_disconnect.py	/^	interface_name = None$/;"	v
interface_name	examples/p2p/p2p_find.py	/^	interface_name = None$/;"	v
interface_name	examples/p2p/p2p_flush.py	/^	interface_name = None$/;"	v
interface_name	examples/p2p/p2p_group_add.py	/^	interface_name = None$/;"	v
interface_name	examples/p2p/p2p_invite.py	/^	interface_name = None$/;"	v
interface_name	examples/p2p/p2p_listen.py	/^	interface_name = None$/;"	v
interface_name	examples/p2p/p2p_stop_find.py	/^	interface_name = None$/;"	v
interface_removed	wpa_supplicant_i.h	/^	int interface_removed; \/* whether the network interface has been$/;"	m	struct:wpa_supplicant
interfaces	dbus/dbus_new_introspect.c	/^struct interfaces {$/;"	s	file:
interval	autoscan_exponential.c	/^	int interval;$/;"	m	struct:autoscan_exponential_data	file:
interworking	config.h	/^	int interworking;$/;"	m	struct:wpa_config
interworking_anqp_resp_cb	interworking.c	/^static void interworking_anqp_resp_cb(void *ctx, const u8 *dst,$/;"	f	file:
interworking_anqp_send_req	interworking.c	/^static int interworking_anqp_send_req(struct wpa_supplicant *wpa_s,$/;"	f	file:
interworking_connect	interworking.c	/^int interworking_connect(struct wpa_supplicant *wpa_s, struct wpa_bss *bss,$/;"	f
interworking_connect_3gpp	interworking.c	/^static int interworking_connect_3gpp(struct wpa_supplicant *wpa_s,$/;"	f	file:
interworking_connect_helper	interworking.c	/^static int interworking_connect_helper(struct wpa_supplicant *wpa_s,$/;"	f	file:
interworking_connect_roaming_consortium	interworking.c	/^static int interworking_connect_roaming_consortium($/;"	f	file:
interworking_continue_anqp	interworking.c	/^static void interworking_continue_anqp(void *eloop_ctx, void *sock_ctx)$/;"	f	file:
interworking_credentials_available	interworking.c	/^static struct wpa_cred * interworking_credentials_available($/;"	f	file:
interworking_credentials_available_3gpp	interworking.c	/^static struct wpa_cred * interworking_credentials_available_3gpp($/;"	f	file:
interworking_credentials_available_helper	interworking.c	/^static struct wpa_cred * interworking_credentials_available_helper($/;"	f	file:
interworking_credentials_available_realm	interworking.c	/^static struct wpa_cred * interworking_credentials_available_realm($/;"	f	file:
interworking_credentials_available_roaming_consortium	interworking.c	/^static struct wpa_cred * interworking_credentials_available_roaming_consortium($/;"	f	file:
interworking_fast_assoc_tried	wpa_supplicant_i.h	/^	unsigned int interworking_fast_assoc_tried:1;$/;"	m	struct:wpa_supplicant
interworking_fetch_anqp	interworking.c	/^int interworking_fetch_anqp(struct wpa_supplicant *wpa_s)$/;"	f
interworking_find_network_match	interworking.c	/^static int interworking_find_network_match(struct wpa_supplicant *wpa_s)$/;"	f	file:
interworking_gas_bss	wpa_supplicant_i.h	/^	struct wpa_bss *interworking_gas_bss;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_bss
interworking_home_sp	interworking.c	/^static int interworking_home_sp(struct wpa_supplicant *wpa_s,$/;"	f	file:
interworking_home_sp_cred	interworking.c	/^int interworking_home_sp_cred(struct wpa_supplicant *wpa_s,$/;"	f
interworking_match_anqp_info	interworking.c	/^interworking_match_anqp_info(struct wpa_supplicant *wpa_s, struct wpa_bss *bss)$/;"	f	file:
interworking_next_anqp_fetch	interworking.c	/^static void interworking_next_anqp_fetch(struct wpa_supplicant *wpa_s)$/;"	f	file:
interworking_parse_rx_anqp_resp	interworking.c	/^static void interworking_parse_rx_anqp_resp(struct wpa_supplicant *wpa_s,$/;"	f	file:
interworking_pcsc_read_imsi	interworking.c	/^static int interworking_pcsc_read_imsi(struct wpa_supplicant *wpa_s)$/;"	f	file:
interworking_process_assoc_resp	events.c	/^static void interworking_process_assoc_resp(struct wpa_supplicant *wpa_s,$/;"	f	file:
interworking_reconnect	interworking.c	/^static void interworking_reconnect(struct wpa_supplicant *wpa_s)$/;"	f	file:
interworking_scan_res_handler	interworking.c	/^static void interworking_scan_res_handler(struct wpa_supplicant *wpa_s,$/;"	f	file:
interworking_select	interworking.c	/^int interworking_select(struct wpa_supplicant *wpa_s, int auto_select,$/;"	f
interworking_select_network	interworking.c	/^static void interworking_select_network(struct wpa_supplicant *wpa_s)$/;"	f	file:
interworking_set_eap_params	interworking.c	/^static int interworking_set_eap_params(struct wpa_ssid *ssid,$/;"	f	file:
interworking_set_hs20_params	interworking.c	/^static int interworking_set_hs20_params(struct wpa_supplicant *wpa_s,$/;"	f	file:
interworking_start_fetch_anqp	interworking.c	/^void interworking_start_fetch_anqp(struct wpa_supplicant *wpa_s)$/;"	f
interworking_stop_fetch_anqp	interworking.c	/^void interworking_stop_fetch_anqp(struct wpa_supplicant *wpa_s)$/;"	f
invitation_icon	wpa_gui-qt4/peers.h	/^	QIcon *invitation_icon;$/;"	m	class:Peers
ip_addr_end	config.h	/^	u8 ip_addr_end[4];$/;"	m	struct:wpa_config
ip_addr_go	config.h	/^	u8 ip_addr_go[4];$/;"	m	struct:wpa_config
ip_addr_mask	config.h	/^	u8 ip_addr_mask[4];$/;"	m	struct:wpa_config
ip_addr_start	config.h	/^	u8 ip_addr_start[4];$/;"	m	struct:wpa_config
ip_addr_type_availability	bss.h	/^	struct wpabuf *ip_addr_type_availability;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
ipv4_hdr_checksum	ctrl_iface.c	/^static u16 ipv4_hdr_checksum(const void *buf, size_t len)$/;"	f	file:
is_hs20_network	hs20_supplicant.c	/^int is_hs20_network(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid,$/;"	f
is_signature_correct	dbus/dbus_new_helpers.c	/^static int is_signature_correct(DBusMessage *message,$/;"	f	file:
kay	wpa_supplicant_i.h	/^	struct ieee802_1x_kay *kay;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::ieee802_1x_kay
key	dbus/dbus_dict_helpers.h	/^	const char *key;  \/** key of the dict entry *\/$/;"	m	struct:wpa_dbus_dict_entry
key_data	config.c	/^	int key_data;$/;"	m	struct:parse_data	file:
key_hex	wps_supplicant.h	/^	const char *key_hex;$/;"	m	struct:wps_new_ap_settings
key_mgmt	config_ssid.h	/^	int key_mgmt;$/;"	m	struct:wpa_ssid
key_mgmt	wpa_supplicant_i.h	/^	int key_mgmt;$/;"	m	struct:wpa_supplicant
key_mgmt_offload	config.h	/^	int key_mgmt_offload;$/;"	m	struct:wpa_config
key_value_isset	wpa_gui-qt4/networkconfig.cpp	/^static int key_value_isset(const char *reply, size_t reply_len)$/;"	f	file:
keys_cleared	wpa_supplicant_i.h	/^	unsigned int keys_cleared; \/* bitfield of key indexes that the driver is$/;"	m	struct:wpa_supplicant
kill_daemon	examples/p2p-action-udhcp.sh	/^kill_daemon() {$/;"	f
kill_daemon	examples/p2p-action.sh	/^kill_daemon() {$/;"	f
kill_svc	main_winsvc.c	/^static HANDLE kill_svc;$/;"	v	file:
known_wps_freq	wpa_supplicant_i.h	/^	int known_wps_freq;$/;"	m	struct:wpa_supplicant
l2	wpa_priv.c	/^	struct l2_packet_data *l2;$/;"	m	struct:wpa_priv_interface	typeref:struct:wpa_priv_interface::l2_packet_data	file:
l2	wpa_supplicant_i.h	/^	struct l2_packet_data *l2;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::l2_packet_data
l2_addr	wpa_priv.c	/^	struct sockaddr_un l2_addr;$/;"	m	struct:wpa_priv_interface	typeref:struct:wpa_priv_interface::sockaddr_un	file:
l2_br	wpa_supplicant_i.h	/^	struct l2_packet_data *l2_br;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::l2_packet_data
l2_test	wpa_supplicant_i.h	/^	struct l2_packet_data *l2_test;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::l2_packet_data
lang	hs20_supplicant.c	/^	char lang[4];$/;"	m	struct:osu_icon	file:
lang	hs20_supplicant.c	/^	char lang[4];$/;"	m	struct:osu_lang_string	file:
languageChange	wpa_gui-qt4/eventhistory.cpp	/^void EventHistory::languageChange()$/;"	f	class:EventHistory
languageChange	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::languageChange()$/;"	f	class:NetworkConfig
languageChange	wpa_gui-qt4/peers.cpp	/^void Peers::languageChange()$/;"	f	class:Peers
languageChange	wpa_gui-qt4/scanresults.cpp	/^void ScanResults::languageChange()$/;"	f	class:ScanResults
languageChange	wpa_gui-qt4/userdatarequest.cpp	/^void UserDataRequest::languageChange()$/;"	f	class:UserDataRequest
languageChange	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::languageChange()$/;"	f	class:WpaGui
laptop_icon	wpa_gui-qt4/peers.h	/^	QIcon *laptop_icon;$/;"	m	class:Peers
last_attempt	wpa_supplicant_i.h	/^	struct os_reltime last_attempt;$/;"	m	struct:wps_ap_info	typeref:struct:wps_ap_info::os_reltime
last_bgscan	bgscan_learn.c	/^	struct os_reltime last_bgscan;$/;"	m	struct:bgscan_learn_data	typeref:struct:bgscan_learn_data::os_reltime	file:
last_bgscan	bgscan_simple.c	/^	struct os_reltime last_bgscan;$/;"	m	struct:bgscan_simple_data	typeref:struct:bgscan_simple_data::os_reltime	file:
last_eap_radius	eapol_test.c	/^	struct wpabuf *last_eap_radius;$/;"	m	struct:eapol_test_data	typeref:struct:eapol_test_data::wpabuf	file:
last_eapol_matches_bssid	wpa_supplicant_i.h	/^	unsigned int last_eapol_matches_bssid:1;$/;"	m	struct:wpa_supplicant
last_eapol_src	wpa_supplicant_i.h	/^	unsigned char last_eapol_src[ETH_ALEN];$/;"	m	struct:wpa_supplicant
last_gas_addr	wpa_supplicant_i.h	/^	u8 last_gas_addr[ETH_ALEN], prev_gas_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
last_gas_dialog_token	wpa_supplicant_i.h	/^	u8 last_gas_dialog_token, prev_gas_dialog_token;$/;"	m	struct:wpa_supplicant
last_gas_resp	wpa_supplicant_i.h	/^	struct wpabuf *last_gas_resp, *prev_gas_resp;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpabuf
last_gtk	wpa_supplicant_i.h	/^	u8 last_gtk[32];$/;"	m	struct:wpa_supplicant
last_gtk_len	wpa_supplicant_i.h	/^	size_t last_gtk_len;$/;"	m	struct:wpa_supplicant
last_mac_addr_change	wpa_supplicant_i.h	/^	struct os_reltime last_mac_addr_change;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::os_reltime
last_mac_addr_style	wpa_supplicant_i.h	/^	int last_mac_addr_style;$/;"	m	struct:wpa_supplicant
last_michael_mic_error	wpa_supplicant_i.h	/^	struct os_reltime last_michael_mic_error;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::os_reltime
last_mid	notifier.c	/^static int last_mid = 0;$/;"	v	file:
last_oper	gas_query.c	/^	struct os_reltime last_oper;$/;"	m	struct:gas_query_pending	typeref:struct:gas_query_pending::os_reltime	file:
last_recv_radius	eapol_test.c	/^	struct radius_msg *last_recv_radius;$/;"	m	struct:eapol_test_data	typeref:struct:eapol_test_data::radius_msg	file:
last_scan	wpa_supplicant_i.h	/^	struct os_reltime last_scan;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::os_reltime
last_scan_req	wpa_supplicant_i.h	/^	} scan_req, last_scan_req;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::scan_req_type
last_scan_res	wpa_supplicant_i.h	/^	struct wpa_bss **last_scan_res;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_bss
last_scan_res_size	wpa_supplicant_i.h	/^	unsigned int last_scan_res_size;$/;"	m	struct:wpa_supplicant
last_scan_res_used	wpa_supplicant_i.h	/^	unsigned int last_scan_res_used;$/;"	m	struct:wpa_supplicant
last_ssid	wpa_supplicant_i.h	/^	struct wpa_ssid *last_ssid;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid
last_tspecs	wpa_supplicant_i.h	/^	struct wmm_tspec_element *last_tspecs;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wmm_tspec_element
last_tspecs_count	wpa_supplicant_i.h	/^	u8 last_tspecs_count;$/;"	m	struct:wpa_supplicant
last_unprot_disconnect	wpa_supplicant_i.h	/^		struct os_reltime last_unprot_disconnect;$/;"	m	struct:wpa_supplicant::__anon4	typeref:struct:wpa_supplicant::__anon4::os_reltime
last_update	bss.h	/^	struct os_reltime last_update;$/;"	m	struct:wpa_bss	typeref:struct:wpa_bss::os_reltime
last_update_idx	bss.h	/^	unsigned int last_update_idx;$/;"	m	struct:wpa_bss
leap	config_ssid.h	/^	int leap;$/;"	m	struct:wpa_ssid
learn_ap_config	wpa_gui-qt4/peers.cpp	/^void Peers::learn_ap_config()$/;"	f	class:Peers
len	p2p_supplicant.c	/^	size_t len;$/;"	m	struct:send_action_work	file:
level	bss.h	/^	int level;$/;"	m	struct:wpa_bss
lib	pystub.py	/^lib = cdll.LoadLibrary('.\/wpa_not.so')$/;"	v
license	main.c	/^static void license(void)$/;"	f	file:
limit	autoscan_exponential.c	/^	int limit;$/;"	m	struct:autoscan_exponential_data	file:
list	action_handler.c	/^	struct dl_list list;$/;"	m	struct:action_pending	typeref:struct:action_pending::dl_list	file:
list	bgscan_learn.c	/^	struct dl_list list;$/;"	m	struct:bgscan_learn_bss	typeref:struct:bgscan_learn_bss::dl_list	file:
list	bss.h	/^	struct dl_list list;$/;"	m	struct:wpa_bss	typeref:struct:wpa_bss::dl_list
list	config_ssid.h	/^	struct dl_list list;$/;"	m	struct:psk_list_entry	typeref:struct:psk_list_entry::dl_list
list	ctrl_iface_unix.c	/^	struct dl_list list;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::dl_list	file:
list	dbus/dbus_new_introspect.c	/^	struct dl_list list;$/;"	m	struct:interfaces	typeref:struct:interfaces::dl_list	file:
list	gas_query.c	/^	struct dl_list list;$/;"	m	struct:gas_query_pending	typeref:struct:gas_query_pending::dl_list	file:
list	wpa_cli.c	/^	struct dl_list list;$/;"	m	struct:cli_txt_entry	typeref:struct:cli_txt_entry::dl_list	file:
list	wpa_supplicant_i.h	/^	struct dl_list list;$/;"	m	struct:p2p_srv_bonjour	typeref:struct:p2p_srv_bonjour::dl_list
list	wpa_supplicant_i.h	/^	struct dl_list list;$/;"	m	struct:p2p_srv_upnp	typeref:struct:p2p_srv_upnp::dl_list
list	wpa_supplicant_i.h	/^	struct dl_list list;$/;"	m	struct:wpa_radio_work	typeref:struct:wpa_radio_work::dl_list
list_id	bss.h	/^	struct dl_list list_id;$/;"	m	struct:wpa_bss	typeref:struct:wpa_bss::dl_list
list_interfaces	examples/wpas-dbus-new-signals.py	/^def list_interfaces(wpas_obj):$/;"	f
list_interfaces	examples/wpas-dbus-new.py	/^def list_interfaces(wpas_obj):$/;"	f
llcp_connected	examples/p2p-nfc.py	/^def llcp_connected(llc):$/;"	f
llcp_connected	examples/wps-nfc.py	/^def llcp_connected(llc):$/;"	f
llcp_startup	examples/p2p-nfc.py	/^def llcp_startup(clf, llc):$/;"	f
llcp_startup	examples/wps-nfc.py	/^def llcp_startup(clf, llc):$/;"	f
llcp_worker	examples/p2p-nfc.py	/^def llcp_worker(llc):$/;"	f
llcp_worker	examples/wps-nfc.py	/^def llcp_worker(llc):$/;"	f
llid	mesh_mpm.c	/^	const u8 *llid;$/;"	m	struct:mesh_peer_mgmt_ie	file:
llid_in_use	mesh_mpm.c	/^static Boolean llid_in_use(struct wpa_supplicant *wpa_s, u16 llid)$/;"	f	file:
local_hw_capab	wpa_supplicant_i.h	/^	enum local_hw_capab {$/;"	g	struct:wpa_supplicant
long_interval	bgscan_learn.c	/^	int long_interval; \/* use if signal > threshold *\/$/;"	m	struct:bgscan_learn_data	file:
long_interval	bgscan_simple.c	/^	int long_interval; \/* use if signal > threshold *\/$/;"	m	struct:bgscan_simple_data	file:
mac_addr	config.h	/^	int mac_addr;$/;"	m	struct:wpa_config
mac_addr	config_ssid.h	/^	int mac_addr;$/;"	m	struct:wpa_ssid
mac_addr_changed	wpa_supplicant_i.h	/^	unsigned int mac_addr_changed:1;$/;"	m	struct:wpa_supplicant
mac_addr_pno	wpa_supplicant_i.h	/^	u8 *mac_addr_pno;$/;"	m	struct:wpa_supplicant
mac_addr_rand_enable	wpa_supplicant_i.h	/^	unsigned int mac_addr_rand_enable;$/;"	m	struct:wpa_supplicant
mac_addr_rand_supported	wpa_supplicant_i.h	/^	unsigned int mac_addr_rand_supported;$/;"	m	struct:wpa_supplicant
mac_addr_scan	wpa_supplicant_i.h	/^	u8 *mac_addr_scan;$/;"	m	struct:wpa_supplicant
mac_addr_sched_scan	wpa_supplicant_i.h	/^	u8 *mac_addr_sched_scan;$/;"	m	struct:wpa_supplicant
macsec_policy	config_ssid.h	/^	int macsec_policy;$/;"	m	struct:wpa_ssid
main	bk_wpa_not_disp.c	/^int main(int argc, char *argv[])$/;"	f
main	eapol_test.c	/^int main(int argc, char *argv[])$/;"	f
main	examples/p2p-nfc.py	/^def main():$/;"	f
main	examples/wpas-dbus-new-getall.py	/^def main():$/;"	f
main	examples/wpas-dbus-new-signals.py	/^def main():$/;"	f
main	examples/wpas-dbus-new-wps.py	/^def main():$/;"	f
main	examples/wpas-dbus-new.py	/^def main():$/;"	f
main	examples/wpas-test.py	/^def main():$/;"	f
main	examples/wps-nfc.py	/^def main():$/;"	f
main	hostapd_cli.c	/^int main(int argc, char *argv[])$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
main	main_none.c	/^int main(int argc, char *argv[])$/;"	f
main	main_winsvc.c	/^int main(int argc, char *argv[])$/;"	f
main	nfc_pw_token.c	/^int main(int argc, char *argv[])$/;"	f
main	notifier.c	/^int main(int argc, char *argv[]){$/;"	f
main	preauth_test.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/test_eap_sim_common.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/test_wpa.c	/^int main(int argc, char *argv[])$/;"	f
main	win_if_list.c	/^int main(int argc, char *argv[])$/;"	f
main	wpa_cli.c	/^int main(int argc, char *argv[])$/;"	f
main	wpa_gui-qt4/main.cpp	/^int main(int argc, char *argv[])$/;"	f
main	wpa_passphrase.c	/^int main(int argc, char *argv[])$/;"	f
main	wpa_priv.c	/^int main(int argc, char *argv[])$/;"	f
main_menu	examples/wps-ap-cli	/^main_menu()$/;"	f
manual_scan_freqs	wpa_supplicant_i.h	/^	int *manual_scan_freqs;$/;"	m	struct:wpa_supplicant
manual_scan_id	wpa_supplicant_i.h	/^	unsigned int manual_scan_id;$/;"	m	struct:wpa_supplicant
manual_scan_only_new	wpa_supplicant_i.h	/^	unsigned int manual_scan_only_new:1;$/;"	m	struct:wpa_supplicant
manual_scan_passive	wpa_supplicant_i.h	/^	unsigned int manual_scan_passive:1;$/;"	m	struct:wpa_supplicant
manual_scan_use_id	wpa_supplicant_i.h	/^	unsigned int manual_scan_use_id:1;$/;"	m	struct:wpa_supplicant
manual_sched_scan_freqs	wpa_supplicant_i.h	/^	int *manual_sched_scan_freqs;$/;"	m	struct:wpa_supplicant
manufacturer	config.h	/^	char *manufacturer;$/;"	m	struct:wpa_config
match_bonjour_query	p2p_supplicant.c	/^static int match_bonjour_query(struct p2p_srv_bonjour *bsrv, const u8 *query,$/;"	f	file:
match_group_where_peer_is_client	dbus/dbus_new.c	/^static int match_group_where_peer_is_client(struct p2p_group *group,$/;"	f	file:
match_group_where_peer_is_client	dbus/dbus_new_handlers_p2p.c	/^static int match_group_where_peer_is_client(struct p2p_group *group,$/;"	f	file:
match_mac_mask	events.c	/^static int match_mac_mask(const u8 *addr_a, const u8 *addr_b, const u8 *mask)$/;"	f	file:
matches_local	mesh_mpm.c	/^static Boolean matches_local(struct wpa_supplicant *wpa_s,$/;"	f	file:
max_args	hostapd_cli.c	1201;"	d	file:
max_args	notifier.c	799;"	d	file:
max_args	wpa_cli.c	3606;"	d	file:
max_bss_load	config.h	/^	unsigned int max_bss_load;$/;"	m	struct:wpa_cred
max_bssid_indicator	wnm_sta.h	/^	u8 max_bssid_indicator;$/;"	m	struct:multiple_bssid
max_chan	p2p_supplicant.c	/^	u8 max_chan;$/;"	m	struct:p2p_oper_class_map	file:
max_ht20_rate	scan.c	/^static unsigned int max_ht20_rate(int snr)$/;"	f	file:
max_ht40_rate	scan.c	/^static unsigned int max_ht40_rate(int snr)$/;"	f	file:
max_match_sets	wpa_supplicant_i.h	/^	unsigned int max_match_sets;$/;"	m	struct:wpa_supplicant
max_num_sta	config.h	/^	unsigned int max_num_sta;$/;"	m	struct:wpa_config
max_peer_links	config.h	/^	int max_peer_links;$/;"	m	struct:wpa_config
max_remain_on_chan	wpa_supplicant_i.h	/^	unsigned int max_remain_on_chan;$/;"	m	struct:wpa_supplicant
max_scan_ssids	wpa_supplicant_i.h	/^	int max_scan_ssids;$/;"	m	struct:wpa_supplicant
max_sched_scan_ssids	wpa_supplicant_i.h	/^	int max_sched_scan_ssids;$/;"	m	struct:wpa_supplicant
max_short_scans	bgscan_simple.c	/^	int max_short_scans; \/* maximum times we short-scan before back-off *\/$/;"	m	struct:bgscan_simple_data	file:
max_stations	wpa_supplicant_i.h	/^	unsigned int max_stations;$/;"	m	struct:wpa_supplicant
max_vht80_rate	scan.c	/^static unsigned int max_vht80_rate(int snr)$/;"	f	file:
mean_data_rate	wmm_ac.h	/^	int mean_data_rate;$/;"	m	struct:wmm_ac_ts_setup_params
meas_pilot	wnm_sta.h	/^	struct measurement_pilot *meas_pilot;$/;"	m	struct:neighbor_report	typeref:struct:neighbor_report::measurement_pilot
measurement_pilot	wnm_sta.h	/^	u8 measurement_pilot;$/;"	m	struct:measurement_pilot
measurement_pilot	wnm_sta.h	/^struct measurement_pilot {$/;"	s
mes	notifier.c	/^	char *mes;$/;"	m	struct:per_not	file:
mesh_attr_text	mesh.c	/^static int mesh_attr_text(const u8 *ies, size_t ies_len, char *buf, char *end)$/;"	f	file:
mesh_auth_block_duration	wpa_supplicant_i.h	/^	int mesh_auth_block_duration; \/* sec *\/$/;"	m	struct:wpa_supplicant
mesh_auth_timer	mesh_rsn.c	/^void mesh_auth_timer(void *eloop_ctx, void *user_data)$/;"	f
mesh_basic_rates	config_ssid.h	/^	int *mesh_basic_rates;$/;"	m	struct:wpa_ssid
mesh_config_create	mesh.c	/^static struct mesh_conf * mesh_config_create(struct wpa_ssid *ssid)$/;"	f	file:
mesh_ht_enabled	wpa_supplicant_i.h	/^	unsigned int mesh_ht_enabled:1;$/;"	m	struct:wpa_supplicant
mesh_if_created	wpa_supplicant_i.h	/^	unsigned int mesh_if_created:1;$/;"	m	struct:wpa_supplicant
mesh_if_idx	wpa_supplicant_i.h	/^	int mesh_if_idx;$/;"	m	struct:wpa_supplicant
mesh_max_inactivity	config.h	/^	int mesh_max_inactivity;$/;"	m	struct:wpa_config
mesh_mpm_action_rx	mesh_mpm.c	/^void mesh_mpm_action_rx(struct wpa_supplicant *wpa_s,$/;"	f
mesh_mpm_action_rx	mesh_mpm.h	/^static inline void mesh_mpm_action_rx(struct wpa_supplicant *wpa_s,$/;"	f
mesh_mpm_add_peer	mesh_mpm.c	/^static struct sta_info * mesh_mpm_add_peer(struct wpa_supplicant *wpa_s,$/;"	f	file:
mesh_mpm_auth_peer	mesh_mpm.c	/^void mesh_mpm_auth_peer(struct wpa_supplicant *wpa_s, const u8 *addr)$/;"	f
mesh_mpm_deinit	mesh_mpm.c	/^void mesh_mpm_deinit(struct wpa_supplicant *wpa_s, struct hostapd_iface *ifmsh)$/;"	f
mesh_mpm_free_sta	mesh_mpm.c	/^void mesh_mpm_free_sta(struct sta_info *sta)$/;"	f
mesh_mpm_fsm	mesh_mpm.c	/^static void mesh_mpm_fsm(struct wpa_supplicant *wpa_s, struct sta_info *sta,$/;"	f	file:
mesh_mpm_fsm_restart	mesh_mpm.c	/^static void mesh_mpm_fsm_restart(struct wpa_supplicant *wpa_s,$/;"	f	file:
mesh_mpm_init_link	mesh_mpm.c	/^static void mesh_mpm_init_link(struct wpa_supplicant *wpa_s,$/;"	f	file:
mesh_mpm_mgmt_rx	mesh_mpm.c	/^void mesh_mpm_mgmt_rx(struct wpa_supplicant *wpa_s, struct rx_mgmt *rx_mgmt)$/;"	f
mesh_mpm_mgmt_rx	mesh_mpm.h	/^static inline void mesh_mpm_mgmt_rx(struct wpa_supplicant *wpa_s,$/;"	f
mesh_mpm_parse_peer_mgmt	mesh_mpm.c	/^static int mesh_mpm_parse_peer_mgmt(struct wpa_supplicant *wpa_s,$/;"	f	file:
mesh_mpm_plink_close	mesh_mpm.c	/^int mesh_mpm_plink_close(struct hostapd_data *hapd,$/;"	f
mesh_mpm_plink_estab	mesh_mpm.c	/^static void mesh_mpm_plink_estab(struct wpa_supplicant *wpa_s,$/;"	f	file:
mesh_mpm_plink_open	mesh_mpm.c	/^mesh_mpm_plink_open(struct wpa_supplicant *wpa_s, struct sta_info *sta,$/;"	f	file:
mesh_mpm_send_plink_action	mesh_mpm.c	/^static void mesh_mpm_send_plink_action(struct wpa_supplicant *wpa_s,$/;"	f	file:
mesh_peer_mgmt_ie	mesh_mpm.c	/^struct mesh_peer_mgmt_ie {$/;"	s	file:
mesh_rsn	mesh_rsn.h	/^struct mesh_rsn {$/;"	s
mesh_rsn	wpa_supplicant_i.h	/^	struct mesh_rsn *mesh_rsn;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::mesh_rsn
mesh_rsn_auth_init	mesh_rsn.c	/^struct mesh_rsn *mesh_rsn_auth_init(struct wpa_supplicant *wpa_s,$/;"	f
mesh_rsn_auth_sae_sta	mesh_rsn.c	/^int mesh_rsn_auth_sae_sta(struct wpa_supplicant *wpa_s,$/;"	f
mesh_rsn_build_sae_commit	mesh_rsn.c	/^static int mesh_rsn_build_sae_commit(struct wpa_supplicant *wpa_s,$/;"	f	file:
mesh_rsn_deinit	mesh_rsn.c	/^static void mesh_rsn_deinit(struct mesh_rsn *rsn)$/;"	f	file:
mesh_rsn_derive_aek	mesh_rsn.c	/^mesh_rsn_derive_aek(struct mesh_rsn *rsn, struct sta_info *sta)$/;"	f	file:
mesh_rsn_derive_mtk	mesh_rsn.c	/^int mesh_rsn_derive_mtk(struct wpa_supplicant *wpa_s, struct sta_info *sta)$/;"	f
mesh_rsn_get_pmkid	mesh_rsn.c	/^void mesh_rsn_get_pmkid(struct mesh_rsn *rsn, struct sta_info *sta, u8 *pmkid)$/;"	f
mesh_rsn_init_ampe_sta	mesh_rsn.c	/^void mesh_rsn_init_ampe_sta(struct wpa_supplicant *wpa_s, struct sta_info *sta)$/;"	f
mesh_rsn_process_ampe	mesh_rsn.c	/^int mesh_rsn_process_ampe(struct wpa_supplicant *wpa_s, struct sta_info *sta,$/;"	f
mesh_rsn_protect_frame	mesh_rsn.c	/^int mesh_rsn_protect_frame(struct mesh_rsn *rsn, struct sta_info *sta,$/;"	f
mesh_rsn_sae_group	mesh_rsn.c	/^static int mesh_rsn_sae_group(struct wpa_supplicant *wpa_s,$/;"	f	file:
message	pystub.py	/^message = "prob_req"$/;"	v
message_handler	dbus/dbus_new_helpers.c	/^static DBusHandlerResult message_handler(DBusConnection *connection,$/;"	f	file:
method	interworking.c	/^	u8 method;$/;"	m	struct:nai_realm_eap	file:
method_handler	dbus/dbus_new_helpers.h	/^	WPADBusMethodHandler method_handler;$/;"	m	struct:wpa_dbus_method_desc
methods	dbus/dbus_new_helpers.h	/^	const struct wpa_dbus_method_desc *methods;$/;"	m	struct:wpa_dbus_object_desc	typeref:struct:wpa_dbus_object_desc::wpa_dbus_method_desc
mfp	wpa_supplicant_i.h	/^		int mfp;$/;"	m	struct:wpa_supplicant::__anon4
mgmt_group_cipher	wpa_supplicant_i.h	/^	int mgmt_group_cipher;$/;"	m	struct:wpa_supplicant
mgtk	mesh_rsn.h	/^	u8 mgtk[16];$/;"	m	struct:mesh_rsn
mic_errors_seen	wpa_supplicant_i.h	/^	int mic_errors_seen; \/* Michael MIC errors with the current PTK *\/$/;"	m	struct:wpa_supplicant
mid	action_handler.c	/^	u32 mid;$/;"	m	struct:action_pending	file:
mid	bk_wpa_not_disp.c	/^	u32 mid;$/;"	m	struct:wipush_not	file:
mid	wpa_not_disp.c	/^	u32 mid;$/;"	m	struct:wipush_not	file:
milenage	config.h	/^	char *milenage;$/;"	m	struct:wpa_cred
min_chan	p2p_supplicant.c	/^	u8 min_chan;$/;"	m	struct:p2p_oper_class_map	file:
min_dl_bandwidth_home	config.h	/^	unsigned int min_dl_bandwidth_home;$/;"	m	struct:wpa_cred
min_dl_bandwidth_roaming	config.h	/^	unsigned int min_dl_bandwidth_roaming;$/;"	m	struct:wpa_cred
min_ul_bandwidth_home	config.h	/^	unsigned int min_ul_bandwidth_home;$/;"	m	struct:wpa_cred
min_ul_bandwidth_roaming	config.h	/^	unsigned int min_ul_bandwidth_roaming;$/;"	m	struct:wpa_cred
minimum_phy_rate	wmm_ac.h	/^	int minimum_phy_rate;$/;"	m	struct:wmm_ac_ts_setup_params
mixed_cell	config_ssid.h	/^	int mixed_cell;$/;"	m	struct:wpa_ssid
mnc_len	wpa_supplicant_i.h	/^	int mnc_len;$/;"	m	struct:wpa_supplicant
mobility_domain	wpa_supplicant_i.h	/^		u8 mobility_domain[2];$/;"	m	struct:wpa_supplicant::__anon4
mode	config_ssid.h	/^	} mode;$/;"	m	struct:wpa_ssid	typeref:enum:wpa_ssid::wpas_mode
mode	p2p_supplicant.c	/^	enum hostapd_hw_mode mode;$/;"	m	struct:p2p_oper_class_map	typeref:enum:p2p_oper_class_map::hostapd_hw_mode	file:
model	wpa_gui-qt4/peers.h	/^	QStandardItemModel model;$/;"	m	class:Peers
model_name	config.h	/^	char *model_name;$/;"	m	struct:wpa_config
model_number	config.h	/^	char *model_number;$/;"	m	struct:wpa_config
modes	wpa_supplicant_i.h	/^		struct hostapd_hw_modes *modes;$/;"	m	struct:wpa_supplicant::__anon8	typeref:struct:wpa_supplicant::__anon8::hostapd_hw_modes
mon_conn	bk_wpa_not_disp.c	/^static struct wpa_ctrl *mon_conn;$/;"	v	typeref:struct:wpa_ctrl	file:
mon_conn	wpa_cli.c	/^static struct wpa_ctrl *mon_conn;$/;"	v	typeref:struct:wpa_ctrl	file:
mon_conn	wpa_not_disp.c	/^static struct wpa_ctrl *mon_conn;$/;"	v	typeref:struct:wpa_ctrl	file:
monitor_conn	wpa_gui-qt4/wpagui.h	/^	struct wpa_ctrl *monitor_conn;$/;"	m	class:WpaGui	typeref:struct:WpaGui::wpa_ctrl
mplevent	mesh_mpm.c	/^static const char * const mplevent[] = {$/;"	v	file:
mplstate	mesh_mpm.c	/^static const char * const mplstate[] = {$/;"	v	file:
ms_from_time	gas_query.c	/^static int ms_from_time(struct os_reltime *last)$/;"	f	file:
msg	wpa_gui-qt4/wpamsg.h	/^	QString msg;$/;"	m	class:WpaMsg
msgList	wpa_gui-qt4/eventhistory.h	/^	QStringList msgList;$/;"	m	class:EventListModel
msgNotifier	wpa_gui-qt4/wpagui.h	/^	QSocketNotifier *msgNotifier;$/;"	m	class:WpaGui
msg_method_handler	dbus/dbus_new_helpers.c	/^static DBusMessage * msg_method_handler(DBusMessage *message,$/;"	f	file:
msgs	wpa_gui-qt4/wpagui.h	/^	WpaMsgList msgs;$/;"	m	class:WpaGui
mul_bssid	wnm_sta.h	/^	struct multiple_bssid *mul_bssid;$/;"	m	struct:neighbor_report	typeref:struct:neighbor_report::multiple_bssid
multiple_bssid	wnm_sta.h	/^struct multiple_bssid {$/;"	s
nai_realm	bss.h	/^	struct wpabuf *nai_realm;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
nai_realm	interworking.c	/^struct nai_realm {$/;"	s	file:
nai_realm_cred_cert	interworking.c	/^static int nai_realm_cred_cert(struct wpa_supplicant *wpa_s,$/;"	f	file:
nai_realm_cred_username	interworking.c	/^static int nai_realm_cred_username(struct wpa_supplicant *wpa_s,$/;"	f	file:
nai_realm_eap	interworking.c	/^struct nai_realm_eap {$/;"	s	file:
nai_realm_find_eap	interworking.c	/^static struct nai_realm_eap * nai_realm_find_eap(struct wpa_supplicant *wpa_s,$/;"	f	file:
nai_realm_free	interworking.c	/^static void nai_realm_free(struct nai_realm *realms, u16 count)$/;"	f	file:
nai_realm_match	interworking.c	/^static int nai_realm_match(struct nai_realm *realm, const char *home_realm)$/;"	f	file:
nai_realm_parse	interworking.c	/^static struct nai_realm * nai_realm_parse(struct wpabuf *anqp, u16 *count)$/;"	f	file:
nai_realm_parse_eap	interworking.c	/^static const u8 * nai_realm_parse_eap(struct nai_realm_eap *e, const u8 *pos,$/;"	f	file:
nai_realm_parse_realm	interworking.c	/^static const u8 * nai_realm_parse_realm(struct nai_realm *r, const u8 *pos,$/;"	f	file:
name	autoscan.h	/^	const char *name;$/;"	m	struct:autoscan_ops
name	bgscan.h	/^	const char *name;$/;"	m	struct:bgscan_ops
name	config.c	/^	char *name;$/;"	m	struct:global_parse_data	file:
name	config.c	/^	char *name;$/;"	m	struct:parse_data	file:
name	ctrl_iface.c	/^	const char *name;$/;"	m	struct:cipher_info	file:
name	dbus/dbus_new_helpers.h	/^	char *name;$/;"	m	struct:wpa_dbus_argument
name	wpa_supplicant_i.h	/^	char name[16]; \/* from driver_ops get_radio_name() or empty if not$/;"	m	struct:wpa_radio
nb_paths	dbus/dbus_new_handlers_p2p.c	/^	unsigned int nb_paths;$/;"	m	struct:peer_group_data	file:
ndisuio_enum_bindings	win_if_list.c	/^static void ndisuio_enum_bindings(void)$/;"	f	file:
ndisuio_open	win_if_list.c	/^static HANDLE ndisuio_open(void)$/;"	f	file:
ndisuio_query_bindings	win_if_list.c	/^static void ndisuio_query_bindings(HANDLE ndisuio)$/;"	f	file:
neigh	bgscan_learn.c	/^	u8 *neigh; \/* num_neigh * ETH_ALEN buffer *\/$/;"	m	struct:bgscan_learn_bss	file:
neighbor_rep_cb_ctx	wpa_supplicant_i.h	/^	void *neighbor_rep_cb_ctx;$/;"	m	struct:rrm_data
neighbor_report	wnm_sta.h	/^struct neighbor_report {$/;"	s
networkAdded	examples/wpas-dbus-new-signals.py	/^def networkAdded(network, properties):$/;"	f
networkMayHaveChanged	wpa_gui-qt4/wpagui.h	/^	bool networkMayHaveChanged;$/;"	m	class:WpaGui
networkRemoved	examples/wpas-dbus-new-signals.py	/^def networkRemoved(network):$/;"	f
networkSelected	examples/wpas-dbus-new-signals.py	/^def networkSelected(network):$/;"	f
network_auth_type	bss.h	/^	struct wpabuf *network_auth_type;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
network_handler_args	dbus/dbus_new_handlers.h	/^struct network_handler_args {$/;"	s
network_is_persistent_group	wpa_supplicant_i.h	/^static inline int network_is_persistent_group(struct wpa_ssid *ssid)$/;"	f
network_select	wpa_supplicant_i.h	/^	unsigned int network_select:1;$/;"	m	struct:wpa_supplicant
networkid	wpa_gui-qt4/userdatarequest.h	/^	int networkid;$/;"	m	class:UserDataRequest
newNetwork	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::newNetwork()$/;"	f	class:NetworkConfig
new_connection	wpa_supplicant_i.h	/^	int new_connection;$/;"	m	struct:wpa_supplicant
new_network	wpa_gui-qt4/networkconfig.h	/^	bool new_network;$/;"	m	class:NetworkConfig
newline_terminated	config_file.c	/^static int newline_terminated(const char *buf, size_t buflen)$/;"	f	file:
next	bk_wpa_not_disp.c	/^	struct wipush_not *next;$/;"	m	struct:wipush_not	typeref:struct:wipush_not::wipush_not	file:
next	blacklist.h	/^	struct wpa_blacklist *next;$/;"	m	struct:wpa_blacklist	typeref:struct:wpa_blacklist::wpa_blacklist
next	config.h	/^	struct wpa_cred *next;$/;"	m	struct:wpa_cred	typeref:struct:wpa_cred::wpa_cred
next	config_ssid.h	/^	struct wpa_ssid *next;$/;"	m	struct:wpa_ssid	typeref:struct:wpa_ssid::wpa_ssid
next	ctrl_iface_named_pipe.c	/^	struct wpa_ctrl_dst *next, *prev;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::wpa_ctrl_dst	file:
next	ctrl_iface_named_pipe.c	/^	struct wpa_global_dst *next, *prev;$/;"	m	struct:wpa_global_dst	typeref:struct:wpa_global_dst::wpa_global_dst	file:
next	ctrl_iface_udp.c	/^	struct wpa_ctrl_dst *next;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::wpa_ctrl_dst	file:
next	eapol_test.c	/^	struct extra_radius_attr *next;$/;"	m	struct:extra_radius_attr	typeref:struct:extra_radius_attr::extra_radius_attr	file:
next	ibss_rsn.h	/^	struct ibss_rsn_peer *next;$/;"	m	struct:ibss_rsn_peer	typeref:struct:ibss_rsn_peer::ibss_rsn_peer
next	notifier.c	/^	struct per_not *next;$/;"	m	struct:per_not	typeref:struct:per_not::per_not	file:
next	wpa_not_disp.c	/^	struct wipush_not *next;$/;"	m	struct:wipush_not	typeref:struct:wipush_not::wipush_not	file:
next	wpa_priv.c	/^	struct wpa_priv_interface *next;$/;"	m	struct:wpa_priv_interface	typeref:struct:wpa_priv_interface::wpa_priv_interface	file:
next	wpa_supplicant_i.h	/^	struct wpa_supplicant *next;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_supplicant
next_frag_id	gas_query.c	/^	u8 next_frag_id;$/;"	m	struct:gas_query_pending	file:
next_neighbor_rep_token	wpa_supplicant_i.h	/^	u8 next_neighbor_rep_token;$/;"	m	struct:rrm_data
next_objid	dbus/dbus_common_i.h	/^	u32 next_objid;$/;"	m	struct:wpas_dbus_priv
next_scan_freqs	wpa_supplicant_i.h	/^	int *next_scan_freqs;$/;"	m	struct:wpa_supplicant
next_ssid	wpa_supplicant_i.h	/^	struct wpa_ssid *next_ssid;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid
no_auto_peer	config_ssid.h	/^	int no_auto_peer;$/;"	m	struct:wpa_ssid
no_input	examples/p2p-nfc.py	/^no_input = False$/;"	v
no_keep_alive	wpa_supplicant_i.h	/^	unsigned int no_keep_alive:1;$/;"	m	struct:wpa_supplicant
no_mppe_keys	eapol_test.c	/^	int no_mppe_keys;$/;"	m	struct:eapol_test_data	file:
noc_filter	dbus/dbus_new.c	/^static DBusHandlerResult noc_filter(DBusConnection *conn,$/;"	f	file:
noise	bss.h	/^	int noise;$/;"	m	struct:wpa_bss
nominal_msdu_size	wmm_ac.h	/^	int nominal_msdu_size;$/;"	m	struct:wmm_ac_ts_setup_params
non_leap	config_ssid.h	/^	int non_leap;$/;"	m	struct:wpa_ssid
non_p2p_network_enabled	scan.c	/^static int non_p2p_network_enabled(struct wpa_supplicant *wpa_s)$/;"	f	file:
normal_scans	wpa_supplicant_i.h	/^	int normal_scans; \/* normal scans run before sched_scan *\/$/;"	m	struct:wpa_supplicant
not_attached	notifier.c	/^static int not_attached = 0;$/;"	v	file:
not_broadcast	notifier.c	/^static int not_broadcast(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
not_cleanup	notifier.c	/^static void not_cleanup(void)$/;"	f	file:
not_close_connection	notifier.c	/^static void not_close_connection(void)$/;"	f	file:
not_cmd	notifier.c	/^struct not_cmd {$/;"	s	file:
not_cmd	wpa_not_disp.c	/^struct not_cmd {$/;"	s	file:
not_cmd_quit	notifier.c	/^static int not_cmd_quit(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
not_command	notifier.c	/^static inline int not_command(struct wpa_ctrl *ctrl, char *cmd)$/;"	f	file:
not_commands	notifier.c	/^static struct not_cmd not_commands[] = {$/;"	v	typeref:struct:not_cmd	file:
not_commands	wpa_not_disp.c	/^static struct not_cmd not_commands[] = {$/;"	v	typeref:struct:not_cmd	file:
not_conn	notifier.c	/^static struct wpa_ctrl *not_conn;$/;"	v	typeref:struct:wpa_ctrl	file:
not_disable_fast_delivery	notifier.c	/^static int not_disable_fast_delivery(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
not_disp	bk_wpa_not_disp.c	/^static void not_disp(void)$/;"	f	file:
not_disp	wpa_not_disp.c	/^static void not_disp(void)$/;"	f	file:
not_disp_attached	bk_wpa_not_disp.c	/^static int not_disp_attached = 0;$/;"	v	file:
not_disp_attached	wpa_not_disp.c	/^static int not_disp_attached = 0;$/;"	v	file:
not_disp_cleanup	bk_wpa_not_disp.c	/^static void not_disp_cleanup(void)$/;"	f	file:
not_disp_cleanup	wpa_not_disp.c	/^static void not_disp_cleanup(void)$/;"	f	file:
not_disp_close_connection	bk_wpa_not_disp.c	/^static void not_disp_close_connection(void) \/* Mallesh: predicted the func name based on errors. *\/$/;"	f	file:
not_disp_close_connection	wpa_not_disp.c	/^static void not_disp_close_connection(void) \/* Mallesh: predicted the func name based on errors. *\/$/;"	f	file:
not_disp_command	bk_wpa_not_disp.c	/^static int not_disp_command(struct wpa_ctrl *ctrl, char *cmd, int print)$/;"	f	file:
not_disp_command	wpa_not_disp.c	/^static int not_disp_command(struct wpa_ctrl *ctrl, char *cmd, int print)$/;"	f	file:
not_disp_edit_cmd_cb	bk_wpa_not_disp.c	/^static void not_disp_edit_cmd_cb(void *ctx, char *cmd)$/;"	f	file:
not_disp_edit_eof_cb	bk_wpa_not_disp.c	/^static void not_disp_edit_eof_cb(void *ctx)$/;"	f	file:
not_disp_end	bk_wpa_not_disp.c	/^static void not_disp_end(void *eloop_ctx, void *timeout_ctx){$/;"	f	file:
not_disp_end	wpa_not_disp.c	/^static void not_disp_end(void *eloop_ctx, void *timeout_ctx){$/;"	f	file:
not_disp_mon_receive	bk_wpa_not_disp.c	/^static void not_disp_mon_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:
not_disp_mon_receive	wpa_not_disp.c	/^static void not_disp_mon_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:
not_disp_msg_cb	bk_wpa_not_disp.c	/^static void not_disp_msg_cb(char *msg, size_t len)$/;"	f	file:
not_disp_msg_cb	wpa_not_disp.c	/^static void not_disp_msg_cb(char *msg, size_t len)$/;"	f	file:
not_disp_open_connection	bk_wpa_not_disp.c	/^static int not_disp_open_connection()$/;"	f	file:
not_disp_ping	bk_wpa_not_disp.c	/^static void not_disp_ping(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
not_disp_reconnect	bk_wpa_not_disp.c	/^static void not_disp_reconnect(void)$/;"	f	file:
not_disp_reconnect	wpa_not_disp.c	/^static void not_disp_reconnect(void)$/;"	f	file:
not_disp_recv_pending	bk_wpa_not_disp.c	/^static void not_disp_recv_pending(struct wpa_ctrl *ctrl)$/;"	f	file:
not_disp_recv_pending	wpa_not_disp.c	/^static void not_disp_recv_pending(struct wpa_ctrl *ctrl)$/;"	f	file:
not_disp_terminate	bk_wpa_not_disp.c	/^static void not_disp_terminate(int sig, void *ctx)$/;"	f	file:
not_disp_terminate	wpa_not_disp.c	/^static void not_disp_terminate(int sig, void *ctx)$/;"	f	file:
not_edit_cmd_cb	notifier.c	/^static void not_edit_cmd_cb(void *ctx, char *cmd)$/;"	f	file:
not_edit_eof_cb	notifier.c	/^static void not_edit_eof_cb(void *ctx)$/;"	f	file:
not_enable_fast_delivery	notifier.c	/^static int not_enable_fast_delivery(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
not_event	bk_wpa_not_disp.c	/^static void not_event(const char *str){$/;"	f	file:
not_event	wpa_not_disp.c	/^static void not_event(const char *str){$/;"	f	file:
not_init	notifier.c	/^static void not_init(void){$/;"	f	file:
not_msg_cb	notifier.c	/^static void not_msg_cb(char *msg, size_t len)$/;"	f	file:
not_new	notifier.c	/^static int not_new(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
not_open_connection	notifier.c	/^static int not_open_connection(){$/;"	f	file:
not_open_connection	wpa_not_disp.c	/^static int not_open_connection()$/;"	f	file:
not_periodic	notifier.c	/^static int not_periodic(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
not_ping	notifier.c	/^static void not_ping(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
not_receive	notifier.c	/^static void not_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:
not_recv_pending	notifier.c	/^static void not_recv_pending(struct wpa_ctrl *ctrl)$/;"	f	file:
not_request	notifier.c	/^static void not_request(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
not_terminate	notifier.c	/^static void not_terminate(int sig, void *ctx)$/;"	f	file:
notify_beacon_loss	bgscan.h	/^	void (*notify_beacon_loss)(void *priv);$/;"	m	struct:bgscan_ops
notify_bss_changes	bss.c	/^static void notify_bss_changes(struct wpa_supplicant *wpa_s, u32 changes,$/;"	f	file:
notify_neighbor_rep	wpa_supplicant_i.h	/^	void (*notify_neighbor_rep)(void *ctx, struct wpabuf *neighbor_rep);$/;"	m	struct:rrm_data
notify_scan	autoscan.h	/^	int (*notify_scan)(void *priv, struct wpa_scan_results *scan_res);$/;"	m	struct:autoscan_ops
notify_scan	bgscan.h	/^	int (*notify_scan)(void *priv, struct wpa_scan_results *scan_res);$/;"	m	struct:bgscan_ops
notify_signal_change	bgscan.h	/^	void (*notify_signal_change)(void *priv, int above,$/;"	m	struct:bgscan_ops
notlist	bk_wpa_not_disp.c	/^struct wipush_not *notlist;$/;"	v	typeref:struct:wipush_not
notlist	wpa_not_disp.c	/^struct wipush_not *notlist;$/;"	v	typeref:struct:wipush_not
num	notifier.c	/^	int num;$/;"	m	struct:per_not	file:
num_bss	wpa_supplicant_i.h	/^	size_t num_bss;$/;"	m	struct:wpa_supplicant
num_bssid_blacklist	config_ssid.h	/^	size_t num_bssid_blacklist;$/;"	m	struct:wpa_ssid
num_bssid_whitelist	config_ssid.h	/^	size_t num_bssid_whitelist;$/;"	m	struct:wpa_ssid
num_domain	config.h	/^	size_t num_domain;$/;"	m	struct:wpa_cred
num_excluded_ssid	config.h	/^	size_t num_excluded_ssid;$/;"	m	struct:wpa_cred
num_modes	wpa_supplicant_i.h	/^		u16 num_modes;$/;"	m	struct:wpa_supplicant::__anon8
num_mppe_mismatch	eapol_test.c	/^	int num_mppe_ok, num_mppe_mismatch;$/;"	m	struct:eapol_test_data	file:
num_mppe_ok	eapol_test.c	/^	int num_mppe_ok, num_mppe_mismatch;$/;"	m	struct:eapol_test_data	file:
num_multichan_concurrent	wpa_supplicant_i.h	/^	unsigned int num_multichan_concurrent;$/;"	m	struct:wpa_supplicant
num_neigh	bgscan_learn.c	/^	size_t num_neigh;$/;"	m	struct:bgscan_learn_bss	file:
num_osu_scans	wpa_supplicant_i.h	/^	unsigned int num_osu_scans;$/;"	m	struct:wpa_supplicant
num_p2p_clients	config_ssid.h	/^	size_t num_p2p_clients;$/;"	m	struct:wpa_ssid
num_p2p_pref_chan	config.h	/^	unsigned int num_p2p_pref_chan;$/;"	m	struct:wpa_config
num_prio	config.h	/^	int num_prio;$/;"	m	struct:wpa_config
num_prov_found	wpa_supplicant_i.h	/^	unsigned int num_prov_found;$/;"	m	struct:wpa_supplicant
num_req_conn_capab	config.h	/^	unsigned int num_req_conn_capab;$/;"	m	struct:wpa_cred
num_roaming_partner	config.h	/^	size_t num_roaming_partner;$/;"	m	struct:wpa_cred
num_sec_device_types	config.h	/^	int num_sec_device_types;$/;"	m	struct:wpa_config
num_triplets	eapol_test.c	1079;"	d	file:
num_triplets	eapol_test.c	984;"	d	file:
num_wps_ap	wpa_supplicant_i.h	/^	size_t num_wps_ap;$/;"	m	struct:wpa_supplicant
obss_scan_int	wpa_supplicant_i.h	/^		u16 obss_scan_int;$/;"	m	struct:wpa_supplicant::__anon4
ocsp	config.h	/^	int ocsp;$/;"	m	struct:wpa_cred
off_channel_freq	wpa_supplicant_i.h	/^	unsigned int off_channel_freq;$/;"	m	struct:wpa_supplicant
offchannel_cancel_remain_on_channel_cb	offchannel.c	/^void offchannel_cancel_remain_on_channel_cb(struct wpa_supplicant *wpa_s,$/;"	f
offchannel_clear_pending_action_tx	offchannel.c	/^void offchannel_clear_pending_action_tx(struct wpa_supplicant *wpa_s)$/;"	f
offchannel_deinit	offchannel.c	/^void offchannel_deinit(struct wpa_supplicant *wpa_s)$/;"	f
offchannel_pending_action_tx	offchannel.c	/^const void * offchannel_pending_action_tx(struct wpa_supplicant *wpa_s)$/;"	f
offchannel_remain_on_channel_cb	offchannel.c	/^void offchannel_remain_on_channel_cb(struct wpa_supplicant *wpa_s,$/;"	f
offchannel_send_action	offchannel.c	/^int offchannel_send_action(struct wpa_supplicant *wpa_s, unsigned int freq,$/;"	f
offchannel_send_action_done	offchannel.c	/^void offchannel_send_action_done(struct wpa_supplicant *wpa_s)$/;"	f
offchannel_send_action_result	wpa_supplicant_i.h	/^enum offchannel_send_action_result {$/;"	g
offchannel_send_action_tx_status	offchannel.c	/^void offchannel_send_action_tx_status($/;"	f
offchannel_tx_started	gas_query.c	/^	unsigned int offchannel_tx_started:1;$/;"	m	struct:gas_query_pending	file:
okc	config.h	/^	int okc;$/;"	m	struct:wpa_config
op_class	p2p_supplicant.c	/^	u8 op_class;$/;"	m	struct:p2p_oper_class_map	file:
op_class	p2p_supplicant.c	/^static struct p2p_oper_class_map op_class[] = {$/;"	v	typeref:struct:p2p_oper_class_map	file:
openCtrlConnection	wpa_gui-qt4/wpagui.cpp	/^int WpaGui::openCtrlConnection(const char *ifname)$/;"	f	class:WpaGui
opensc_engine_path	config.h	/^	char *opensc_engine_path;$/;"	m	struct:wpa_config
openssl_ciphers	config.h	/^	char *openssl_ciphers;$/;"	m	struct:wpa_config
operator <	wpa_gui-qt4/scanresultsitem.cpp	/^bool ScanResultsItem::operator< (const QTreeWidgetItem &other) const$/;"	f	class:ScanResultsItem
os_version	config.h	/^	u8 os_version[4];$/;"	m	struct:wpa_config
osu_dir	config.h	/^	char *osu_dir;$/;"	m	struct:wpa_config
osu_icon	hs20_supplicant.c	/^struct osu_icon {$/;"	s	file:
osu_icon_fetch_start	wpa_supplicant_i.h	/^	struct os_reltime osu_icon_fetch_start;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::os_reltime
osu_icon_id	wpa_supplicant_i.h	/^	unsigned int osu_icon_id;$/;"	m	struct:wpa_supplicant
osu_lang_string	hs20_supplicant.c	/^struct osu_lang_string {$/;"	s	file:
osu_methods	hs20_supplicant.c	/^	u32 osu_methods; \/* bit 0 = OMA-DM, bit 1 = SOAP-XML SPP *\/$/;"	m	struct:osu_provider	file:
osu_nai	hs20_supplicant.c	/^	char osu_nai[256];$/;"	m	struct:osu_provider	file:
osu_prov	wpa_supplicant_i.h	/^	struct osu_provider *osu_prov;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::osu_provider
osu_prov_count	wpa_supplicant_i.h	/^	size_t osu_prov_count;$/;"	m	struct:wpa_supplicant
osu_provider	hs20_supplicant.c	/^struct osu_provider {$/;"	s	file:
osu_ssid	hs20_supplicant.c	/^	u8 osu_ssid[32];$/;"	m	struct:osu_provider	file:
osu_ssid_len	hs20_supplicant.c	/^	u8 osu_ssid_len;$/;"	m	struct:osu_provider	file:
overlap	ctrl_iface_named_pipe.c	/^	OVERLAPPED overlap;$/;"	m	struct:wpa_ctrl_dst	file:
overlap	ctrl_iface_named_pipe.c	/^	OVERLAPPED overlap;$/;"	m	struct:wpa_global_dst	file:
override_ctrl_interface	wpa_supplicant_i.h	/^	char *override_ctrl_interface;$/;"	m	struct:wpa_params
override_driver	wpa_supplicant_i.h	/^	char *override_driver;$/;"	m	struct:wpa_params
own_addr	eapol_test.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:eapol_test_data	file:
own_addr	wpa_supplicant_i.h	/^	unsigned char own_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
own_auth_tx	ibss_rsn.h	/^	struct os_reltime own_auth_tx;$/;"	m	struct:ibss_rsn_peer	typeref:struct:ibss_rsn_peer::os_reltime
own_disconnect_req	wpa_supplicant_i.h	/^	unsigned int own_disconnect_req:1;$/;"	m	struct:wpa_supplicant
own_ip_addr	eapol_test.c	/^	struct in_addr own_ip_addr;$/;"	m	struct:eapol_test_data	typeref:struct:eapol_test_data::in_addr	file:
own_scan_requested	wpa_supplicant_i.h	/^	unsigned int own_scan_requested:1;$/;"	m	struct:wpa_supplicant
own_scan_running	wpa_supplicant_i.h	/^	unsigned int own_scan_running:1;$/;"	m	struct:wpa_supplicant
p2p	config_ssid.h	/^	u8 p2p;$/;"	m	struct:psk_list_entry
p2p	wpa_supplicant_i.h	/^	struct p2p_data *p2p;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::p2p_data
p2pStateChange	examples/p2p/p2p_listen.py	/^def p2pStateChange(status):$/;"	f
p2pStateChange	examples/p2p/p2p_stop_find.py	/^def p2pStateChange(status):$/;"	f
p2p_24ghz_social_channels	wpa_supplicant_i.h	/^	unsigned int p2p_24ghz_social_channels:1;$/;"	m	struct:wpa_global
p2p_add_cli_chan	config.h	/^	int p2p_add_cli_chan;$/;"	m	struct:wpa_config
p2p_auth_invite	wpa_supplicant_i.h	/^	u8 p2p_auth_invite[ETH_ALEN];$/;"	m	struct:wpa_supplicant
p2p_auto_join	wpa_supplicant_i.h	/^	unsigned int p2p_auto_join:1;$/;"	m	struct:wpa_supplicant
p2p_auto_pd	wpa_supplicant_i.h	/^	unsigned int p2p_auto_pd:1;$/;"	m	struct:wpa_supplicant
p2p_auto_started	wpa_supplicant_i.h	/^	struct os_reltime p2p_auto_started;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::os_reltime
p2p_client_list	config_ssid.h	/^	u8 *p2p_client_list;$/;"	m	struct:wpa_ssid
p2p_config_write	p2p_supplicant.c	/^static void p2p_config_write(struct wpa_supplicant *wpa_s)$/;"	f	file:
p2p_connect_freq	wpa_supplicant_i.h	/^	int p2p_connect_freq;$/;"	m	struct:wpa_supplicant
p2p_ctrl_asp_provision	ctrl_iface.c	/^static int p2p_ctrl_asp_provision(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_asp_provision_resp	ctrl_iface.c	/^static int p2p_ctrl_asp_provision_resp(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_connect	ctrl_iface.c	/^static int p2p_ctrl_connect(struct wpa_supplicant *wpa_s, char *cmd,$/;"	f	file:
p2p_ctrl_disallow_freq	ctrl_iface.c	/^static int p2p_ctrl_disallow_freq(struct wpa_supplicant *wpa_s,$/;"	f	file:
p2p_ctrl_ext_listen	ctrl_iface.c	/^static int p2p_ctrl_ext_listen(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_find	ctrl_iface.c	/^static int p2p_ctrl_find(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_flush	ctrl_iface.c	/^static void p2p_ctrl_flush(struct wpa_supplicant *wpa_s)$/;"	f	file:
p2p_ctrl_group_add	ctrl_iface.c	/^static int p2p_ctrl_group_add(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_group_add_persistent	ctrl_iface.c	/^static int p2p_ctrl_group_add_persistent(struct wpa_supplicant *wpa_s,$/;"	f	file:
p2p_ctrl_invite	ctrl_iface.c	/^static int p2p_ctrl_invite(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_invite_group	ctrl_iface.c	/^static int p2p_ctrl_invite_group(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_invite_persistent	ctrl_iface.c	/^static int p2p_ctrl_invite_persistent(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_listen	ctrl_iface.c	/^static int p2p_ctrl_listen(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_peer	ctrl_iface.c	/^static int p2p_ctrl_peer(struct wpa_supplicant *wpa_s, char *cmd,$/;"	f	file:
p2p_ctrl_presence_req	ctrl_iface.c	/^static int p2p_ctrl_presence_req(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_prov_disc	ctrl_iface.c	/^static int p2p_ctrl_prov_disc(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_reject	ctrl_iface.c	/^static int p2p_ctrl_reject(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_remove_client	ctrl_iface.c	/^static int p2p_ctrl_remove_client(struct wpa_supplicant *wpa_s, const char *cmd)$/;"	f	file:
p2p_ctrl_serv_disc_cancel_req	ctrl_iface.c	/^static int p2p_ctrl_serv_disc_cancel_req(struct wpa_supplicant *wpa_s,$/;"	f	file:
p2p_ctrl_serv_disc_external	ctrl_iface.c	/^static int p2p_ctrl_serv_disc_external(struct wpa_supplicant *wpa_s,$/;"	f	file:
p2p_ctrl_serv_disc_req	ctrl_iface.c	/^static int p2p_ctrl_serv_disc_req(struct wpa_supplicant *wpa_s, char *cmd,$/;"	f	file:
p2p_ctrl_serv_disc_resp	ctrl_iface.c	/^static int p2p_ctrl_serv_disc_resp(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_service_add	ctrl_iface.c	/^static int p2p_ctrl_service_add(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_service_add_asp	ctrl_iface.c	/^static int p2p_ctrl_service_add_asp(struct wpa_supplicant *wpa_s,$/;"	f	file:
p2p_ctrl_service_add_bonjour	ctrl_iface.c	/^static int p2p_ctrl_service_add_bonjour(struct wpa_supplicant *wpa_s,$/;"	f	file:
p2p_ctrl_service_add_upnp	ctrl_iface.c	/^static int p2p_ctrl_service_add_upnp(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_service_del	ctrl_iface.c	/^static int p2p_ctrl_service_del(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_service_del_asp	ctrl_iface.c	/^static int p2p_ctrl_service_del_asp(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_service_del_bonjour	ctrl_iface.c	/^static int p2p_ctrl_service_del_bonjour(struct wpa_supplicant *wpa_s,$/;"	f	file:
p2p_ctrl_service_del_upnp	ctrl_iface.c	/^static int p2p_ctrl_service_del_upnp(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_service_replace	ctrl_iface.c	/^static int p2p_ctrl_service_replace(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_ctrl_set	ctrl_iface.c	/^static int p2p_ctrl_set(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
p2p_dev	wpa_supplicant_i.h	/^	struct wpa_supplicant *p2p_dev;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_supplicant
p2p_dev_addr	dbus/dbus_new_handlers_wps.c	/^	u8 *p2p_dev_addr;$/;"	m	struct:wps_start_params	file:
p2p_dev_addr	wpa_supplicant_i.h	/^	u8 p2p_dev_addr[ETH_ALEN];$/;"	m	struct:wpa_global
p2p_device_addr	dbus/dbus_new_handlers_p2p.h	/^	u8 p2p_device_addr[ETH_ALEN];$/;"	m	struct:peer_handler_args
p2p_disable_ip_addr_req	wpa_supplicant_i.h	/^	unsigned int p2p_disable_ip_addr_req:1;$/;"	m	struct:wpa_supplicant
p2p_disabled	config.h	/^	int p2p_disabled;$/;"	m	struct:wpa_config
p2p_disabled	wpa_supplicant_i.h	/^	int p2p_disabled;$/;"	m	struct:wpa_global
p2p_disallow_freq	wpa_supplicant_i.h	/^	struct wpa_freq_range_list p2p_disallow_freq;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpa_freq_range_list
p2p_fail_on_wps_complete	wpa_supplicant_i.h	/^	unsigned int p2p_fail_on_wps_complete:1;$/;"	m	struct:wpa_global
p2p_fallback_to_go_neg	wpa_supplicant_i.h	/^	unsigned int p2p_fallback_to_go_neg:1;$/;"	m	struct:wpa_supplicant
p2p_first_connection_timeout	wpa_supplicant_i.h	/^	int p2p_first_connection_timeout;$/;"	m	struct:wpa_supplicant
p2p_get_passphrase	ctrl_iface.c	/^static int p2p_get_passphrase(struct wpa_supplicant *wpa_s, char *buf,$/;"	f	file:
p2p_go_avoid_freq	wpa_supplicant_i.h	/^	struct wpa_freq_range_list p2p_go_avoid_freq;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpa_freq_range_list
p2p_go_configured	p2p_supplicant.c	/^static void p2p_go_configured(void *ctx, void *data)$/;"	f	file:
p2p_go_ctwindow	config.h	/^	int p2p_go_ctwindow;$/;"	m	struct:wpa_config
p2p_go_dump_common_freqs	p2p_supplicant.c	/^static void p2p_go_dump_common_freqs(struct wpa_supplicant *wpa_s)$/;"	f	file:
p2p_go_group_formation_completed	wpa_supplicant_i.h	/^	unsigned int p2p_go_group_formation_completed:1;$/;"	m	struct:wpa_supplicant
p2p_go_ht40	config.h	/^	int p2p_go_ht40;$/;"	m	struct:wpa_config
p2p_go_ht40	wpa_supplicant_i.h	/^	unsigned int p2p_go_ht40:1;$/;"	m	struct:wpa_supplicant
p2p_go_intent	config.h	/^	int p2p_go_intent;$/;"	m	struct:wpa_config
p2p_go_intent	wpa_supplicant_i.h	/^	int p2p_go_intent;$/;"	m	struct:wpa_supplicant
p2p_go_max_inactivity	config.h	/^	int p2p_go_max_inactivity;$/;"	m	struct:wpa_config
p2p_go_save_group_common_freqs	p2p_supplicant.c	/^static void p2p_go_save_group_common_freqs(struct wpa_supplicant *wpa_s,$/;"	f	file:
p2p_go_vht	config.h	/^	int p2p_go_vht;$/;"	m	struct:wpa_config
p2p_go_vht	wpa_supplicant_i.h	/^	unsigned int p2p_go_vht:1;$/;"	m	struct:wpa_supplicant
p2p_go_wait_client	wpa_supplicant_i.h	/^	struct os_reltime p2p_go_wait_client;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::os_reltime
p2p_group	config_ssid.h	/^	int p2p_group;$/;"	m	struct:wpa_ssid
p2p_group	wpa_supplicant_i.h	/^	struct p2p_group *p2p_group;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::p2p_group
p2p_group_common_freqs	wpa_supplicant_i.h	/^	int *p2p_group_common_freqs;$/;"	m	struct:wpa_supplicant
p2p_group_common_freqs_num	wpa_supplicant_i.h	/^	unsigned int p2p_group_common_freqs_num;$/;"	m	struct:wpa_supplicant
p2p_group_formation	wpa_supplicant_i.h	/^	struct wpa_supplicant *p2p_group_formation;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpa_supplicant
p2p_group_go_member_count	p2p_supplicant.c	/^static unsigned int p2p_group_go_member_count(struct wpa_supplicant *wpa_s)$/;"	f	file:
p2p_group_idle	config.h	/^	int p2p_group_idle;$/;"	m	struct:wpa_config
p2p_group_idx	wpa_supplicant_i.h	/^	int p2p_group_idx;$/;"	m	struct:wpa_supplicant
p2p_group_interface	wpa_supplicant_i.h	/^	} p2p_group_interface;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::__anon6
p2p_group_removal_reason	p2p_supplicant.c	/^enum p2p_group_removal_reason {$/;"	g	file:
p2p_handover_client	examples/p2p-nfc.py	/^def p2p_handover_client(llc):$/;"	f
p2p_ignore_shared_freq	config.h	/^	int p2p_ignore_shared_freq;$/;"	m	struct:wpa_config
p2p_in_invitation	wpa_supplicant_i.h	/^	int p2p_in_invitation;$/;"	m	struct:wpa_supplicant
p2p_in_provisioning	wpa_supplicant_i.h	/^	int p2p_in_provisioning;$/;"	m	struct:wpa_supplicant
p2p_init_wpa_s	wpa_supplicant_i.h	/^	struct wpa_supplicant *p2p_init_wpa_s;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpa_supplicant
p2p_intra_bss	config.h	/^	int p2p_intra_bss;$/;"	m	struct:wpa_config
p2p_invite_go_freq	wpa_supplicant_i.h	/^	int p2p_invite_go_freq;$/;"	m	struct:wpa_supplicant
p2p_invite_group	wpa_supplicant_i.h	/^	struct wpa_supplicant *p2p_invite_group;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpa_supplicant
p2p_ip_addr_info	wpa_supplicant_i.h	/^	u8 p2p_ip_addr_info[3 * 4];$/;"	m	struct:wpa_supplicant
p2p_join_scan_count	wpa_supplicant_i.h	/^	int p2p_join_scan_count;$/;"	m	struct:wpa_supplicant
p2p_join_ssid	wpa_supplicant_i.h	/^	u8 p2p_join_ssid[32];$/;"	m	struct:wpa_supplicant
p2p_join_ssid_len	wpa_supplicant_i.h	/^	size_t p2p_join_ssid_len;$/;"	m	struct:wpa_supplicant
p2p_last_4way_hs_fail	wpa_supplicant_i.h	/^	struct wpa_ssid *p2p_last_4way_hs_fail;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid
p2p_listen_channel	config.h	/^	int p2p_listen_channel;$/;"	m	struct:wpa_config
p2p_listen_reg_class	config.h	/^	int p2p_listen_reg_class;$/;"	m	struct:wpa_config
p2p_listen_work	wpa_supplicant_i.h	/^	struct wpa_radio_work *p2p_listen_work;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_radio_work
p2p_long_listen	wpa_supplicant_i.h	/^	int p2p_long_listen; \/* remaining time in long Listen state in ms *\/$/;"	m	struct:wpa_supplicant
p2p_mgmt	wpa_supplicant_i.h	/^	int p2p_mgmt;$/;"	m	struct:wpa_interface
p2p_mgmt	wpa_supplicant_i.h	/^	int p2p_mgmt;$/;"	m	struct:wpa_supplicant
p2p_nfc_tag_enabled	wpa_supplicant_i.h	/^	unsigned int p2p_nfc_tag_enabled:1;$/;"	m	struct:wpa_supplicant
p2p_no_go_freq	config.h	/^	struct wpa_freq_range_list p2p_no_go_freq;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpa_freq_range_list
p2p_no_group_iface	config.h	/^	int p2p_no_group_iface;$/;"	m	struct:wpa_config
p2p_oob_dev_pw	wpa_supplicant_i.h	/^	struct wpabuf *p2p_oob_dev_pw; \/* OOB Device Password for group$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpabuf
p2p_oob_dev_pw_id	wpa_supplicant_i.h	/^	u16 p2p_oob_dev_pw_id; \/* OOB Device Password Id for group formation *\/$/;"	m	struct:wpa_supplicant
p2p_oper_channel	config.h	/^	int p2p_oper_channel;$/;"	m	struct:wpa_config
p2p_oper_class_map	p2p_supplicant.c	/^struct p2p_oper_class_map {$/;"	s	file:
p2p_oper_reg_class	config.h	/^	int p2p_oper_reg_class;$/;"	m	struct:wpa_config
p2p_optimize_listen_chan	config.h	/^	int p2p_optimize_listen_chan;$/;"	m	struct:wpa_config
p2p_parse_asp_provision_cmd	ctrl_iface.c	/^static struct p2ps_provision * p2p_parse_asp_provision_cmd(const char *cmd)$/;"	f	file:
p2p_passphrase_len	config.h	/^	unsigned int p2p_passphrase_len;$/;"	m	struct:wpa_config
p2p_pd_before_go_neg	wpa_supplicant_i.h	/^	unsigned int p2p_pd_before_go_neg:1;$/;"	m	struct:wpa_supplicant
p2p_peer_oob_pk_hash_known	wpa_supplicant_i.h	/^	unsigned int p2p_peer_oob_pk_hash_known:1;$/;"	m	struct:wpa_supplicant
p2p_peer_oob_pubkey_hash	wpa_supplicant_i.h	/^	u8 p2p_peer_oob_pubkey_hash[WPS_OOB_PUBKEY_HASH_LEN];$/;"	m	struct:wpa_supplicant
p2p_per_sta_psk	wpa_supplicant_i.h	/^	unsigned int p2p_per_sta_psk:1;$/;"	m	struct:wpa_global
p2p_persistent_go_freq	wpa_supplicant_i.h	/^	int p2p_persistent_go_freq;$/;"	m	struct:wpa_supplicant
p2p_persistent_group	config_ssid.h	/^	int p2p_persistent_group;$/;"	m	struct:wpa_ssid
p2p_persistent_group	wpa_supplicant_i.h	/^	unsigned int p2p_persistent_group:1;$/;"	m	struct:wpa_supplicant
p2p_persistent_id	wpa_supplicant_i.h	/^	int p2p_persistent_id;$/;"	m	struct:wpa_supplicant
p2p_pin	wpa_supplicant_i.h	/^	char p2p_pin[10];$/;"	m	struct:wpa_supplicant
p2p_pref_chan	config.h	/^	struct p2p_channel *p2p_pref_chan;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::p2p_channel
p2p_scan_work	wpa_supplicant_i.h	/^	struct wpa_radio_work *p2p_scan_work;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_radio_work
p2p_sd_dns_uncompress	p2p_supplicant.c	/^static int p2p_sd_dns_uncompress(char *buf, size_t buf_len, const u8 *msg,$/;"	f	file:
p2p_sd_dns_uncompress_label	p2p_supplicant.c	/^static int p2p_sd_dns_uncompress_label(char **upos, char *uend, u8 *start,$/;"	f	file:
p2p_sd_over_ctrl_iface	wpa_supplicant_i.h	/^	int p2p_sd_over_ctrl_iface;$/;"	m	struct:wpa_supplicant
p2p_search_delay	config.h	/^	unsigned int p2p_search_delay;$/;"	m	struct:wpa_config
p2p_send_action_work	wpa_supplicant_i.h	/^	struct wpa_radio_work *p2p_send_action_work;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_radio_work
p2p_srv_bonjour	wpa_supplicant_i.h	/^	struct dl_list p2p_srv_bonjour; \/* struct p2p_srv_bonjour *\/$/;"	m	struct:wpa_global	typeref:struct:wpa_global::dl_list
p2p_srv_bonjour	wpa_supplicant_i.h	/^struct p2p_srv_bonjour {$/;"	s
p2p_srv_upnp	wpa_supplicant_i.h	/^	struct dl_list p2p_srv_upnp; \/* struct p2p_srv_upnp *\/$/;"	m	struct:wpa_global	typeref:struct:wpa_global::dl_list
p2p_srv_upnp	wpa_supplicant_i.h	/^struct p2p_srv_upnp {$/;"	s
p2p_ssid_postfix	config.h	/^	char *p2p_ssid_postfix;$/;"	m	struct:wpa_config
p2p_tag_read	examples/p2p-nfc.py	/^def p2p_tag_read(tag):$/;"	f
p2p_wps_method	wpa_supplicant_i.h	/^	int p2p_wps_method;$/;"	m	struct:wpa_supplicant
p2ps_group_capability	p2p_supplicant.c	/^static u8 p2ps_group_capability(void *ctx, u8 incoming, u8 role)$/;"	f	file:
p2ps_join_addr	wpa_supplicant_i.h	/^	u8 p2ps_join_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
p2ps_join_addr_valid	wpa_supplicant_i.h	/^	unsigned int p2ps_join_addr_valid:1;$/;"	m	struct:wpa_supplicant
paint	wpa_gui-qt4/signalbar.cpp	/^void SignalBar::paint(QPainter *painter,$/;"	f	class:SignalBar
pairwise_cipher	config_ssid.h	/^	int pairwise_cipher;$/;"	m	struct:wpa_ssid
pairwise_cipher	wpa_supplicant_i.h	/^	int pairwise_cipher;$/;"	m	struct:wpa_supplicant
param1	config.c	/^	void *param1, *param2, *param3, *param4;$/;"	m	struct:parse_data	file:
param1	config.c	/^	void *param1, *param2, *param3;$/;"	m	struct:global_parse_data	file:
param2	config.c	/^	void *param1, *param2, *param3, *param4;$/;"	m	struct:parse_data	file:
param2	config.c	/^	void *param1, *param2, *param3;$/;"	m	struct:global_parse_data	file:
param3	config.c	/^	void *param1, *param2, *param3, *param4;$/;"	m	struct:parse_data	file:
param3	config.c	/^	void *param1, *param2, *param3;$/;"	m	struct:global_parse_data	file:
param4	config.c	/^	void *param1, *param2, *param3, *param4;$/;"	m	struct:parse_data	file:
param_in_range	wmm_ac.c	/^static int param_in_range(const char *name, long value,$/;"	f	file:
params	wpa_supplicant_i.h	/^	struct wpa_params params;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpa_params
paramsFromConfig	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::paramsFromConfig(int network_id)$/;"	f	class:NetworkConfig
paramsFromScanResults	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::paramsFromScanResults(QTreeWidgetItem *sel)$/;"	f	class:NetworkConfig
parent	wpa_supplicant_i.h	/^	struct wpa_supplicant *parent;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_supplicant
parent_cred	config_ssid.h	/^	void *parent_cred;$/;"	m	struct:wpa_ssid
parse_argv	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::parse_argv()$/;"	f	class:WpaGui
parse_data	config.c	/^struct parse_data {$/;"	s	file:
parse_peer_object_path	dbus/dbus_new_handlers_p2p.c	/^static int parse_peer_object_path(const char *peer_path, u8 addr[ETH_ALEN])$/;"	f	file:
parser	config.c	/^	int (*parser)(const struct global_parse_data *data,$/;"	m	struct:global_parse_data	file:
parser	config.c	/^	int (*parser)(const struct parse_data *data, struct wpa_ssid *ssid,$/;"	m	struct:parse_data	file:
passive_scan	config.h	/^	int passive_scan;$/;"	m	struct:wpa_config
passphrase	config_ssid.h	/^	char *passphrase;$/;"	m	struct:wpa_ssid
password	config.h	/^	char *password;$/;"	m	struct:wpa_cred
path	dbus/dbus_new_helpers.h	/^	char *path;$/;"	m	struct:wpa_dbus_object_desc
paths	dbus/dbus_new_handlers_p2p.c	/^	char **paths;$/;"	m	struct:peer_group_data	file:
payload	bk_wpa_not_disp.c	/^	char *payload;$/;"	m	struct:wipush_not	file:
payload	wpa_not_disp.c	/^	char *payload;$/;"	m	struct:wipush_not	file:
pbc	examples/wps-ap-cli	/^pbc()$/;"	f
pbc_in_m1	config.h	/^	int pbc_in_m1;$/;"	m	struct:wpa_config
pcap_addpacket	utils/log2pcap.py	/^def pcap_addpacket(pcap_file, ts, data):$/;"	f
pcap_enum_devs	win_if_list.c	/^static void pcap_enum_devs(void)$/;"	f	file:
pcsc	config.h	/^	int pcsc;$/;"	m	struct:wpa_cred
pcsc_pin	config.h	/^	char *pcsc_pin;$/;"	m	struct:wpa_config
pcsc_pin	eapol_test.c	/^	const char *pcsc_pin;$/;"	m	struct:eapol_test_data	file:
pcsc_reader	config.h	/^	char *pcsc_reader;$/;"	m	struct:wpa_config
pcsc_reader	eapol_test.c	/^	const char *pcsc_reader;$/;"	m	struct:eapol_test_data	file:
pcsc_reader_init	wpa_supplicant.c	/^static int pcsc_reader_init(struct wpa_supplicant *wpa_s)$/;"	f	file:
peer_group_data	dbus/dbus_new_handlers_p2p.c	/^struct peer_group_data {$/;"	s	file:
peer_groups_changed	dbus/dbus_new.c	/^static void peer_groups_changed(struct wpa_supplicant *wpa_s)$/;"	f	file:
peer_handler_args	dbus/dbus_new_handlers_p2p.h	/^struct peer_handler_args {$/;"	s
peer_role_address	wpa_gui-qt4/peers.cpp	/^	peer_role_address = Qt::UserRole + 1,$/;"	e	enum:__anon10	file:
peer_role_bss_id	wpa_gui-qt4/peers.cpp	/^	peer_role_bss_id,$/;"	e	enum:__anon10	file:
peer_role_config_methods	wpa_gui-qt4/peers.cpp	/^	peer_role_config_methods,$/;"	e	enum:__anon10	file:
peer_role_details	wpa_gui-qt4/peers.cpp	/^	peer_role_details,$/;"	e	enum:__anon10	file:
peer_role_dev_passwd_id	wpa_gui-qt4/peers.cpp	/^	peer_role_dev_passwd_id,$/;"	e	enum:__anon10	file:
peer_role_ifname	wpa_gui-qt4/peers.cpp	/^	peer_role_ifname,$/;"	e	enum:__anon10	file:
peer_role_network_id	wpa_gui-qt4/peers.cpp	/^	peer_role_network_id$/;"	e	enum:__anon10	file:
peer_role_pri_dev_type	wpa_gui-qt4/peers.cpp	/^	peer_role_pri_dev_type,$/;"	e	enum:__anon10	file:
peer_role_requested_method	wpa_gui-qt4/peers.cpp	/^	peer_role_requested_method,$/;"	e	enum:__anon10	file:
peer_role_selected_method	wpa_gui-qt4/peers.cpp	/^	peer_role_selected_method,$/;"	e	enum:__anon10	file:
peer_role_selected_pin	wpa_gui-qt4/peers.cpp	/^	peer_role_selected_pin,$/;"	e	enum:__anon10	file:
peer_role_ssid	wpa_gui-qt4/peers.cpp	/^	peer_role_ssid,$/;"	e	enum:__anon10	file:
peer_role_type	wpa_gui-qt4/peers.cpp	/^	peer_role_type,$/;"	e	enum:__anon10	file:
peer_role_uuid	wpa_gui-qt4/peers.cpp	/^	peer_role_uuid,$/;"	e	enum:__anon10	file:
peer_type	wpa_gui-qt4/peers.cpp	/^enum peer_type {$/;"	g	file:
peerkey	config_ssid.h	/^	int peerkey;$/;"	m	struct:wpa_ssid
peers	ibss_rsn.h	/^	struct ibss_rsn_peer *peers;$/;"	m	struct:ibss_rsn	typeref:struct:ibss_rsn::ibss_rsn_peer
peers	wpa_gui-qt4/wpagui.h	/^	Peers *peers;$/;"	m	class:WpaGui
peersDialog	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::peersDialog()$/;"	f	class:WpaGui
pending	action_handler.c	/^	struct dl_list pending;$/;"	m	struct:action_handle	typeref:struct:action_handle::dl_list	file:
pending	gas_query.c	/^	struct dl_list pending; \/* struct gas_query_pending *\/$/;"	m	struct:gas_query	typeref:struct:gas_query::dl_list	file:
pending_action_bssid	wpa_supplicant_i.h	/^	u8 pending_action_bssid[ETH_ALEN];$/;"	m	struct:wpa_supplicant
pending_action_dst	wpa_supplicant_i.h	/^	u8 pending_action_dst[ETH_ALEN];$/;"	m	struct:wpa_supplicant
pending_action_freq	wpa_supplicant_i.h	/^	unsigned int pending_action_freq;$/;"	m	struct:wpa_supplicant
pending_action_no_cck	wpa_supplicant_i.h	/^	int pending_action_no_cck;$/;"	m	struct:wpa_supplicant
pending_action_src	wpa_supplicant_i.h	/^	u8 pending_action_src[ETH_ALEN];$/;"	m	struct:wpa_supplicant
pending_action_tx	wpa_supplicant_i.h	/^	struct wpabuf *pending_action_tx;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpabuf
pending_action_tx_done	wpa_supplicant_i.h	/^	unsigned int pending_action_tx_done:1;$/;"	m	struct:wpa_supplicant
pending_action_tx_status_cb	wpa_supplicant_i.h	/^	void (*pending_action_tx_status_cb)(struct wpa_supplicant *wpa_s,$/;"	m	struct:wpa_supplicant
pending_action_without_roc	wpa_supplicant_i.h	/^	int pending_action_without_roc;$/;"	m	struct:wpa_supplicant
pending_bssid	wpa_supplicant_i.h	/^	u8 pending_bssid[ETH_ALEN]; \/* If wpa_state == WPA_ASSOCIATING, this$/;"	m	struct:wpa_supplicant
pending_eapol_rx	wpa_supplicant_i.h	/^	struct wpabuf *pending_eapol_rx;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpabuf
pending_eapol_rx_src	wpa_supplicant_i.h	/^	u8 pending_eapol_rx_src[ETH_ALEN];$/;"	m	struct:wpa_supplicant
pending_eapol_rx_time	wpa_supplicant_i.h	/^	struct os_reltime pending_eapol_rx_time;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::os_reltime
pending_group_iface_for_p2ps	wpa_supplicant_i.h	/^	unsigned int pending_group_iface_for_p2ps:1;$/;"	m	struct:wpa_global
pending_interface_addr	wpa_supplicant_i.h	/^	u8 pending_interface_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
pending_interface_name	wpa_supplicant_i.h	/^	char pending_interface_name[100];$/;"	m	struct:wpa_supplicant
pending_interface_type	wpa_supplicant_i.h	/^	int pending_interface_type;$/;"	m	struct:wpa_supplicant
pending_invite_ssid_id	wpa_supplicant_i.h	/^	int pending_invite_ssid_id;$/;"	m	struct:wpa_supplicant
pending_join_dev_addr	wpa_supplicant_i.h	/^	u8 pending_join_dev_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
pending_join_iface_addr	wpa_supplicant_i.h	/^	u8 pending_join_iface_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
pending_join_wps_method	wpa_supplicant_i.h	/^	int pending_join_wps_method;$/;"	m	struct:wpa_supplicant
pending_listen_duration	wpa_supplicant_i.h	/^	unsigned int pending_listen_duration;$/;"	m	struct:wpa_supplicant
pending_listen_freq	wpa_supplicant_i.h	/^	unsigned int pending_listen_freq;$/;"	m	struct:wpa_supplicant
pending_mic_error_pairwise	wpa_supplicant_i.h	/^	int pending_mic_error_pairwise;$/;"	m	struct:wpa_supplicant
pending_mic_error_report	wpa_supplicant_i.h	/^	int pending_mic_error_report;$/;"	m	struct:wpa_supplicant
pending_p2ps_group	wpa_supplicant_i.h	/^	unsigned int pending_p2ps_group:1;$/;"	m	struct:wpa_global
pending_pd_before_join	wpa_supplicant_i.h	/^	int pending_pd_before_join;$/;"	m	struct:wpa_supplicant
pending_pd_config_methods	wpa_supplicant_i.h	/^	u16 pending_pd_config_methods;$/;"	m	struct:wpa_supplicant
pending_pd_use	wpa_supplicant_i.h	/^	} pending_pd_use;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::__anon7
per_not	notifier.c	/^struct per_not{$/;"	s	file:
period	notifier.c	/^	u32 period;$/;"	m	struct:per_not	file:
periodic_interval	autoscan_periodic.c	/^	int periodic_interval;$/;"	m	struct:autoscan_periodic_data	file:
perm_addr	wpa_supplicant_i.h	/^	unsigned char perm_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
persistent	examples/p2p/p2p_group_add.py	/^	persistent = False$/;"	v
persistent_group_object	examples/p2p/p2p_group_add.py	/^	persistent_group_object = None$/;"	v
persistent_group_object	examples/p2p/p2p_invite.py	/^	persistent_group_object = None$/;"	v
persistent_reconnect	config.h	/^	int persistent_reconnect;$/;"	m	struct:wpa_config
phase1	config.h	/^	char *phase1;$/;"	m	struct:wpa_cred
phase2	config.h	/^	char *phase2;$/;"	m	struct:wpa_cred
phy_type	wnm_sta.h	/^	u8 phy_type;$/;"	m	struct:neighbor_report
pick_best_roaming_partner	interworking.c	/^static struct wpa_bss * pick_best_roaming_partner(struct wpa_supplicant *wpa_s,$/;"	f	file:
pid_file	hostapd_cli.c	/^static const char *pid_file = NULL;$/;"	v	file:
pid_file	wpa_cli.c	/^static const char *pid_file = NULL;$/;"	v	file:
pid_file	wpa_supplicant_i.h	/^	char *pid_file;$/;"	m	struct:wpa_params
pin	dbus/dbus_new_handlers_wps.c	/^	char *pin;$/;"	m	struct:wps_start_params	file:
pin	examples/p2p/p2p_connect.py	/^	pin = None$/;"	v	class:P2P_Connect
ping	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::ping()$/;"	f	class:WpaGui
ping_interval	bk_wpa_not_disp.c	/^static int ping_interval = 5;$/;"	v	file:
ping_interval	hostapd_cli.c	/^static int ping_interval = 5;$/;"	v	file:
ping_interval	notifier.c	/^static int ping_interval = 5;$/;"	v	file:
ping_interval	wpa_cli.c	/^static int ping_interval = 5;$/;"	v	file:
ping_interval	wpa_not_disp.c	/^static int ping_interval = 5;$/;"	v	file:
pingsToStatusUpdate	wpa_gui-qt4/wpagui.h	/^	int pingsToStatusUpdate;$/;"	m	class:WpaGui
pipe	ctrl_iface_named_pipe.c	/^	HANDLE pipe;$/;"	m	struct:wpa_ctrl_dst	file:
pipe	ctrl_iface_named_pipe.c	/^	HANDLE pipe;$/;"	m	struct:wpa_global_dst	file:
pkcs11_engine_path	config.h	/^	char *pkcs11_engine_path;$/;"	m	struct:wpa_config
pkcs11_module_path	config.h	/^	char *pkcs11_module_path;$/;"	m	struct:wpa_config
plid	mesh_mpm.c	/^	const u8 *plid;$/;"	m	struct:mesh_peer_mgmt_ie	file:
plink_event	mesh_mpm.c	/^enum plink_event {$/;"	g	file:
plink_free_count	mesh_mpm.c	/^static int plink_free_count(struct hostapd_data *hapd)$/;"	f	file:
plink_timer	mesh_mpm.c	/^static void plink_timer(void *eloop_ctx, void *user_data)$/;"	f	file:
plmn_id_match	interworking.c	/^static int plmn_id_match(struct wpabuf *anqp, const char *imsi, int mnc_len)$/;"	f	file:
pmf	config.h	/^	enum mfp_options pmf;$/;"	m	struct:wpa_config	typeref:enum:wpa_config::mfp_options
pmf_in_use	gas_query.c	/^static int pmf_in_use(struct wpa_supplicant *wpa_s, const u8 *addr)$/;"	f	file:
pmk	mesh_mpm.c	/^	const u8 *pmk;$/;"	m	struct:mesh_peer_mgmt_ie	file:
pmksa_cache_to_eapol_data	tests/link_test.c	/^void pmksa_cache_to_eapol_data(struct rsn_pmksa_cache_entry *entry,$/;"	f
pn_	notifier.c	/^struct per_not *pn_;$/;"	v	typeref:struct:per_not
pnext	config_ssid.h	/^	struct wpa_ssid *pnext;$/;"	m	struct:wpa_ssid	typeref:struct:wpa_ssid::wpa_ssid
pno	wpa_supplicant_i.h	/^	int pno;$/;"	m	struct:wpa_supplicant
pno_sched_pending	wpa_supplicant_i.h	/^	int pno_sched_pending;$/;"	m	struct:wpa_supplicant
preassoc_mac_addr	config.h	/^	int preassoc_mac_addr;$/;"	m	struct:wpa_config
preauth_test_data	preauth_test.c	/^struct preauth_test_data {$/;"	s	file:
preference	wnm_sta.h	/^	u8 preference; \/* valid if preference_present=1 *\/$/;"	m	struct:neighbor_report
preference_present	wnm_sta.h	/^	unsigned int preference_present:1;$/;"	m	struct:neighbor_report
preq_notify_peer	wpa_supplicant_i.h	/^	char *preq_notify_peer;$/;"	m	struct:wpa_supplicant
prev	ctrl_iface_named_pipe.c	/^	struct wpa_ctrl_dst *next, *prev;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::	file:
prev	ctrl_iface_named_pipe.c	/^	struct wpa_global_dst *next, *prev;$/;"	m	struct:wpa_global_dst	typeref:struct:wpa_global_dst::	file:
prev	notifier.c	/^	struct per_not *prev;$/;"	m	struct:per_not	typeref:struct:per_not::per_not	file:
prev_bssid	wpa_supplicant_i.h	/^		u8 prev_bssid[ETH_ALEN];$/;"	m	struct:wpa_supplicant::__anon4
prev_bssid_set	wpa_supplicant_i.h	/^		int prev_bssid_set;$/;"	m	struct:wpa_supplicant::__anon4
prev_gas_addr	wpa_supplicant_i.h	/^	u8 last_gas_addr[ETH_ALEN], prev_gas_addr[ETH_ALEN];$/;"	m	struct:wpa_supplicant
prev_gas_dialog_token	wpa_supplicant_i.h	/^	u8 last_gas_dialog_token, prev_gas_dialog_token;$/;"	m	struct:wpa_supplicant
prev_gas_resp	wpa_supplicant_i.h	/^	struct wpabuf *last_gas_resp, *prev_gas_resp;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::
prev_scan_ssid	wpa_supplicant_i.h	/^	struct wpa_ssid *prev_scan_ssid; \/* previously scanned SSID;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid
prev_scan_wildcard	wpa_supplicant_i.h	/^	int prev_scan_wildcard;$/;"	m	struct:wpa_supplicant
prev_sched_ssid	wpa_supplicant_i.h	/^	struct wpa_ssid *prev_sched_ssid; \/* last SSID used in sched scan *\/$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_ssid
prev_tcgetattr	examples/p2p-nfc.py	/^prev_tcgetattr = 0$/;"	v
print_bin	nfc_pw_token.c	/^static void print_bin(const char *title, const struct wpabuf *buf)$/;"	f	file:
print_bss_info	ctrl_iface.c	/^static int print_bss_info(struct wpa_supplicant *wpa_s, struct wpa_bss *bss,$/;"	f	file:
print_cmd_help	wpa_cli.c	/^static void print_cmd_help(struct wpa_cli_cmd *cmd, const char *pad)$/;"	f	file:
print_help	wpa_cli.c	/^static void print_help(const char *cmd)$/;"	f	file:
priority	config.h	/^		u8 priority;$/;"	m	struct:wpa_cred::roaming_partner
priority	config.h	/^	int priority;$/;"	m	struct:wpa_cred
priority	config_ssid.h	/^	int priority;$/;"	m	struct:wpa_ssid
priority	wpa_gui-qt4/wpamsg.h	/^	int priority;$/;"	m	class:WpaMsg
priv	ctrl_iface_named_pipe.c	/^	struct ctrl_iface_global_priv *priv;$/;"	m	struct:wpa_global_dst	typeref:struct:wpa_global_dst::ctrl_iface_global_priv	file:
priv	ctrl_iface_named_pipe.c	/^	struct ctrl_iface_priv *priv;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::ctrl_iface_priv	file:
private_key	config.h	/^	char *private_key;$/;"	m	struct:wpa_cred
private_key_passwd	config.h	/^	char *private_key_passwd;$/;"	m	struct:wpa_cred
proactive_key_caching	config_ssid.h	/^	int proactive_key_caching;$/;"	m	struct:wpa_ssid
probe_idx	bgscan_learn.c	/^	int probe_idx;$/;"	m	struct:bgscan_learn_data	file:
probe_resp_ie	p2p_supplicant.c	/^	struct wpabuf *probe_resp_ie;$/;"	m	struct:wpas_p2p_listen_work	typeref:struct:wpas_p2p_listen_work::wpabuf	file:
probe_resp_offloads	wpa_supplicant_i.h	/^	unsigned int probe_resp_offloads;$/;"	m	struct:wpa_supplicant
processCtrlReq	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::processCtrlReq(const char *req)$/;"	f	class:WpaGui
processMsg	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::processMsg(char *msg)$/;"	f	class:WpaGui
process_departing_node	notifier.c	/^static void process_departing_node(char *buf, size_t len){$/;"	f	file:
process_incoming	notifier.c	/^static void process_incoming(char *buf, size_t len){$/;"	f	file:
process_notification	bk_wpa_not_disp.c	/^static void process_notification(const char *not){$/;"	f	file:
process_notification	wpa_not_disp.c	/^static void process_notification(const char *not){$/;"	f	file:
process_request	examples/p2p-nfc.py	/^    def process_request(self, request):$/;"	m	class:HandoverServer
process_request	examples/wps-nfc.py	/^    def process_request(self, request):$/;"	m	class:HandoverServer
process_timeout	dbus/dbus_common.c	/^static void process_timeout(void *eloop_ctx, void *sock_ctx)$/;"	f	file:
process_wakeup_main	dbus/dbus_common.c	/^static void process_wakeup_main(int sig, void *signal_ctx)$/;"	f	file:
process_watch	dbus/dbus_common.c	/^static void process_watch(struct wpas_dbus_priv *priv,$/;"	f	file:
process_watch_exception	dbus/dbus_common.c	/^static void process_watch_exception(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:
process_watch_read	dbus/dbus_common.c	/^static void process_watch_read(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:
process_watch_write	dbus/dbus_common.c	/^static void process_watch_write(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:
prop_changed_flags	dbus/dbus_new_helpers.h	/^	u8 *prop_changed_flags;$/;"	m	struct:wpa_dbus_object_desc
properties	dbus/dbus_new_helpers.h	/^	const struct wpa_dbus_property_desc *properties;$/;"	m	struct:wpa_dbus_object_desc	typeref:struct:wpa_dbus_object_desc::wpa_dbus_property_desc
properties	wpa_gui-qt4/peers.cpp	/^void Peers::properties()$/;"	f	class:Peers
propertiesChanged	examples/wpas-dbus-new-signals.py	/^def propertiesChanged(properties):$/;"	f
propertiesChanged	examples/wpas-dbus-new-wps.py	/^def propertiesChanged(properties):$/;"	f
propertiesChanged	examples/wpas-dbus-new.py	/^def propertiesChanged(properties):$/;"	f
propertiesChangedBss	examples/wpas-dbus-new-signals.py	/^def propertiesChangedBss(properties):$/;"	f
propertiesChangedInterface	examples/wpas-dbus-new-signals.py	/^def propertiesChangedInterface(properties):$/;"	f
propertiesChangedNetwork	examples/wpas-dbus-new-signals.py	/^def propertiesChangedNetwork(properties):$/;"	f
properties_get	dbus/dbus_new_helpers.c	/^static DBusMessage * properties_get(DBusMessage *message,$/;"	f	file:
properties_get_all	dbus/dbus_new_helpers.c	/^static DBusMessage * properties_get_all(DBusMessage *message, char *interface,$/;"	f	file:
properties_get_or_set	dbus/dbus_new_helpers.c	/^properties_get_or_set(DBusMessage *message, DBusMessageIter *iter,$/;"	f	file:
properties_handler	dbus/dbus_new_helpers.c	/^static DBusMessage * properties_handler(DBusMessage *message,$/;"	f	file:
properties_set	dbus/dbus_new_helpers.c	/^static DBusMessage * properties_set(DBusMessage *message,$/;"	f	file:
proto	config_ssid.h	/^	int proto;$/;"	m	struct:wpa_ssid
proto	wpa_supplicant_i.h	/^		int proto;$/;"	m	struct:wpa_supplicant::__anon4
proto_id	mesh_mpm.c	/^	const u8 *proto_id;$/;"	m	struct:mesh_peer_mgmt_ie	file:
provisioning_sp	config.h	/^	char *provisioning_sp;$/;"	m	struct:wpa_cred
psk	config_ssid.h	/^	u8 psk[32];$/;"	m	struct:psk_list_entry
psk	config_ssid.h	/^	u8 psk[32];$/;"	m	struct:wpa_ssid
psk	ibss_rsn.h	/^	u8 psk[PMK_LEN];$/;"	m	struct:ibss_rsn
psk	tests/test_wpa.c	/^	u8 psk[PMK_LEN];$/;"	m	struct:wpa	file:
psk_list	config_ssid.h	/^	struct dl_list psk_list;$/;"	m	struct:wpa_ssid	typeref:struct:wpa_ssid::dl_list
psk_list_entry	config_ssid.h	/^struct psk_list_entry {$/;"	s
psk_set	config_ssid.h	/^	int psk_set;$/;"	m	struct:wpa_ssid
pssid	config.h	/^	struct wpa_ssid **pssid;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpa_ssid
put_changed_properties	dbus/dbus_new_helpers.c	/^static dbus_bool_t put_changed_properties($/;"	f	file:
qual	bss.h	/^	int qual;$/;"	m	struct:wpa_bss
query	wpa_supplicant_i.h	/^	struct wpabuf *query;$/;"	m	struct:p2p_srv_bonjour	typeref:struct:p2p_srv_bonjour::wpabuf
quietMode	wpa_gui-qt4/wpagui.h	/^	bool quietMode;$/;"	m	class:WpaGui
quitAction	wpa_gui-qt4/wpagui.h	/^	QAction *quitAction;$/;"	m	class:WpaGui
radio	wpa_supplicant_i.h	/^	struct wpa_radio *radio; \/* shared radio context *\/$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_radio
radio_add_interface	wpa_supplicant.c	/^static struct wpa_radio * radio_add_interface(struct wpa_supplicant *wpa_s,$/;"	f	file:
radio_add_work	wpa_supplicant.c	/^int radio_add_work(struct wpa_supplicant *wpa_s, unsigned int freq,$/;"	f
radio_list	wpa_supplicant_i.h	/^	struct dl_list radio_list; \/* list head: struct wpa_radio::ifaces *\/$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::dl_list
radio_remove_interface	wpa_supplicant.c	/^static void radio_remove_interface(struct wpa_supplicant *wpa_s)$/;"	f	file:
radio_remove_works	wpa_supplicant.c	/^void radio_remove_works(struct wpa_supplicant *wpa_s,$/;"	f
radio_start_next_work	wpa_supplicant.c	/^static void radio_start_next_work(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
radio_work_check_next	wpa_supplicant.c	/^void radio_work_check_next(struct wpa_supplicant *wpa_s)$/;"	f
radio_work_done	wpa_supplicant.c	/^void radio_work_done(struct wpa_radio_work *work)$/;"	f
radio_work_free	wpa_supplicant.c	/^static void radio_work_free(struct wpa_radio_work *work)$/;"	f	file:
radio_work_pending	wpa_supplicant.c	/^radio_work_pending(struct wpa_supplicant *wpa_s, const char *type)$/;"	f
radius	eapol_test.c	/^	struct radius_client_data *radius;$/;"	m	struct:eapol_test_data	typeref:struct:eapol_test_data::radius_client_data	file:
radius_access_accept_received	eapol_test.c	/^	int radius_access_accept_received;$/;"	m	struct:eapol_test_data	file:
radius_access_reject_received	eapol_test.c	/^	int radius_access_reject_received;$/;"	m	struct:eapol_test_data	file:
radius_conf	eapol_test.c	/^	struct hostapd_radius_servers *radius_conf;$/;"	m	struct:eapol_test_data	typeref:struct:eapol_test_data::hostapd_radius_servers	file:
radius_identifier	eapol_test.c	/^	u8 radius_identifier;$/;"	m	struct:eapol_test_data	file:
rand_addr_lifetime	config.h	/^	unsigned int rand_addr_lifetime;$/;"	m	struct:wpa_config
rate_match	events.c	/^static int rate_match(struct wpa_supplicant *wpa_s, struct wpa_bss *bss)$/;"	f	file:
rdwr_connected	examples/p2p-nfc.py	/^def rdwr_connected(tag):$/;"	f
rdwr_connected	examples/wps-nfc.py	/^def rdwr_connected(tag):$/;"	f
rdwr_connected_p2p_write	examples/p2p-nfc.py	/^def rdwr_connected_p2p_write(tag):$/;"	f
rdwr_connected_write	examples/wps-nfc.py	/^def rdwr_connected_write(tag):$/;"	f
read_interface	main_winsvc.c	/^static int read_interface(struct wpa_global *global, HKEY _hk,$/;"	f	file:
realm	config.h	/^	char *realm;$/;"	m	struct:wpa_cred
realm	interworking.c	/^	char *realm;$/;"	m	struct:nai_realm	file:
reason	mesh_mpm.c	/^	const u8 *reason;$/;"	m	struct:mesh_peer_mgmt_ie	file:
reassoc_same_bss	wpa_supplicant_i.h	/^	int reassoc_same_bss; \/* reassociating to the same bss *\/$/;"	m	struct:wpa_supplicant
reassoc_same_bss_optim	config.h	/^	int reassoc_same_bss_optim;$/;"	m	struct:wpa_config
reassociate	wpa_supplicant_i.h	/^	int reassociate; \/* reassociation requested *\/$/;"	m	struct:wpa_supplicant
reattach	wpa_supplicant_i.h	/^	unsigned int reattach:1; \/* reassociation to the same BSS requested *\/$/;"	m	struct:wpa_supplicant
receiveMsgs	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::receiveMsgs()$/;"	f	class:WpaGui
reconnectAction	wpa_gui-qt4/wpagui.h	/^	QAction *reconnectAction;$/;"	m	class:WpaGui
recursive_flush_changed_properties	dbus/dbus_new_helpers.c	/^static void recursive_flush_changed_properties(DBusConnection *con,$/;"	f	file:
reg_init_str	events.c	/^static const char * reg_init_str(enum reg_change_initiator init)$/;"	f	file:
reg_type_str	events.c	/^static const char * reg_type_str(enum reg_type type)$/;"	f	file:
register_new_message	notifier.c	/^static void register_new_message(char *buf, size_t len){$/;"	f	file:
register_service	main_winsvc.c	/^static int register_service(const TCHAR *exe)$/;"	f	file:
regulatory_class	wnm_sta.h	/^	u8 regulatory_class;$/;"	m	struct:neighbor_report
rel_height	wnm_sta.h	/^	u16 rel_height; \/* valid if bearing_present=1 *\/$/;"	m	struct:neighbor_report
removeAllNetworks	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::removeAllNetworks()$/;"	f	class:WpaGui
removeListedNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::removeListedNetwork()$/;"	f	class:WpaGui
removeNetwork	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::removeNetwork()$/;"	f	class:NetworkConfig
removeNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::removeNetwork(const QString &sel)$/;"	f	class:WpaGui
removeSelectedNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::removeSelectedNetwork()$/;"	f	class:WpaGui
remove_all_chars	notifier.c	/^static void remove_all_chars(char* str, char c) {$/;"	f	file:
remove_bss	wpa_gui-qt4/peers.cpp	/^void Peers::remove_bss(int id)$/;"	f	class:Peers
remove_duplicate_network	interworking.c	/^static void remove_duplicate_network(struct wpa_supplicant *wpa_s,$/;"	f	file:
remove_enrollee_uuid	wpa_gui-qt4/peers.cpp	/^void Peers::remove_enrollee_uuid(QString uuid)$/;"	f	class:Peers
remove_network	dbus/dbus_new_handlers.c	/^static void remove_network(void *arg, struct wpa_ssid *ssid)$/;"	f	file:
remove_persistent_group	dbus/dbus_new_handlers_p2p.c	/^static void remove_persistent_group(struct wpa_supplicant *wpa_s,$/;"	f	file:
remove_timeout	dbus/dbus_common.c	/^static void remove_timeout(DBusTimeout *timeout, void *data)$/;"	f	file:
remove_watch	dbus/dbus_common.c	/^static void remove_watch(DBusWatch *watch, void *data)$/;"	f	file:
req	gas_query.c	/^	struct wpabuf *req;$/;"	m	struct:gas_query_pending	typeref:struct:gas_query_pending::wpabuf	file:
req_buf	ctrl_iface_named_pipe.c	/^	char req_buf[REQUEST_BUFSIZE];$/;"	m	struct:wpa_ctrl_dst	file:
req_buf	ctrl_iface_named_pipe.c	/^	char req_buf[REQUEST_BUFSIZE];$/;"	m	struct:wpa_global_dst	file:
req_conn_capab_port	config.h	/^	int **req_conn_capab_port;$/;"	m	struct:wpa_cred
req_conn_capab_proto	config.h	/^	u8 *req_conn_capab_proto;$/;"	m	struct:wpa_cred
req_eap_key_name	eapol_test.c	/^	int req_eap_key_name;$/;"	m	struct:eapol_test_data	file:
request_scan	autoscan.c	/^static void request_scan(struct wpa_supplicant *wpa_s)$/;"	f	file:
required_roaming_consortium	config.h	/^	u8 required_roaming_consortium[15];$/;"	m	struct:wpa_cred
required_roaming_consortium_len	config.h	/^	size_t required_roaming_consortium_len;$/;"	m	struct:wpa_cred
resp	gas_query.c	/^	struct wpabuf *resp;$/;"	m	struct:gas_query_pending	typeref:struct:gas_query_pending::wpabuf	file:
resp	wpa_supplicant_i.h	/^	struct wpabuf *resp;$/;"	m	struct:p2p_srv_bonjour	typeref:struct:p2p_srv_bonjour::wpabuf
result_str	wpas_glue.c	/^static const char * result_str(enum eapol_supp_result result)$/;"	f	file:
rm_capab	wnm_sta.h	/^	u8 rm_capab[5]; \/* valid if rm_capab_present=1 *\/$/;"	m	struct:neighbor_report
rm_capab_present	wnm_sta.h	/^	unsigned int rm_capab_present:1;$/;"	m	struct:neighbor_report
roaming_consortium	bss.h	/^	struct wpabuf *roaming_consortium;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
roaming_consortium	config.h	/^	u8 roaming_consortium[15];$/;"	m	struct:wpa_cred
roaming_consortium_anqp_match	interworking.c	/^static int roaming_consortium_anqp_match(const struct wpabuf *anqp,$/;"	f	file:
roaming_consortium_element_match	interworking.c	/^static int roaming_consortium_element_match(const u8 *ie, const u8 *rc_id,$/;"	f	file:
roaming_consortium_len	config.h	/^	size_t roaming_consortium_len;$/;"	m	struct:wpa_cred
roaming_consortium_match	interworking.c	/^static int roaming_consortium_match(const u8 *ie, const struct wpabuf *anqp,$/;"	f	file:
roaming_partner	config.h	/^	struct roaming_partner {$/;"	s	struct:wpa_cred
roaming_partner	config.h	/^	} *roaming_partner;$/;"	m	struct:wpa_cred	typeref:struct:wpa_cred::roaming_partner
roaming_partner_match	interworking.c	/^static int roaming_partner_match(struct wpa_supplicant *wpa_s,$/;"	f	file:
roaming_prio	interworking.c	/^static u8 roaming_prio(struct wpa_supplicant *wpa_s, struct wpa_cred *cred,$/;"	f	file:
roc_waiting_drv_freq	wpa_supplicant_i.h	/^	unsigned int roc_waiting_drv_freq;$/;"	m	struct:wpa_supplicant
role	dbus/dbus_new_handlers_wps.c	/^	int role; \/* 0 - not set, 1 - enrollee, 2 - registrar *\/$/;"	m	struct:wps_start_params	file:
rowCount	wpa_gui-qt4/eventhistory.cpp	/^int EventListModel::rowCount(const QModelIndex &) const$/;"	f	class:EventListModel
rrm	wpa_supplicant_i.h	/^	struct rrm_data rrm;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::rrm_data
rrm_data	wpa_supplicant_i.h	/^struct rrm_data {$/;"	s
rrm_used	wpa_supplicant_i.h	/^	unsigned int rrm_used:1;$/;"	m	struct:rrm_data
rsn_preauth_finished	tests/link_test.c	/^void rsn_preauth_finished(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f
rsn_preauth_send	tests/link_test.c	/^void rsn_preauth_send(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f
rsp_buf	ctrl_iface_named_pipe.c	/^	char *rsp_buf;$/;"	m	struct:wpa_ctrl_dst	file:
rsp_buf	ctrl_iface_named_pipe.c	/^	char *rsp_buf;$/;"	m	struct:wpa_global_dst	file:
run	examples/p2p/p2p_connect.py	/^	def run(self):$/;"	m	class:P2P_Connect
run	examples/p2p/p2p_disconnect.py	/^	def run(self):$/;"	m	class:P2P_Disconnect
run	examples/p2p/p2p_find.py	/^	def run(self):$/;"	m	class:P2P_Find
run	examples/p2p/p2p_flush.py	/^	def run(self):$/;"	m	class:P2P_Flush
run	examples/p2p/p2p_group_add.py	/^	def run(self):$/;"	m	class:P2P_Group_Add
run	examples/p2p/p2p_invite.py	/^	def run(self):$/;"	m	class:P2P_Invite
run	examples/p2p/p2p_listen.py	/^	def run(self):$/;"	m	class:P2P_Listen
run	examples/p2p/p2p_stop_find.py	/^	def run(self):$/;"	m	class:P2P_Stop_Find
run_wpas_p2p_disconnect	p2p_supplicant.c	/^static void run_wpas_p2p_disconnect(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
sa_query_count	wpa_supplicant_i.h	/^		int sa_query_count; \/* number of pending SA Query requests;$/;"	m	struct:wpa_supplicant::__anon4
sa_query_max_timeout	sme.c	/^static const unsigned int sa_query_max_timeout = 1000;$/;"	v	file:
sa_query_retry_timeout	sme.c	/^static const unsigned int sa_query_retry_timeout = 201;$/;"	v	file:
sa_query_start	wpa_supplicant_i.h	/^		struct os_reltime sa_query_start;$/;"	m	struct:wpa_supplicant::__anon4	typeref:struct:wpa_supplicant::__anon4::os_reltime
sa_query_timed_out	wpa_supplicant_i.h	/^		int sa_query_timed_out;$/;"	m	struct:wpa_supplicant::__anon4
sa_query_trans_id	wpa_supplicant_i.h	/^		u8 *sa_query_trans_id; \/* buffer of WLAN_SA_QUERY_TR_ID_LEN *$/;"	m	struct:wpa_supplicant::__anon4
sae	wpa_supplicant_i.h	/^		struct sae_data sae;$/;"	m	struct:wpa_supplicant::__anon4	typeref:struct:wpa_supplicant::__anon4::sae_data
sae_group_index	mesh_rsn.h	/^	int sae_group_index;$/;"	m	struct:mesh_rsn
sae_group_index	wpa_supplicant_i.h	/^		int sae_group_index;$/;"	m	struct:wpa_supplicant::__anon4
sae_groups	config.h	/^	int *sae_groups;$/;"	m	struct:wpa_config
sae_pmksa_caching	wpa_supplicant_i.h	/^		unsigned int sae_pmksa_caching:1;$/;"	m	struct:wpa_supplicant::__anon4
sae_token	mesh_rsn.h	/^	struct wpabuf *sae_token;$/;"	m	struct:mesh_rsn	typeref:struct:mesh_rsn::wpabuf
sae_token	wpa_supplicant_i.h	/^		struct wpabuf *sae_token;$/;"	m	struct:wpa_supplicant::__anon4	typeref:struct:wpa_supplicant::__anon4::wpabuf
saveConfig	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::saveConfig()$/;"	f	class:WpaGui
saveState	wpa_gui-qt4/main.cpp	/^void WpaGuiApp::saveState(QSessionManager &manager)$/;"	f	class:WpaGuiApp
saveState	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::saveState()$/;"	f	class:WpaGui
scan	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::scan()$/;"	f	class:WpaGui
scanAction	wpa_gui-qt4/wpagui.h	/^	QAction *scanAction;$/;"	m	class:WpaGui
scanDone	examples/wpas-dbus-new-signals.py	/^def scanDone(success):$/;"	f
scanDone	examples/wpas-dbus-new-wps.py	/^def scanDone(success):$/;"	f
scanDone	examples/wpas-dbus-new.py	/^def scanDone(success):$/;"	f
scanDone2	examples/wpas-dbus-new-signals.py	/^def scanDone2(success, path=None):$/;"	f
scanRequest	wpa_gui-qt4/scanresults.cpp	/^void ScanResults::scanRequest()$/;"	f	class:ScanResults
scan_cur_freq	config.h	/^	int scan_cur_freq;$/;"	m	struct:wpa_config
scan_est_throughput	scan.c	/^static void scan_est_throughput(struct wpa_supplicant *wpa_s,$/;"	f	file:
scan_for_connection	wpa_supplicant_i.h	/^	int scan_for_connection; \/* whether the scan request was triggered for$/;"	m	struct:wpa_supplicant
scan_freq	config_ssid.h	/^	int *scan_freq;$/;"	m	struct:wpa_ssid
scan_id	wpa_supplicant_i.h	/^	int scan_id[MAX_SCAN_ID];$/;"	m	struct:wpa_supplicant
scan_id_count	wpa_supplicant_i.h	/^	unsigned int scan_id_count;$/;"	m	struct:wpa_supplicant
scan_id_list_parse	ctrl_iface.c	/^static int scan_id_list_parse(struct wpa_supplicant *wpa_s, const char *value,$/;"	f	file:
scan_interval	bgscan_learn.c	/^	int scan_interval;$/;"	m	struct:bgscan_learn_data	file:
scan_interval	bgscan_simple.c	/^	int scan_interval;$/;"	m	struct:bgscan_simple_data	file:
scan_interval	wpa_supplicant_i.h	/^	int scan_interval; \/* time in sec between scans to find suitable AP *\/$/;"	m	struct:wpa_supplicant
scan_miss_count	bss.h	/^	unsigned int scan_miss_count;$/;"	m	struct:wpa_bss
scan_only_handler	scan.c	/^void scan_only_handler(struct wpa_supplicant *wpa_s,$/;"	f
scan_prev_wpa_state	wpa_supplicant_i.h	/^	enum wpa_states scan_prev_wpa_state;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::wpa_states
scan_req	wpa_supplicant_i.h	/^	} scan_req, last_scan_req;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::scan_req_type
scan_req_type	wpa_supplicant_i.h	/^	enum scan_req_type {$/;"	g	struct:wpa_supplicant
scan_res_handler	wpa_supplicant_i.h	/^	void (*scan_res_handler)(struct wpa_supplicant *wpa_s,$/;"	m	struct:wpa_supplicant
scan_runs	wpa_supplicant_i.h	/^	int scan_runs; \/* number of scan runs since WPS was started *\/$/;"	m	struct:wpa_supplicant
scan_snr	scan.c	/^static void scan_snr(struct wpa_scan_res *res)$/;"	f	file:
scan_ssid	config_ssid.h	/^	int scan_ssid;$/;"	m	struct:wpa_ssid
scan_start_time	wpa_supplicant_i.h	/^	struct os_reltime scan_trigger_time, scan_start_time;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::
scan_trigger_time	wpa_supplicant_i.h	/^	struct os_reltime scan_trigger_time, scan_start_time;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::os_reltime
scan_work	wpa_supplicant_i.h	/^	struct wpa_radio_work *scan_work;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_radio_work
scanning	wpa_supplicant_i.h	/^	int scanning;$/;"	m	struct:wpa_supplicant
scanres	wpa_gui-qt4/wpagui.h	/^	ScanResults *scanres;$/;"	m	class:WpaGui
scard	wpa_supplicant_i.h	/^	struct scard_data *scard;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::scard_data
scard_get_triplets	eapol_test.c	/^static int scard_get_triplets(struct eapol_test_data *e, int argc, char *argv[])$/;"	f	file:
scard_test	eapol_test.c	/^static int scard_test(struct eapol_test_data *e)$/;"	f	file:
sched_obss_scan	wpa_supplicant_i.h	/^		u8 sched_obss_scan;$/;"	m	struct:wpa_supplicant::__anon4
sched_scan_interval	config.h	/^	unsigned int sched_scan_interval;$/;"	m	struct:wpa_config
sched_scan_interval	wpa_supplicant_i.h	/^	int sched_scan_interval;$/;"	m	struct:wpa_supplicant
sched_scan_supported	wpa_supplicant_i.h	/^	int sched_scan_supported;$/;"	m	struct:wpa_supplicant
sched_scan_timed_out	wpa_supplicant_i.h	/^	int sched_scan_timed_out;$/;"	m	struct:wpa_supplicant
sched_scan_timeout	wpa_supplicant_i.h	/^	int sched_scan_timeout;$/;"	m	struct:wpa_supplicant
sched_scanning	wpa_supplicant_i.h	/^	int sched_scanning;$/;"	m	struct:wpa_supplicant
schedule_req	action_handler.c	/^static int schedule_req(struct wpa_supplicant *wpa_s, const u8 *sa, const u8 *payload, int freq)$/;"	f	file:
sec_attr_set	ctrl_iface_named_pipe.c	/^	int sec_attr_set;$/;"	m	struct:ctrl_iface_priv	file:
sec_device_type	config.h	/^	u8 sec_device_type[MAX_SEC_DEVICE_TYPES][WPS_DEV_TYPE_LEN];$/;"	m	struct:wpa_config
selectAdapter	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::selectAdapter( const QString & sel )$/;"	f	class:WpaGui
selectNetwork	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::selectNetwork( const QString &sel )$/;"	f	class:WpaGui
select_driver	wpa_supplicant.c	/^static int select_driver(struct wpa_supplicant *wpa_s, int i)$/;"	f	file:
selected_method	wpa_gui-qt4/peers.cpp	/^enum selected_method {$/;"	g	file:
sendReply	wpa_gui-qt4/userdatarequest.cpp	/^void UserDataRequest::sendReply()$/;"	f	class:UserDataRequest
send_action_work	p2p_supplicant.c	/^struct send_action_work {$/;"	s	file:
send_eap_request_identity	eapol_test.c	/^static void send_eap_request_identity(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
send_notification_upstream	action_handler.c	/^static int send_notification_upstream(struct action_handle *act, u8 type, $/;"	f	file:
send_periodic_not	notifier.c	/^static void send_periodic_not(void *eloop_ctx, void *timeout_ctx){$/;"	f	file:
send_prop_changed_signal	dbus/dbus_new_helpers.c	/^static void send_prop_changed_signal($/;"	f	file:
serial_number	config.h	/^	char *serial_number;$/;"	m	struct:wpa_config
serv_desc	hs20_supplicant.c	/^	struct osu_lang_string serv_desc[OSU_MAX_ITEMS];$/;"	m	struct:osu_provider	typeref:struct:osu_provider::osu_lang_string	file:
serv_desc_count	hs20_supplicant.c	/^	size_t serv_desc_count;$/;"	m	struct:osu_provider	file:
server_cert_file	eapol_test.c	/^	FILE *server_cert_file;$/;"	m	struct:eapol_test_data	file:
server_uri	hs20_supplicant.c	/^	char server_uri[256];$/;"	m	struct:osu_provider	file:
service	wpa_supplicant_i.h	/^	char *service;$/;"	m	struct:p2p_srv_upnp
serviceRunning	wpa_gui-qt4/wpagui.cpp	/^bool WpaGui::serviceRunning()$/;"	f	class:WpaGui
service_ctrl_handler	main_winsvc.c	/^static void WINAPI service_ctrl_handler(DWORD control_code)$/;"	f	file:
service_start	main_winsvc.c	/^static void WINAPI service_start(DWORD argc, LPTSTR *argv)$/;"	f	file:
setBssFromScan	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::setBssFromScan(const QString &bssid)$/;"	f	class:WpaGui
setNetworkParam	wpa_gui-qt4/networkconfig.cpp	/^int NetworkConfig::setNetworkParam(int id, const char *field,$/;"	f	class:NetworkConfig
setParams	wpa_gui-qt4/userdatarequest.cpp	/^int UserDataRequest::setParams(WpaGui *_wpagui, const char *reqMsg)$/;"	f	class:UserDataRequest
setWpaGui	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::setWpaGui(WpaGui *_wpagui)$/;"	f	class:NetworkConfig
setWpaGui	wpa_gui-qt4/peers.cpp	/^void Peers::setWpaGui(WpaGui *_wpagui)$/;"	f	class:Peers
setWpaGui	wpa_gui-qt4/scanresults.cpp	/^void ScanResults::setWpaGui(WpaGui *_wpagui)$/;"	f	class:ScanResults
set_ap_uapsd	wpa_supplicant_i.h	/^	int set_ap_uapsd;$/;"	m	struct:wpa_supplicant
set_bssid_filter	ctrl_iface.c	/^static int set_bssid_filter(struct wpa_supplicant *wpa_s, char *val)$/;"	f	file:
set_disallow_aps	ctrl_iface.c	/^static int set_disallow_aps(struct wpa_supplicant *wpa_s, char *val)$/;"	f	file:
set_network_properties	dbus/dbus_new_handlers.c	/^dbus_bool_t set_network_properties(struct wpa_supplicant *wpa_s,$/;"	f
set_node_expire	notifier.c	/^static int set_node_expire(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
set_root_nai	interworking.c	/^static int set_root_nai(struct wpa_ssid *ssid, const char *imsi, char prefix)$/;"	f	file:
set_sta_uapsd	wpa_supplicant_i.h	/^	int set_sta_uapsd;$/;"	m	struct:wpa_supplicant
setband	wpa_supplicant_i.h	/^	enum { WPA_SETBAND_AUTO, WPA_SETBAND_5G, WPA_SETBAND_2G } setband;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::__anon3
setter	dbus/dbus_new_helpers.h	/^	WPADBusPropertyAccessor setter;$/;"	m	struct:wpa_dbus_property_desc
short_interval	bgscan_learn.c	/^	int short_interval; \/* use if signal < threshold *\/$/;"	m	struct:bgscan_learn_data	file:
short_interval	bgscan_simple.c	/^	int short_interval; \/* use if signal < threshold *\/$/;"	m	struct:bgscan_simple_data	file:
short_scan_count	bgscan_simple.c	/^	int short_scan_count; \/* counter for scans using short scan interval *\/$/;"	m	struct:bgscan_simple_data	file:
should_dispatch	dbus/dbus_common_i.h	/^	int should_dispatch;$/;"	m	struct:wpas_dbus_priv
should_quote_opt	dbus/dbus_new_handlers.c	/^static dbus_bool_t should_quote_opt(const char *key)$/;"	f	file:
should_quote_opt	dbus/dbus_old_handlers.c	/^static dbus_bool_t should_quote_opt(const char *key)$/;"	f	file:
showAction	wpa_gui-qt4/wpagui.h	/^	QAction *showAction;$/;"	m	class:WpaGui
showBss	examples/wpas-dbus-new-signals.py	/^def showBss(bss):$/;"	f
showBss	examples/wpas-dbus-new.py	/^def showBss(bss):$/;"	f
showMsg	wpa_gui-qt4/wpagui.cpp	/^void ErrorMsg::showMsg(QString msg)$/;"	f	class:ErrorMsg
showTrayMessage	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::showTrayMessage(QSystemTrayIcon::MessageIcon type, int sec,$/;"	f	class:WpaGui
showTrayStatus	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::showTrayStatus()$/;"	f	class:WpaGui
show_config	examples/wps-ap-cli	/^show_config()$/;"	f
show_dev	win_if_list.c	/^static void show_dev(pcap_if_t *dev)$/;"	f	file:
show_group_started	wpa_supplicant_i.h	/^	int show_group_started;$/;"	m	struct:wpa_supplicant
show_not	bk_wpa_not_disp.c	/^static void show_not(const struct wipush_not *not, const char *addr){$/;"	f	file:
show_not	wpa_not_disp.c	/^static void show_not(const struct wipush_not *not, const char *addr){$/;"	f	file:
show_transmit	notifier.c	/^static void show_transmit(char *buf, size_t len){$/;"	f	file:
signal_peer_groups_changed	dbus/dbus_new.c	/^static void signal_peer_groups_changed(struct p2p_peer_info *info,$/;"	f	file:
signal_threshold	bgscan_learn.c	/^	int signal_threshold;$/;"	m	struct:bgscan_learn_data	file:
signal_threshold	bgscan_simple.c	/^	int signal_threshold;$/;"	m	struct:bgscan_simple_data	file:
signals	dbus/dbus_new_helpers.h	/^	const struct wpa_dbus_signal_desc *signals;$/;"	m	struct:wpa_dbus_object_desc	typeref:struct:wpa_dbus_object_desc::wpa_dbus_signal_desc
sim_num	config.h	/^	int sim_num;$/;"	m	struct:wpa_cred
skip_line_end	config_file.c	/^static void skip_line_end(FILE *stream)$/;"	f	file:
sme	wpa_supplicant_i.h	/^	unsigned int sme:1;$/;"	m	struct:wpa_connect_work
sme	wpa_supplicant_i.h	/^	} sme;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::__anon4
sme_assoc_timer	sme.c	/^static void sme_assoc_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
sme_associate	sme.c	/^void sme_associate(struct wpa_supplicant *wpa_s, enum wpas_mode mode,$/;"	f
sme_auth_build_sae_commit	sme.c	/^static struct wpabuf * sme_auth_build_sae_commit(struct wpa_supplicant *wpa_s,$/;"	f	file:
sme_auth_build_sae_confirm	sme.c	/^static struct wpabuf * sme_auth_build_sae_confirm(struct wpa_supplicant *wpa_s)$/;"	f	file:
sme_auth_handle_rrm	sme.c	/^static void sme_auth_handle_rrm(struct wpa_supplicant *wpa_s,$/;"	f	file:
sme_auth_start_cb	sme.c	/^static void sme_auth_start_cb(struct wpa_radio_work *work, int deinit)$/;"	f	file:
sme_auth_timer	sme.c	/^static void sme_auth_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
sme_authenticate	sme.c	/^void sme_authenticate(struct wpa_supplicant *wpa_s,$/;"	f
sme_authenticate	sme.h	/^static inline void sme_authenticate(struct wpa_supplicant *wpa_s,$/;"	f
sme_check_sa_query_timeout	sme.c	/^static int sme_check_sa_query_timeout(struct wpa_supplicant *wpa_s)$/;"	f	file:
sme_clear_on_disassoc	sme.c	/^void sme_clear_on_disassoc(struct wpa_supplicant *wpa_s)$/;"	f
sme_clear_on_disassoc	sme.h	/^static inline void sme_clear_on_disassoc(struct wpa_supplicant *wpa_s)$/;"	f
sme_deauth	sme.c	/^static void sme_deauth(struct wpa_supplicant *wpa_s)$/;"	f	file:
sme_deinit	sme.c	/^void sme_deinit(struct wpa_supplicant *wpa_s)$/;"	f
sme_deinit	sme.h	/^static inline void sme_deinit(struct wpa_supplicant *wpa_s)$/;"	f
sme_disassoc_while_authenticating	sme.c	/^void sme_disassoc_while_authenticating(struct wpa_supplicant *wpa_s,$/;"	f
sme_disassoc_while_authenticating	sme.h	/^sme_disassoc_while_authenticating(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_assoc_reject	sme.c	/^void sme_event_assoc_reject(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_assoc_reject	sme.h	/^static inline void sme_event_assoc_reject(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_assoc_timed_out	sme.c	/^void sme_event_assoc_timed_out(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_assoc_timed_out	sme.h	/^static inline void sme_event_assoc_timed_out(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_auth	sme.c	/^void sme_event_auth(struct wpa_supplicant *wpa_s, union wpa_event_data *data)$/;"	f
sme_event_auth	sme.h	/^static inline void sme_event_auth(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_auth_timed_out	sme.c	/^void sme_event_auth_timed_out(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_auth_timed_out	sme.h	/^static inline void sme_event_auth_timed_out(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_disassoc	sme.c	/^void sme_event_disassoc(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_disassoc	sme.h	/^static inline void sme_event_disassoc(struct wpa_supplicant *wpa_s,$/;"	f
sme_event_unprot_disconnect	sme.c	/^void sme_event_unprot_disconnect(struct wpa_supplicant *wpa_s, const u8 *sa,$/;"	f
sme_event_unprot_disconnect	sme.h	/^static inline void sme_event_unprot_disconnect(struct wpa_supplicant *wpa_s,$/;"	f
sme_obss_scan_timeout	sme.c	/^static void sme_obss_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
sme_proc_obss_scan	sme.c	/^int sme_proc_obss_scan(struct wpa_supplicant *wpa_s)$/;"	f
sme_proc_obss_scan	sme.h	/^static inline int sme_proc_obss_scan(struct wpa_supplicant *wpa_s)$/;"	f
sme_sa_query_rx	sme.c	/^void sme_sa_query_rx(struct wpa_supplicant *wpa_s, const u8 *sa,$/;"	f
sme_sa_query_timer	sme.c	/^static void sme_sa_query_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
sme_sae_auth	sme.c	/^static int sme_sae_auth(struct wpa_supplicant *wpa_s, u16 auth_transaction,$/;"	f	file:
sme_sched_obss_scan	sme.c	/^void sme_sched_obss_scan(struct wpa_supplicant *wpa_s, int enable)$/;"	f
sme_sched_obss_scan	sme.h	/^static inline void sme_sched_obss_scan(struct wpa_supplicant *wpa_s,$/;"	f
sme_send_2040_bss_coex	sme.c	/^static void sme_send_2040_bss_coex(struct wpa_supplicant *wpa_s,$/;"	f	file:
sme_send_authentication	sme.c	/^static void sme_send_authentication(struct wpa_supplicant *wpa_s,$/;"	f	file:
sme_send_sa_query_req	sme.c	/^static void sme_send_sa_query_req(struct wpa_supplicant *wpa_s,$/;"	f	file:
sme_set_sae_group	sme.c	/^static int sme_set_sae_group(struct wpa_supplicant *wpa_s)$/;"	f	file:
sme_start_sa_query	sme.c	/^static void sme_start_sa_query(struct wpa_supplicant *wpa_s)$/;"	f	file:
sme_state_changed	sme.c	/^void sme_state_changed(struct wpa_supplicant *wpa_s)$/;"	f
sme_state_changed	sme.h	/^static inline void sme_state_changed(struct wpa_supplicant *wpa_s)$/;"	f
sme_stop_sa_query	sme.c	/^static void sme_stop_sa_query(struct wpa_supplicant *wpa_s)$/;"	f	file:
sme_update_ft_ies	sme.c	/^int sme_update_ft_ies(struct wpa_supplicant *wpa_s, const u8 *md,$/;"	f
sme_update_ft_ies	sme.h	/^static inline int sme_update_ft_ies(struct wpa_supplicant *wpa_s, const u8 *md,$/;"	f
snr	bss.h	/^	int snr;$/;"	m	struct:wpa_bss
sock	action_handler.c	/^	int sock;$/;"	m	struct:action_handle	file:
sock	ctrl_iface_udp.c	/^	int sock;$/;"	m	struct:ctrl_iface_global_priv	file:
sock	ctrl_iface_udp.c	/^	int sock;$/;"	m	struct:ctrl_iface_priv	file:
sock	ctrl_iface_unix.c	/^	int sock;$/;"	m	struct:ctrl_iface_global_priv	file:
sock	ctrl_iface_unix.c	/^	int sock;$/;"	m	struct:ctrl_iface_priv	file:
sock_name	wpa_priv.c	/^	char *sock_name;$/;"	m	struct:wpa_priv_interface	file:
sp_priority	config.h	/^	int sp_priority;$/;"	m	struct:wpa_cred
src	p2p_supplicant.c	/^	u8 src[ETH_ALEN];$/;"	m	struct:send_action_work	file:
srv	examples/p2p-nfc.py	/^srv = None$/;"	v
srv	examples/wps-nfc.py	/^srv = None$/;"	v
ssid	bgscan_learn.c	/^	const struct wpa_ssid *ssid;$/;"	m	struct:bgscan_learn_data	typeref:struct:bgscan_learn_data::wpa_ssid	file:
ssid	bgscan_simple.c	/^	const struct wpa_ssid *ssid;$/;"	m	struct:bgscan_simple_data	typeref:struct:bgscan_simple_data::wpa_ssid	file:
ssid	bss.h	/^	u8 ssid[32];$/;"	m	struct:wpa_bss
ssid	config.h	/^		u8 ssid[MAX_SSID_LEN];$/;"	m	struct:wpa_cred::excluded_ssid
ssid	config.h	/^	struct wpa_ssid *ssid;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpa_ssid
ssid	config_ssid.h	/^	u8 *ssid;$/;"	m	struct:wpa_ssid
ssid	dbus/dbus_new_handlers.h	/^	struct wpa_ssid *ssid;$/;"	m	struct:network_handler_args	typeref:struct:network_handler_args::wpa_ssid
ssid	tests/test_wpa.c	/^	struct wpa_ssid ssid;$/;"	m	struct:wpa	typeref:struct:wpa::wpa_ssid	file:
ssid	wpa_supplicant_i.h	/^		u8 ssid[32];$/;"	m	struct:wpa_supplicant::__anon4
ssid	wpa_supplicant_i.h	/^	struct wpa_ssid *ssid;$/;"	m	struct:wpa_connect_work	typeref:struct:wpa_connect_work::wpa_ssid
ssid	wpa_supplicant_i.h	/^	u8 ssid[32];$/;"	m	struct:wpa_ssid_value
ssid_fields	config.c	/^static const struct parse_data ssid_fields[] = {$/;"	v	typeref:struct:parse_data	file:
ssid_hex	wps_supplicant.h	/^	const char *ssid_hex;$/;"	m	struct:wps_new_ap_settings
ssid_len	bss.h	/^	size_t ssid_len;$/;"	m	struct:wpa_bss
ssid_len	config.h	/^		size_t ssid_len;$/;"	m	struct:wpa_cred::excluded_ssid
ssid_len	config_ssid.h	/^	size_t ssid_len;$/;"	m	struct:wpa_ssid
ssid_len	wpa_supplicant_i.h	/^		size_t ssid_len;$/;"	m	struct:wpa_supplicant::__anon4
ssid_len	wpa_supplicant_i.h	/^	size_t ssid_len;$/;"	m	struct:wpa_ssid_value
sta_uapsd	wpa_supplicant_i.h	/^	int sta_uapsd;$/;"	m	struct:wpa_supplicant
startInTray	wpa_gui-qt4/wpagui.h	/^	bool startInTray;$/;"	m	class:WpaGui
startService	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::startService()$/;"	f	class:WpaGui
start_edit	bk_wpa_not_disp.c	/^static void start_edit(void)$/;"	f	file:
start_edit	wpa_cli.c	/^static void start_edit(void)$/;"	f	file:
start_not_connection	action_handler.c	/^static int start_not_connection(struct action_handle *act, struct sockaddr_un *from,$/;"	f	file:
started	wpa_supplicant_i.h	/^	unsigned int started:1;$/;"	m	struct:wpa_radio_work
statAction	wpa_gui-qt4/wpagui.h	/^	QAction *statAction;$/;"	m	class:WpaGui
status_code	gas_query.c	/^	u16 status_code;$/;"	m	struct:gas_query_pending	file:
stopService	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::stopService()$/;"	f	class:WpaGui
stopWpsRun	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::stopWpsRun(bool success)$/;"	f	class:WpaGui
stop_not_connection	action_handler.c	/^static int stop_not_connection(struct action_handle *act, struct sockaddr_un *from,$/;"	f	file:
str_match	wpa_cli.c	/^static int str_match(const char *a, const char *b)$/;"	f	file:
str_match	wpa_gui-qt4/wpagui.cpp	/^static int str_match(const char *a, const char *b)$/;"	f	file:
str_starts	wpa_cli.c	/^static int str_starts(const char *src, const char *match)$/;"	f	file:
str_to_debug_level	ctrl_iface.c	/^static int str_to_debug_level(const char *s)$/;"	f	file:
str_value	dbus/dbus_dict_helpers.h	/^		char *str_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
strarray_value	dbus/dbus_dict_helpers.h	/^		char **strarray_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
subelem_len	wnm_sta.h	/^	u8 subelem_len;$/;"	m	struct:measurement_pilot
subelem_len	wnm_sta.h	/^	u8 subelem_len;$/;"	m	struct:multiple_bssid
subelems	wnm_sta.h	/^	u8 subelems[255];$/;"	m	struct:measurement_pilot
subelems	wnm_sta.h	/^	u8 subelems[255];$/;"	m	struct:multiple_bssid
success_file	examples/p2p-nfc.py	/^success_file = None$/;"	v
success_file	examples/wps-nfc.py	/^success_file = None$/;"	v
success_report	examples/p2p-nfc.py	/^def success_report(txt):$/;"	f
success_report	examples/wps-nfc.py	/^def success_report(txt):$/;"	f
summary	examples/p2p-nfc.py	/^def summary(txt):$/;"	f
summary	examples/wps-nfc.py	/^def summary(txt):$/;"	f
summary_file	examples/p2p-nfc.py	/^summary_file = None$/;"	v
summary_file	examples/wps-nfc.py	/^summary_file = None$/;"	v
supp	ibss_rsn.h	/^	struct wpa_sm *supp;$/;"	m	struct:ibss_rsn_peer	typeref:struct:ibss_rsn_peer::wpa_sm
supp	tests/test_wpa.c	/^	struct wpa_sm *supp;$/;"	m	struct:wpa	typeref:struct:wpa::wpa_sm	file:
supp_addr	tests/test_wpa.c	/^	u8 supp_addr[ETH_ALEN];$/;"	m	struct:wpa	file:
supp_alloc_eapol	ibss_rsn.c	/^static u8 * supp_alloc_eapol(void *ctx, u8 type, const void *data,$/;"	f	file:
supp_alloc_eapol	tests/test_wpa.c	/^static u8 * supp_alloc_eapol(void *ctx, u8 type, const void *data,$/;"	f	file:
supp_cancel_auth_timeout	ibss_rsn.c	/^static void supp_cancel_auth_timeout(void *ctx)$/;"	f	file:
supp_cancel_auth_timeout	tests/test_wpa.c	/^static void supp_cancel_auth_timeout(void *ctx)$/;"	f	file:
supp_deauthenticate	ibss_rsn.c	/^static void supp_deauthenticate(void * ctx, int reason_code)$/;"	f	file:
supp_eapol	tests/test_wpa.c	/^	u8 *supp_eapol;$/;"	m	struct:wpa	file:
supp_eapol_len	tests/test_wpa.c	/^	size_t supp_eapol_len;$/;"	m	struct:wpa	file:
supp_eapol_rx	tests/test_wpa.c	/^static void supp_eapol_rx(void *eloop_data, void *user_ctx)$/;"	f	file:
supp_ether_send	ibss_rsn.c	/^static int supp_ether_send(void *ctx, const u8 *dest, u16 proto, const u8 *buf,$/;"	f	file:
supp_ether_send	tests/test_wpa.c	/^static int supp_ether_send(void *ctx, const u8 *dest, u16 proto, const u8 *buf,$/;"	f	file:
supp_freqs	bgscan_learn.c	/^	int *supp_freqs;$/;"	m	struct:bgscan_learn_data	file:
supp_get_beacon_ie	ibss_rsn.c	/^static int supp_get_beacon_ie(void *ctx)$/;"	f	file:
supp_get_beacon_ie	tests/test_wpa.c	/^static int supp_get_beacon_ie(void *ctx)$/;"	f	file:
supp_get_bssid	tests/test_wpa.c	/^static int supp_get_bssid(void *ctx, u8 *bssid)$/;"	f	file:
supp_get_network_ctx	ibss_rsn.c	/^static void * supp_get_network_ctx(void *ctx)$/;"	f	file:
supp_get_state	ibss_rsn.c	/^static enum wpa_states supp_get_state(void *ctx)$/;"	f	file:
supp_ie	ibss_rsn.h	/^	u8 supp_ie[80];$/;"	m	struct:ibss_rsn_peer
supp_ie	tests/test_wpa.c	/^	u8 supp_ie[80];$/;"	m	struct:wpa	file:
supp_ie_len	ibss_rsn.h	/^	size_t supp_ie_len;$/;"	m	struct:ibss_rsn_peer
supp_ie_len	tests/test_wpa.c	/^	size_t supp_ie_len;$/;"	m	struct:wpa	file:
supp_init	tests/test_wpa.c	/^static int supp_init(struct wpa *wpa)$/;"	f	file:
supp_mlme_setprotection	ibss_rsn.c	/^static int supp_mlme_setprotection(void *ctx, const u8 *addr,$/;"	f	file:
supp_mlme_setprotection	tests/test_wpa.c	/^static int supp_mlme_setprotection(void *ctx, const u8 *addr,$/;"	f	file:
supp_set_key	ibss_rsn.c	/^static int supp_set_key(void *ctx, enum wpa_alg alg,$/;"	f	file:
supp_set_key	tests/test_wpa.c	/^static int supp_set_key(void *ctx, enum wpa_alg alg,$/;"	f	file:
supp_set_state	ibss_rsn.c	/^static void supp_set_state(void *ctx, enum wpa_states state)$/;"	f	file:
supp_set_state	tests/test_wpa.c	/^static void supp_set_state(void *ctx, enum wpa_states state)$/;"	f	file:
supp_state	ibss_rsn.h	/^	enum wpa_states supp_state;$/;"	m	struct:ibss_rsn_peer	typeref:enum:ibss_rsn_peer::wpa_states
surplus_bandwidth_allowance	wmm_ac.h	/^	int surplus_bandwidth_allowance;$/;"	m	struct:wmm_ac_ts_setup_params
suspend_time	wpa_supplicant_i.h	/^	struct os_time suspend_time;$/;"	m	struct:wpa_global	typeref:struct:wpa_global::os_time
svc_status	main_winsvc.c	/^static SERVICE_STATUS svc_status;$/;"	v	file:
svc_status_handle	main_winsvc.c	/^static SERVICE_STATUS_HANDLE svc_status_handle;$/;"	v	file:
svc_thread	main_winsvc.c	/^static DWORD svc_thread(LPDWORD param)$/;"	f	file:
syntax	eapol_test.c	/^	char syntax;$/;"	m	struct:extra_radius_attr	file:
tabChanged	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::tabChanged(int index)$/;"	f	class:WpaGui
tdls_external_control	config.h	/^	int tdls_external_control;$/;"	m	struct:wpa_config
temporary	config.h	/^	int temporary;$/;"	m	struct:wpa_cred
temporary	config_ssid.h	/^	int temporary;$/;"	m	struct:wpa_ssid
terminate_loop	examples/p2p-nfc.py	/^def terminate_loop():$/;"	f
terminate_loop	examples/wps-nfc.py	/^def terminate_loop():$/;"	f
terminate_now	examples/p2p-nfc.py	/^terminate_now = False$/;"	v
terminate_now	examples/wps-nfc.py	/^terminate_now = False$/;"	v
test_broadcast	notifier.c	/^static int test_broadcast(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
test_dynamic	notifier.c	/^static int test_dynamic(struct wpa_ctrl *ctrl, int argc, char *argv[]){$/;"	f	file:
test_eap_sim_prf	tests/test_eap_sim_common.c	/^static int test_eap_sim_prf(void)$/;"	f	file:
test_eapol	eapol_test.c	/^static int test_eapol(struct eapol_test_data *e, struct wpa_supplicant *wpa_s,$/;"	f	file:
test_eapol_clean	eapol_test.c	/^static void test_eapol_clean(struct eapol_test_data *e,$/;"	f	file:
test_eapol_clean	preauth_test.c	/^static void test_eapol_clean(struct wpa_supplicant *wpa_s)$/;"	f	file:
test_failure	wpa_supplicant_i.h	/^	enum wpa_supplicant_test_failure test_failure;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::wpa_supplicant_test_failure
text	hs20_supplicant.c	/^	char text[253];$/;"	m	struct:osu_lang_string	file:
time	wpa_supplicant_i.h	/^	struct os_reltime time;$/;"	m	struct:wpa_radio_work	typeref:struct:wpa_radio_work::os_reltime
timeList	wpa_gui-qt4/eventhistory.h	/^	QStringList timeList;$/;"	m	class:EventListModel
timeout	examples/p2p/p2p_disconnect.py	/^	timeout = 5$/;"	v
timeout	examples/p2p/p2p_find.py	/^	timeout = 0$/;"	v
timeout	examples/p2p/p2p_flush.py	/^	timeout = 5$/;"	v
timeout	examples/p2p/p2p_listen.py	/^	timeout = 0$/;"	v
timeout	examples/p2p/p2p_stop_find.py	/^	timeout = 5$/;"	v
timeout	wpa_supplicant_i.h	/^	unsigned int timeout;$/;"	m	struct:wpa_external_work
timeout_toggled	dbus/dbus_common.c	/^static void timeout_toggled(DBusTimeout *timeout, void *data)$/;"	f	file:
timer	wpa_gui-qt4/wpagui.h	/^	QTimer *timer;$/;"	m	class:WpaGui
timestamp	wpa_gui-qt4/wpamsg.h	/^	QDateTime timestamp;$/;"	m	class:WpaMsg
tokenize_cmd	hostapd_cli.c	/^static int tokenize_cmd(char *cmd, char *argv[])$/;"	f	file:
tokenize_cmd	notifier.c	/^static int tokenize_cmd(char *cmd, char *argv[])$/;"	f	file:
tokenize_cmd	wpa_cli.c	/^static int tokenize_cmd(char *cmd, char *argv[])$/;"	f	file:
trayActivated	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::trayActivated(QSystemTrayIcon::ActivationReason how)$/;"	f	class:WpaGui
tray_icon	wpa_gui-qt4/wpagui.h	/^	QSystemTrayIcon *tray_icon;$/;"	m	class:WpaGui
tray_menu	wpa_gui-qt4/wpagui.h	/^	QMenu *tray_menu;$/;"	m	class:WpaGui
tries	wpa_supplicant_i.h	/^	unsigned int tries;$/;"	m	struct:wps_ap_info
triggerUpdate	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::triggerUpdate()$/;"	f	class:WpaGui
try_connection	bk_wpa_not_disp.c	/^static void try_connection(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
try_connection	wpa_cli.c	/^static void try_connection(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
try_connection	wpa_not_disp.c	/^static void try_connection(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
ts_dir_idx	wmm_ac.h	/^enum ts_dir_idx {$/;"	g
tsf	bss.h	/^	u64 tsf;$/;"	m	struct:wpa_bss
tsf_offset	wnm_sta.h	/^	u16 tsf_offset; \/* valid if tsf_present=1 *\/$/;"	m	struct:neighbor_report
tsf_present	wnm_sta.h	/^	unsigned int tsf_present:1;$/;"	m	struct:neighbor_report
tsid	wmm_ac.h	/^	int tsid;$/;"	m	struct:wmm_ac_ts_setup_params
tspec	wmm_ac.h	/^	struct wmm_tspec_element tspec;$/;"	m	struct:wmm_ac_addts_request	typeref:struct:wmm_ac_addts_request::wmm_tspec_element
tspecs	wpa_supplicant_i.h	/^	struct wmm_tspec_element *tspecs[WMM_AC_NUM][TS_DIR_IDX_COUNT];$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wmm_tspec_element
tunneled_cred_type	interworking.c	/^	u8 tunneled_cred_type;$/;"	m	struct:nai_realm_eap	file:
txt	wpa_cli.c	/^	char *txt;$/;"	m	struct:cli_txt_entry	file:
type	bk_wpa_not_disp.c	/^	int type;$/;"	m	struct:wipush_not	file:
type	dbus/dbus_dict_helpers.h	/^	int type;         \/** the dbus type of the dict entry's value *\/$/;"	m	struct:wpa_dbus_dict_entry
type	dbus/dbus_new_handlers_wps.c	/^	int type; \/* 0 - not set, 1 - pin,      2 - pbc       *\/$/;"	m	struct:wps_start_params	file:
type	dbus/dbus_new_helpers.h	/^	char *type;$/;"	m	struct:wpa_dbus_argument
type	dbus/dbus_new_helpers.h	/^	const char *type;$/;"	m	struct:wpa_dbus_property_desc
type	eapol_test.c	/^	u8 type;$/;"	m	struct:extra_radius_attr	file:
type	wpa_not_disp.c	/^	int type;$/;"	m	struct:wipush_not	file:
type	wpa_supplicant_i.h	/^	char type[100];$/;"	m	struct:wpa_external_work
type	wpa_supplicant_i.h	/^	const char *type;$/;"	m	struct:wpa_radio_work
type	wpa_supplicant_i.h	/^	} type;$/;"	m	struct:wps_ap_info	typeref:enum:wps_ap_info::wps_ap_info_type
uapsd	wmm_ac.h	/^		unsigned int uapsd:1;$/;"	m	struct:wmm_ac_assoc_data::__anon2
udr	wpa_gui-qt4/wpagui.h	/^	UserDataRequest *udr;$/;"	m	class:WpaGui
uint16_value	dbus/dbus_dict_helpers.h	/^		dbus_uint16_t uint16_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
uint32_value	dbus/dbus_dict_helpers.h	/^		dbus_uint32_t uint32_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
uint64_value	dbus/dbus_dict_helpers.h	/^		dbus_uint64_t uint64_value;$/;"	m	union:wpa_dbus_dict_entry::__anon1
unregister_service	main_winsvc.c	/^static int unregister_service(void)$/;"	f	file:
up_to_ac	wmm_ac.c	/^static const enum wmm_ac up_to_ac[8] = {$/;"	v	typeref:enum:wmm_ac	file:
updateNetworkDisabledStatus	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::updateNetworkDisabledStatus()$/;"	f	class:WpaGui
updateNetworks	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::updateNetworks()$/;"	f	class:WpaGui
updateResults	wpa_gui-qt4/scanresults.cpp	/^void ScanResults::updateResults()$/;"	f	class:ScanResults
updateStatus	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::updateStatus()$/;"	f	class:WpaGui
updateTrayToolTip	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::updateTrayToolTip(const QString &msg)$/;"	f	class:WpaGui
update_bssid_list	wpa_cli.c	/^static void update_bssid_list(struct wpa_ctrl *ctrl)$/;"	f	file:
update_config	config.h	/^	int update_config;$/;"	m	struct:wpa_config
update_identifier	config.h	/^	int update_identifier;$/;"	m	struct:wpa_cred
update_identifier	config_ssid.h	/^	int update_identifier;$/;"	m	struct:wpa_ssid
update_ifnames	wpa_cli.c	/^static void update_ifnames(struct wpa_ctrl *ctrl)$/;"	f	file:
update_peers	wpa_gui-qt4/peers.cpp	/^void Peers::update_peers()$/;"	f	class:Peers
usage	eapol_test.c	/^static void usage(void)$/;"	f	file:
usage	examples/dbus-listen-preq.py	/^def usage():$/;"	f
usage	examples/p2p/p2p_connect.py	/^def usage():$/;"	f
usage	examples/p2p/p2p_disconnect.py	/^def usage():$/;"	f
usage	examples/p2p/p2p_find.py	/^def usage():$/;"	f
usage	examples/p2p/p2p_flush.py	/^def usage():$/;"	f
usage	examples/p2p/p2p_group_add.py	/^def usage():$/;"	f
usage	examples/p2p/p2p_invite.py	/^def usage():$/;"	f
usage	examples/p2p/p2p_listen.py	/^def usage():$/;"	f
usage	examples/p2p/p2p_stop_find.py	/^def usage():$/;"	f
usage	hostapd_cli.c	/^static void usage(void)$/;"	f	file:
usage	main.c	/^static void usage(void)$/;"	f	file:
usage	wpa_cli.c	/^	const char *usage;$/;"	m	struct:wpa_cli_cmd	file:
usage	wpa_cli.c	/^static void usage(void)$/;"	f	file:
usage	wpa_priv.c	/^static void usage(void)$/;"	f	file:
useWps	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::useWps()$/;"	f	class:NetworkConfig
used	ctrl_iface_named_pipe.c	/^	int used;$/;"	m	struct:wpa_ctrl_dst	file:
used	ctrl_iface_named_pipe.c	/^	int used;$/;"	m	struct:wpa_global_dst	file:
user_data	dbus/dbus_new_helpers.h	/^	void *user_data;$/;"	m	struct:wpa_dbus_object_desc
user_data_free_func	dbus/dbus_new_helpers.h	/^	WPADBusArgumentFreeFunction user_data_free_func;$/;"	m	struct:wpa_dbus_object_desc
user_initiated_pd	wpa_supplicant_i.h	/^	unsigned int user_initiated_pd:1;$/;"	m	struct:wpa_supplicant
user_mpm	config.h	/^	int user_mpm;$/;"	m	struct:wpa_config
user_priority	wmm_ac.h	/^	int user_priority;$/;"	m	struct:wmm_ac_ts_setup_params
username	config.h	/^	char *username;$/;"	m	struct:wpa_cred
users	bss.h	/^	unsigned int users;$/;"	m	struct:wpa_bss_anqp
uuid	config.h	/^	u8 uuid[16];$/;"	m	struct:wpa_config
vboxLayout	wpa_gui-qt4/addinterface.h	/^	QVBoxLayout *vboxLayout;$/;"	m	class:AddInterface
vendor_elem	wpa_supplicant_i.h	/^	struct wpabuf *vendor_elem[NUM_VENDOR_ELEM_FRAMES];$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpabuf
venue_name	bss.h	/^	struct wpabuf *venue_name;$/;"	m	struct:wpa_bss_anqp	typeref:struct:wpa_bss_anqp::wpabuf
version	wpa_supplicant_i.h	/^	u8 version;$/;"	m	struct:p2p_srv_upnp
vht	config_ssid.h	/^	int vht;$/;"	m	struct:wpa_ssid
vht_capa	config_ssid.h	/^	unsigned int vht_capa;$/;"	m	struct:wpa_ssid
vht_capa_mask	config_ssid.h	/^	unsigned int vht_capa_mask;$/;"	m	struct:wpa_ssid
vht_rx_mcs_nss_1	config_ssid.h	/^	int vht_rx_mcs_nss_1, vht_rx_mcs_nss_2,$/;"	m	struct:wpa_ssid
vht_rx_mcs_nss_2	config_ssid.h	/^	int vht_rx_mcs_nss_1, vht_rx_mcs_nss_2,$/;"	m	struct:wpa_ssid
vht_rx_mcs_nss_3	config_ssid.h	/^	    vht_rx_mcs_nss_3, vht_rx_mcs_nss_4,$/;"	m	struct:wpa_ssid
vht_rx_mcs_nss_4	config_ssid.h	/^	    vht_rx_mcs_nss_3, vht_rx_mcs_nss_4,$/;"	m	struct:wpa_ssid
vht_rx_mcs_nss_5	config_ssid.h	/^	    vht_rx_mcs_nss_5, vht_rx_mcs_nss_6,$/;"	m	struct:wpa_ssid
vht_rx_mcs_nss_6	config_ssid.h	/^	    vht_rx_mcs_nss_5, vht_rx_mcs_nss_6,$/;"	m	struct:wpa_ssid
vht_rx_mcs_nss_7	config_ssid.h	/^	    vht_rx_mcs_nss_7, vht_rx_mcs_nss_8;$/;"	m	struct:wpa_ssid
vht_rx_mcs_nss_8	config_ssid.h	/^	    vht_rx_mcs_nss_7, vht_rx_mcs_nss_8;$/;"	m	struct:wpa_ssid
vht_tx_mcs_nss_1	config_ssid.h	/^	int vht_tx_mcs_nss_1, vht_tx_mcs_nss_2,$/;"	m	struct:wpa_ssid
vht_tx_mcs_nss_2	config_ssid.h	/^	int vht_tx_mcs_nss_1, vht_tx_mcs_nss_2,$/;"	m	struct:wpa_ssid
vht_tx_mcs_nss_3	config_ssid.h	/^	    vht_tx_mcs_nss_3, vht_tx_mcs_nss_4,$/;"	m	struct:wpa_ssid
vht_tx_mcs_nss_4	config_ssid.h	/^	    vht_tx_mcs_nss_3, vht_tx_mcs_nss_4,$/;"	m	struct:wpa_ssid
vht_tx_mcs_nss_5	config_ssid.h	/^	    vht_tx_mcs_nss_5, vht_tx_mcs_nss_6,$/;"	m	struct:wpa_ssid
vht_tx_mcs_nss_6	config_ssid.h	/^	    vht_tx_mcs_nss_5, vht_tx_mcs_nss_6,$/;"	m	struct:wpa_ssid
vht_tx_mcs_nss_7	config_ssid.h	/^	    vht_tx_mcs_nss_7, vht_tx_mcs_nss_8;$/;"	m	struct:wpa_ssid
vht_tx_mcs_nss_8	config_ssid.h	/^	    vht_tx_mcs_nss_7, vht_tx_mcs_nss_8;$/;"	m	struct:wpa_ssid
w	wpa_gui-qt4/main.cpp	/^	WpaGui *w;$/;"	m	class:WpaGuiApp	file:
wait_comeback	gas_query.c	/^	unsigned int wait_comeback:1;$/;"	m	struct:gas_query_pending	file:
wait_for_monitor	wpa_supplicant_i.h	/^	int wait_for_monitor;$/;"	m	struct:wpa_params
wait_time	p2p_supplicant.c	/^	unsigned int wait_time;$/;"	m	struct:send_action_work	file:
waiting_presence_resp	wpa_supplicant_i.h	/^	unsigned int waiting_presence_resp;$/;"	m	struct:wpa_supplicant
wakeup_main	dbus/dbus_common.c	/^static void wakeup_main(void *data)$/;"	f	file:
warning_displayed	bk_wpa_not_disp.c	/^static int warning_displayed = 0;$/;"	v	file:
warning_displayed	wpa_cli.c	/^static int warning_displayed = 0;$/;"	v	file:
watch_toggled	dbus/dbus_common.c	/^static void watch_toggled(DBusWatch *watch, void *data)$/;"	f	file:
wepEnabled	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::wepEnabled(bool enabled)$/;"	f	class:NetworkConfig
wep_key	config_ssid.h	/^	u8 wep_key[NUM_WEP_KEYS][MAX_WEP_KEY_LEN];$/;"	m	struct:wpa_ssid
wep_key_len	config_ssid.h	/^	size_t wep_key_len[NUM_WEP_KEYS];$/;"	m	struct:wpa_ssid
wep_tx_keyidx	config_ssid.h	/^	int wep_tx_keyidx;$/;"	m	struct:wpa_ssid
wfd_add_sd_req_role	p2p_supplicant.c	/^static void wfd_add_sd_req_role(struct wpabuf *tlvs, u8 id, u8 role,$/;"	f	file:
wfd_subelem	wpa_supplicant_i.h	/^	struct wpabuf *wfd_subelem[MAX_WFD_SUBELEMS];$/;"	m	struct:wpa_global	typeref:struct:wpa_global::wpabuf
width	hs20_supplicant.c	/^	u16 width;$/;"	m	struct:osu_icon	file:
wifi_display	wpa_supplicant_i.h	/^	int wifi_display;$/;"	m	struct:wpa_global
wifi_display_deinit	wifi_display.c	/^void wifi_display_deinit(struct wpa_global *global)$/;"	f
wifi_display_enable	wifi_display.c	/^void wifi_display_enable(struct wpa_global *global, int enabled)$/;"	f
wifi_display_get_wfd_ie	wifi_display.c	/^struct wpabuf * wifi_display_get_wfd_ie(struct wpa_global *global)$/;"	f
wifi_display_init	wifi_display.c	/^int wifi_display_init(struct wpa_global *global)$/;"	f
wifi_display_subelem_get	wifi_display.c	/^int wifi_display_subelem_get(struct wpa_global *global, char *cmd,$/;"	f
wifi_display_subelem_hex	wifi_display.c	/^char * wifi_display_subelem_hex(const struct wpabuf *wfd_subelems, u8 id)$/;"	f
wifi_display_subelem_set	wifi_display.c	/^int wifi_display_subelem_set(struct wpa_global *global, char *cmd)$/;"	f
wifi_display_subelem_set_from_ies	wifi_display.c	/^int wifi_display_subelem_set_from_ies(struct wpa_global *global,$/;"	f
wifi_display_update_wfd_ie	wifi_display.c	/^static int wifi_display_update_wfd_ie(struct wpa_global *global)$/;"	f	file:
wipush_not	bk_wpa_not_disp.c	/^struct wipush_not{$/;"	s	file:
wipush_not	wpa_not_disp.c	/^struct wipush_not{$/;"	s	file:
wmm_ac_add_ts	wmm_ac.c	/^static int wmm_ac_add_ts(struct wpa_supplicant *wpa_s, const u8 *addr,$/;"	f	file:
wmm_ac_addts_req_timeout	wmm_ac.c	/^static void wmm_ac_addts_req_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wmm_ac_addts_request	wmm_ac.h	/^struct wmm_ac_addts_request {$/;"	s
wmm_ac_assoc_data	wmm_ac.h	/^struct wmm_ac_assoc_data {$/;"	s
wmm_ac_assoc_info	wpa_supplicant_i.h	/^	struct wmm_ac_assoc_data *wmm_ac_assoc_info;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wmm_ac_assoc_data
wmm_ac_build_addts_req	wmm_ac.c	/^wmm_ac_build_addts_req(struct wpa_supplicant *wpa_s,$/;"	f	file:
wmm_ac_clear_saved_tspecs	wmm_ac.c	/^void wmm_ac_clear_saved_tspecs(struct wpa_supplicant *wpa_s)$/;"	f
wmm_ac_ctrl_addts	ctrl_iface.c	/^static int wmm_ac_ctrl_addts(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wmm_ac_ctrl_delts	ctrl_iface.c	/^static int wmm_ac_ctrl_delts(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wmm_ac_deinit	wmm_ac.c	/^static void wmm_ac_deinit(struct wpa_supplicant *wpa_s)$/;"	f	file:
wmm_ac_del_req	wmm_ac.c	/^static void wmm_ac_del_req(struct wpa_supplicant *wpa_s, int failed)$/;"	f	file:
wmm_ac_del_ts	wmm_ac.c	/^static void wmm_ac_del_ts(struct wpa_supplicant *wpa_s, u8 ac, int dir_bitmap)$/;"	f	file:
wmm_ac_del_ts_idx	wmm_ac.c	/^static void wmm_ac_del_ts_idx(struct wpa_supplicant *wpa_s, u8 ac,$/;"	f	file:
wmm_ac_dir	wmm_ac.h	/^enum wmm_ac_dir {$/;"	g
wmm_ac_direction_to_idx	wmm_ac.c	/^static u8 wmm_ac_direction_to_idx(u8 direction)$/;"	f	file:
wmm_ac_find_tsid	wmm_ac.c	/^static int wmm_ac_find_tsid(struct wpa_supplicant *wpa_s, u8 tsid,$/;"	f	file:
wmm_ac_get_direction	wmm_ac.c	/^static u8 wmm_ac_get_direction(const struct wmm_tspec_element *tspec)$/;"	f	file:
wmm_ac_get_tsid	wmm_ac.c	/^static inline u8 wmm_ac_get_tsid(const struct wmm_tspec_element *tspec)$/;"	f	file:
wmm_ac_get_tspecs_count	wmm_ac.c	/^static u8 wmm_ac_get_tspecs_count(struct wpa_supplicant *wpa_s)$/;"	f	file:
wmm_ac_get_user_priority	wmm_ac.c	/^static u8 wmm_ac_get_user_priority(const struct wmm_tspec_element *tspec)$/;"	f	file:
wmm_ac_handle_addts_resp	wmm_ac.c	/^static void wmm_ac_handle_addts_resp(struct wpa_supplicant *wpa_s, const u8 *sa,$/;"	f	file:
wmm_ac_handle_delts	wmm_ac.c	/^static void wmm_ac_handle_delts(struct wpa_supplicant *wpa_s, const u8 *sa,$/;"	f	file:
wmm_ac_init	wmm_ac.c	/^static int wmm_ac_init(struct wpa_supplicant *wpa_s, const u8 *ies,$/;"	f	file:
wmm_ac_last_dialog_token	wpa_supplicant_i.h	/^	u8 wmm_ac_last_dialog_token;$/;"	m	struct:wpa_supplicant
wmm_ac_notify_assoc	wmm_ac.c	/^void wmm_ac_notify_assoc(struct wpa_supplicant *wpa_s, const u8 *ies,$/;"	f
wmm_ac_notify_disassoc	wmm_ac.c	/^void wmm_ac_notify_disassoc(struct wpa_supplicant *wpa_s)$/;"	f
wmm_ac_params	config.h	/^	struct hostapd_wmm_ac_params wmm_ac_params[4];$/;"	m	struct:wpa_config	typeref:struct:wpa_config::hostapd_wmm_ac_params
wmm_ac_process_param_elem	wmm_ac.c	/^wmm_ac_process_param_elem(struct wpa_supplicant *wpa_s, const u8 *ies,$/;"	f	file:
wmm_ac_restore_tspecs	wmm_ac.c	/^int wmm_ac_restore_tspecs(struct wpa_supplicant *wpa_s)$/;"	f
wmm_ac_rx_action	wmm_ac.c	/^void wmm_ac_rx_action(struct wpa_supplicant *wpa_s, const u8 *da,$/;"	f
wmm_ac_save_tspecs	wmm_ac.c	/^void wmm_ac_save_tspecs(struct wpa_supplicant *wpa_s)$/;"	f
wmm_ac_send_addts_request	wmm_ac.c	/^static int wmm_ac_send_addts_request(struct wpa_supplicant *wpa_s,$/;"	f	file:
wmm_ac_send_delts	wmm_ac.c	/^static int wmm_ac_send_delts(struct wpa_supplicant *wpa_s,$/;"	f	file:
wmm_ac_should_replace_ts	wmm_ac.c	/^static int wmm_ac_should_replace_ts(struct wpa_supplicant *wpa_s,$/;"	f	file:
wmm_ac_supported	wpa_supplicant_i.h	/^	unsigned int wmm_ac_supported:1;$/;"	m	struct:wpa_supplicant
wmm_ac_ts_req_is_valid	wmm_ac.c	/^static int wmm_ac_ts_req_is_valid(struct wpa_supplicant *wpa_s,$/;"	f	file:
wmm_ac_ts_setup_params	wmm_ac.h	/^struct wmm_ac_ts_setup_params {$/;"	s
wnm_bss_keep_alive	events.c	/^static void wnm_bss_keep_alive(void *eloop_ctx, void *sock_ctx)$/;"	f	file:
wnm_bss_keep_alive_deinit	events.c	/^void wnm_bss_keep_alive_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wnm_bss_termination_duration	wpa_supplicant_i.h	/^	u8 wnm_bss_termination_duration[12];$/;"	m	struct:wpa_supplicant
wnm_cand_from_bss	wpa_supplicant_i.h	/^	u8 wnm_cand_from_bss[ETH_ALEN];$/;"	m	struct:wpa_supplicant
wnm_cand_valid_until	wpa_supplicant_i.h	/^	struct os_reltime wnm_cand_valid_until;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::os_reltime
wnm_deallocate_memory	wnm_sta.c	/^void wnm_deallocate_memory(struct wpa_supplicant *wpa_s)$/;"	f
wnm_dialog_token	wpa_supplicant_i.h	/^	u8 wnm_dialog_token;$/;"	m	struct:wpa_supplicant
wnm_dissoc_timer	wpa_supplicant_i.h	/^	u16 wnm_dissoc_timer;$/;"	m	struct:wpa_supplicant
wnm_dump_cand_list	wnm_sta.c	/^static void wnm_dump_cand_list(struct wpa_supplicant *wpa_s)$/;"	f	file:
wnm_mode	wpa_supplicant_i.h	/^	u8 wnm_mode;$/;"	m	struct:wpa_supplicant
wnm_nei_get_chan	wnm_sta.c	/^static int wnm_nei_get_chan(struct wpa_supplicant *wpa_s, u8 op_class, u8 chan)$/;"	f	file:
wnm_neighbor_report_elements	wpa_supplicant_i.h	/^	struct neighbor_report *wnm_neighbor_report_elements;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::neighbor_report
wnm_num_neighbor_report	wpa_supplicant_i.h	/^	u8 wnm_num_neighbor_report;$/;"	m	struct:wpa_supplicant
wnm_parse_neighbor_report	wnm_sta.c	/^static void wnm_parse_neighbor_report(struct wpa_supplicant *wpa_s,$/;"	f	file:
wnm_parse_neighbor_report_elem	wnm_sta.c	/^static void wnm_parse_neighbor_report_elem(struct neighbor_report *rep,$/;"	f	file:
wnm_process_assoc_resp	events.c	/^static void wnm_process_assoc_resp(struct wpa_supplicant *wpa_s,$/;"	f	file:
wnm_reply	wpa_supplicant_i.h	/^	u8 wnm_reply;$/;"	m	struct:wpa_supplicant
wnm_scan_process	wnm_sta.c	/^int wnm_scan_process(struct wpa_supplicant *wpa_s, int reply_on_fail)$/;"	f
wnm_scan_process	wnm_sta.h	/^static inline int wnm_scan_process(struct wpa_supplicant *wpa_s,$/;"	f
wnm_send_bss_transition_mgmt_query	wnm_sta.c	/^int wnm_send_bss_transition_mgmt_query(struct wpa_supplicant *wpa_s,$/;"	f
wnm_send_bss_transition_mgmt_resp	wnm_sta.c	/^static void wnm_send_bss_transition_mgmt_resp($/;"	f	file:
wnm_set_scan_freqs	wnm_sta.c	/^static void wnm_set_scan_freqs(struct wpa_supplicant *wpa_s)$/;"	f	file:
wnm_sleep_mode_enter_success	wnm_sta.c	/^static void wnm_sleep_mode_enter_success(struct wpa_supplicant *wpa_s,$/;"	f	file:
wnm_sleep_mode_exit_success	wnm_sta.c	/^static void wnm_sleep_mode_exit_success(struct wpa_supplicant *wpa_s,$/;"	f	file:
wnm_sort_cand_list	wnm_sta.c	/^static void wnm_sort_cand_list(struct wpa_supplicant *wpa_s)$/;"	f	file:
wnmsleep_used	wpa_supplicant_i.h	/^	unsigned int wnmsleep_used:1;$/;"	m	struct:wpa_supplicant
work	gas_query.c	/^	struct wpa_radio_work *work;$/;"	m	struct:gas_query	typeref:struct:gas_query::wpa_radio_work	file:
work	wpa_supplicant_i.h	/^	struct dl_list work; \/* struct wpa_radio_work::list entries *\/$/;"	m	struct:wpa_radio	typeref:struct:wpa_radio::dl_list
wowlan_triggers	config.h	/^	char *wowlan_triggers;$/;"	m	struct:wpa_config
wpa	tests/test_wpa.c	/^struct wpa {$/;"	s	file:
wpa	wpa_supplicant_i.h	/^	struct wpa_sm *wpa;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wpa_sm
wpaStateTranslate	wpa_gui-qt4/wpagui.cpp	/^QString WpaGui::wpaStateTranslate(char *state)$/;"	f	class:WpaGui
wpa_action_cleanup	action_handler.c	/^void wpa_action_cleanup(struct wpa_supplicant *wpa_s){$/;"	f
wpa_action_notify_presence	action_handler.c	/^void wpa_action_notify_presence(struct wpa_supplicant *wpa_s, int type){$/;"	f
wpa_action_req_not	action_handler.c	/^void wpa_action_req_not(void *eloop_ctx, void *timeout_ctx){$/;"	f
wpa_action_req_not_ind	action_handler.c	/^static void wpa_action_req_not_ind(void *eloop_ctx, void *timeout_ctx){$/;"	f	file:
wpa_alloc_eapol	preauth_test.c	/^static u8 * wpa_alloc_eapol(const struct wpa_supplicant *wpa_s, u8 type,$/;"	f	file:
wpa_alloc_eapol	wpas_glue.c	/^static u8 * wpa_alloc_eapol(const struct wpa_supplicant *wpa_s, u8 type,$/;"	f	file:
wpa_blacklist	blacklist.h	/^struct wpa_blacklist {$/;"	s
wpa_blacklist_add	blacklist.c	/^int wpa_blacklist_add(struct wpa_supplicant *wpa_s, const u8 *bssid)$/;"	f
wpa_blacklist_clear	blacklist.c	/^void wpa_blacklist_clear(struct wpa_supplicant *wpa_s)$/;"	f
wpa_blacklist_del	blacklist.c	/^int wpa_blacklist_del(struct wpa_supplicant *wpa_s, const u8 *bssid)$/;"	f
wpa_blacklist_get	blacklist.c	/^struct wpa_blacklist * wpa_blacklist_get(struct wpa_supplicant *wpa_s,$/;"	f
wpa_bss	bss.h	/^struct wpa_bss {$/;"	s
wpa_bss_add	bss.c	/^static struct wpa_bss * wpa_bss_add(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_bss_anqp	bss.h	/^struct wpa_bss_anqp {$/;"	s
wpa_bss_anqp_alloc	bss.c	/^struct wpa_bss_anqp * wpa_bss_anqp_alloc(void)$/;"	f
wpa_bss_anqp_clone	bss.c	/^static struct wpa_bss_anqp * wpa_bss_anqp_clone(struct wpa_bss_anqp *anqp)$/;"	f	file:
wpa_bss_anqp_free	bss.c	/^static void wpa_bss_anqp_free(struct wpa_bss_anqp *anqp)$/;"	f	file:
wpa_bss_anqp_unshare_alloc	bss.c	/^int wpa_bss_anqp_unshare_alloc(struct wpa_bss *bss)$/;"	f
wpa_bss_compare_res	bss.c	/^static u32 wpa_bss_compare_res(const struct wpa_bss *old,$/;"	f	file:
wpa_bss_copy_res	bss.c	/^static void wpa_bss_copy_res(struct wpa_bss *dst, struct wpa_scan_res *src,$/;"	f	file:
wpa_bss_deinit	bss.c	/^void wpa_bss_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpa_bss_flush	bss.c	/^void wpa_bss_flush(struct wpa_supplicant *wpa_s)$/;"	f
wpa_bss_flush_by_age	bss.c	/^void wpa_bss_flush_by_age(struct wpa_supplicant *wpa_s, int age)$/;"	f
wpa_bss_get	bss.c	/^struct wpa_bss * wpa_bss_get(struct wpa_supplicant *wpa_s, const u8 *bssid,$/;"	f
wpa_bss_get_bit_rates	bss.c	/^int wpa_bss_get_bit_rates(const struct wpa_bss *bss, u8 **rates)$/;"	f
wpa_bss_get_bssid	bss.c	/^struct wpa_bss * wpa_bss_get_bssid(struct wpa_supplicant *wpa_s,$/;"	f
wpa_bss_get_bssid_latest	bss.c	/^struct wpa_bss * wpa_bss_get_bssid_latest(struct wpa_supplicant *wpa_s,$/;"	f
wpa_bss_get_id	bss.c	/^struct wpa_bss * wpa_bss_get_id(struct wpa_supplicant *wpa_s, unsigned int id)$/;"	f
wpa_bss_get_id_range	bss.c	/^struct wpa_bss * wpa_bss_get_id_range(struct wpa_supplicant *wpa_s,$/;"	f
wpa_bss_get_ie	bss.c	/^const u8 * wpa_bss_get_ie(const struct wpa_bss *bss, u8 ie)$/;"	f
wpa_bss_get_max_rate	bss.c	/^int wpa_bss_get_max_rate(const struct wpa_bss *bss)$/;"	f
wpa_bss_get_p2p_dev_addr	bss.c	/^struct wpa_bss * wpa_bss_get_p2p_dev_addr(struct wpa_supplicant *wpa_s,$/;"	f
wpa_bss_get_vendor_ie	bss.c	/^const u8 * wpa_bss_get_vendor_ie(const struct wpa_bss *bss, u32 vendor_type)$/;"	f
wpa_bss_get_vendor_ie_beacon	bss.c	/^const u8 * wpa_bss_get_vendor_ie_beacon(const struct wpa_bss *bss,$/;"	f
wpa_bss_get_vendor_ie_multi	bss.c	/^struct wpabuf * wpa_bss_get_vendor_ie_multi(const struct wpa_bss *bss,$/;"	f
wpa_bss_get_vendor_ie_multi_beacon	bss.c	/^struct wpabuf * wpa_bss_get_vendor_ie_multi_beacon(const struct wpa_bss *bss,$/;"	f
wpa_bss_in_use	bss.c	/^static int wpa_bss_in_use(struct wpa_supplicant *wpa_s, struct wpa_bss *bss)$/;"	f	file:
wpa_bss_included_in_scan	bss.c	/^static int wpa_bss_included_in_scan(const struct wpa_bss *bss,$/;"	f	file:
wpa_bss_init	bss.c	/^int wpa_bss_init(struct wpa_supplicant *wpa_s)$/;"	f
wpa_bss_known	bss.c	/^static int wpa_bss_known(struct wpa_supplicant *wpa_s, struct wpa_bss *bss)$/;"	f	file:
wpa_bss_remove	bss.c	/^static void wpa_bss_remove(struct wpa_supplicant *wpa_s, struct wpa_bss *bss,$/;"	f	file:
wpa_bss_remove_oldest	bss.c	/^static int wpa_bss_remove_oldest(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_bss_remove_oldest_unknown	bss.c	/^static int wpa_bss_remove_oldest_unknown(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_bss_set_hessid	bss.c	/^static void wpa_bss_set_hessid(struct wpa_bss *bss)$/;"	f	file:
wpa_bss_timeout	bss.c	/^static void wpa_bss_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpa_bss_update	bss.c	/^wpa_bss_update(struct wpa_supplicant *wpa_s, struct wpa_bss *bss,$/;"	f	file:
wpa_bss_update_end	bss.c	/^void wpa_bss_update_end(struct wpa_supplicant *wpa_s, struct scan_info *info,$/;"	f
wpa_bss_update_level	bss.h	/^static inline void wpa_bss_update_level(struct wpa_bss *bss, int new_level)$/;"	f
wpa_bss_update_pending_connect	bss.c	/^static void wpa_bss_update_pending_connect(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_bss_update_scan_res	bss.c	/^void wpa_bss_update_scan_res(struct wpa_supplicant *wpa_s,$/;"	f
wpa_bss_update_start	bss.c	/^void wpa_bss_update_start(struct wpa_supplicant *wpa_s)$/;"	f
wpa_clear_keys	wpa_supplicant.c	/^void wpa_clear_keys(struct wpa_supplicant *wpa_s, const u8 *addr)$/;"	f
wpa_cli_action	wpa_cli.c	/^static void wpa_cli_action(struct wpa_ctrl *ctrl)$/;"	f	file:
wpa_cli_action_cb	wpa_cli.c	/^static void wpa_cli_action_cb(char *msg, size_t len)$/;"	f	file:
wpa_cli_action_process	wpa_cli.c	/^static void wpa_cli_action_process(const char *msg)$/;"	f	file:
wpa_cli_attached	wpa_cli.c	/^static int wpa_cli_attached = 0;$/;"	v	file:
wpa_cli_cleanup	wpa_cli.c	/^static void wpa_cli_cleanup(void)$/;"	f	file:
wpa_cli_close_connection	wpa_cli.c	/^static void wpa_cli_close_connection(void)$/;"	f	file:
wpa_cli_cmd	wpa_cli.c	/^static int wpa_cli_cmd(struct wpa_ctrl *ctrl, const char *cmd, int min_args,$/;"	f	file:
wpa_cli_cmd	wpa_cli.c	/^struct wpa_cli_cmd {$/;"	s	file:
wpa_cli_cmd_add_cred	wpa_cli.c	/^static int wpa_cli_cmd_add_cred(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_add_network	wpa_cli.c	/^static int wpa_cli_cmd_add_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_all_sta	wpa_cli.c	/^static int wpa_cli_cmd_all_sta(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_anqp_get	wpa_cli.c	/^static int wpa_cli_cmd_anqp_get(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_ap_scan	wpa_cli.c	/^static int wpa_cli_cmd_ap_scan(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_autoscan	wpa_cli.c	/^static int wpa_cli_cmd_autoscan(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_blacklist	wpa_cli.c	/^static int wpa_cli_cmd_blacklist(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_bss	wpa_cli.c	/^static int wpa_cli_cmd_bss(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_bss_expire_age	wpa_cli.c	/^static int wpa_cli_cmd_bss_expire_age(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_bss_expire_count	wpa_cli.c	/^static int wpa_cli_cmd_bss_expire_count(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_bss_flush	wpa_cli.c	/^static int wpa_cli_cmd_bss_flush(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_bssid	wpa_cli.c	/^static int wpa_cli_cmd_bssid(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_cancel_fetch_osu	wpa_cli.c	/^static int wpa_cli_cmd_cancel_fetch_osu(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_chanswitch	wpa_cli.c	/^static int wpa_cli_cmd_chanswitch(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_completion	wpa_cli.c	/^static char ** wpa_cli_cmd_completion(const char *cmd, const char *str,$/;"	f	file:
wpa_cli_cmd_deauthenticate	wpa_cli.c	/^static int wpa_cli_cmd_deauthenticate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_disable_network	wpa_cli.c	/^static int wpa_cli_cmd_disable_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_disassociate	wpa_cli.c	/^static int wpa_cli_cmd_disassociate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_disconnect	wpa_cli.c	/^static int wpa_cli_cmd_disconnect(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_driver	wpa_cli.c	/^static int wpa_cli_cmd_driver(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_drop_sa	wpa_cli.c	/^static int wpa_cli_cmd_drop_sa(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_dump	wpa_cli.c	/^static int wpa_cli_cmd_dump(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_dup_network	wpa_cli.c	/^static int wpa_cli_cmd_dup_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_enable_network	wpa_cli.c	/^static int wpa_cli_cmd_enable_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_erp_flush	wpa_cli.c	/^static int wpa_cli_cmd_erp_flush(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_fetch_anqp	wpa_cli.c	/^static int wpa_cli_cmd_fetch_anqp(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_fetch_osu	wpa_cli.c	/^static int wpa_cli_cmd_fetch_osu(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_flags	wpa_cli.c	/^enum wpa_cli_cmd_flags {$/;"	g	file:
wpa_cli_cmd_flush	wpa_cli.c	/^static int wpa_cli_cmd_flush(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_ft_ds	wpa_cli.c	/^static int wpa_cli_cmd_ft_ds(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_gas_request	wpa_cli.c	/^static int wpa_cli_cmd_gas_request(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_gas_response_get	wpa_cli.c	/^static int wpa_cli_cmd_gas_response_get(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_get	wpa_cli.c	/^static int wpa_cli_cmd_get(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_get_capability	wpa_cli.c	/^static int wpa_cli_cmd_get_capability(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_get_cred	wpa_cli.c	/^static int wpa_cli_cmd_get_cred(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_get_nai_home_realm_list	wpa_cli.c	/^static int wpa_cli_cmd_get_nai_home_realm_list(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_get_network	wpa_cli.c	/^static int wpa_cli_cmd_get_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_help	wpa_cli.c	/^static int wpa_cli_cmd_help(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_hs20_anqp_get	wpa_cli.c	/^static int wpa_cli_cmd_hs20_anqp_get(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_hs20_icon_request	wpa_cli.c	/^static int wpa_cli_cmd_hs20_icon_request(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_ibss_rsn	wpa_cli.c	/^static int wpa_cli_cmd_ibss_rsn(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_identity	wpa_cli.c	/^static int wpa_cli_cmd_identity(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_ifname	wpa_cli.c	/^static int wpa_cli_cmd_ifname(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_interface	wpa_cli.c	/^static int wpa_cli_cmd_interface(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_interface_add	wpa_cli.c	/^static int wpa_cli_cmd_interface_add(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_interface_list	wpa_cli.c	/^static int wpa_cli_cmd_interface_list(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_interface_remove	wpa_cli.c	/^static int wpa_cli_cmd_interface_remove(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_interworking_add_network	wpa_cli.c	/^static int wpa_cli_cmd_interworking_add_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_interworking_connect	wpa_cli.c	/^static int wpa_cli_cmd_interworking_connect(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_interworking_select	wpa_cli.c	/^static int wpa_cli_cmd_interworking_select(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_level	wpa_cli.c	/^static int wpa_cli_cmd_level(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_license	wpa_cli.c	/^static int wpa_cli_cmd_license(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_list_creds	wpa_cli.c	/^static int wpa_cli_cmd_list_creds(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_list_networks	wpa_cli.c	/^static int wpa_cli_cmd_list_networks(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_log_level	wpa_cli.c	/^static int wpa_cli_cmd_log_level(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_logoff	wpa_cli.c	/^static int wpa_cli_cmd_logoff(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_logon	wpa_cli.c	/^static int wpa_cli_cmd_logon(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_mac_rand_scan	wpa_cli.c	/^static int wpa_cli_cmd_mac_rand_scan(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_mesh_group_add	wpa_cli.c	/^static int wpa_cli_cmd_mesh_group_add(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_mesh_group_remove	wpa_cli.c	/^static int wpa_cli_cmd_mesh_group_remove(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_mesh_interface_add	wpa_cli.c	/^static int wpa_cli_cmd_mesh_interface_add(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_mib	wpa_cli.c	/^static int wpa_cli_cmd_mib(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_neighbor_rep_request	wpa_cli.c	/^static int wpa_cli_cmd_neighbor_rep_request(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_new_password	wpa_cli.c	/^static int wpa_cli_cmd_new_password(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_nfc_get_handover_req	wpa_cli.c	/^static int wpa_cli_cmd_nfc_get_handover_req(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_nfc_get_handover_sel	wpa_cli.c	/^static int wpa_cli_cmd_nfc_get_handover_sel(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_nfc_report_handover	wpa_cli.c	/^static int wpa_cli_cmd_nfc_report_handover(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_note	wpa_cli.c	/^static int wpa_cli_cmd_note(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_otp	wpa_cli.c	/^static int wpa_cli_cmd_otp(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_p2p_asp_provision	wpa_cli.c	/^static int wpa_cli_cmd_p2p_asp_provision(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_asp_provision_resp	wpa_cli.c	/^static int wpa_cli_cmd_p2p_asp_provision_resp(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_cancel	wpa_cli.c	/^static int wpa_cli_cmd_p2p_cancel(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_connect	wpa_cli.c	/^static int wpa_cli_cmd_p2p_connect(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_ext_listen	wpa_cli.c	/^static int wpa_cli_cmd_p2p_ext_listen(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_find	wpa_cli.c	/^static int wpa_cli_cmd_p2p_find(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_p2p_flush	wpa_cli.c	/^static int wpa_cli_cmd_p2p_flush(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_p2p_get_passphrase	wpa_cli.c	/^static int wpa_cli_cmd_p2p_get_passphrase(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_group_add	wpa_cli.c	/^static int wpa_cli_cmd_p2p_group_add(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_group_remove	wpa_cli.c	/^static int wpa_cli_cmd_p2p_group_remove(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_invite	wpa_cli.c	/^static int wpa_cli_cmd_p2p_invite(struct wpa_ctrl *ctrl,$/;"	f	file:
wpa_cli_cmd_p2p_listen	wpa_cli.c	/^static int wpa_cli_cmd_p2p_listen(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_peer	wpa_cli.c	/^static int wpa_cli_cmd_p2p_peer(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_p2p_peers	wpa_cli.c	/^static int wpa_cli_cmd_p2p_peers(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_p2p_presence_req	wpa_cli.c	/^static int wpa_cli_cmd_p2p_presence_req(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_prov_disc	wpa_cli.c	/^static int wpa_cli_cmd_p2p_prov_disc(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_reject	wpa_cli.c	/^static int wpa_cli_cmd_p2p_reject(struct wpa_ctrl *ctrl,$/;"	f	file:
wpa_cli_cmd_p2p_remove_client	wpa_cli.c	/^static int wpa_cli_cmd_p2p_remove_client(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_serv_disc_cancel_req	wpa_cli.c	/^static int wpa_cli_cmd_p2p_serv_disc_cancel_req(struct wpa_ctrl *ctrl,$/;"	f	file:
wpa_cli_cmd_p2p_serv_disc_external	wpa_cli.c	/^static int wpa_cli_cmd_p2p_serv_disc_external(struct wpa_ctrl *ctrl,$/;"	f	file:
wpa_cli_cmd_p2p_serv_disc_req	wpa_cli.c	/^static int wpa_cli_cmd_p2p_serv_disc_req(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_serv_disc_resp	wpa_cli.c	/^static int wpa_cli_cmd_p2p_serv_disc_resp(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_service_add	wpa_cli.c	/^static int wpa_cli_cmd_p2p_service_add(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_service_del	wpa_cli.c	/^static int wpa_cli_cmd_p2p_service_del(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_service_flush	wpa_cli.c	/^static int wpa_cli_cmd_p2p_service_flush(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_service_rep	wpa_cli.c	/^static int wpa_cli_cmd_p2p_service_rep(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_service_update	wpa_cli.c	/^static int wpa_cli_cmd_p2p_service_update(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_set	wpa_cli.c	/^static int wpa_cli_cmd_p2p_set(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_p2p_stop_find	wpa_cli.c	/^static int wpa_cli_cmd_p2p_stop_find(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_p2p_unauthorize	wpa_cli.c	/^static int wpa_cli_cmd_p2p_unauthorize(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_passphrase	wpa_cli.c	/^static int wpa_cli_cmd_passphrase(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_password	wpa_cli.c	/^static int wpa_cli_cmd_password(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_pin	wpa_cli.c	/^static int wpa_cli_cmd_pin(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_ping	wpa_cli.c	/^static int wpa_cli_cmd_ping(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_pktcnt_poll	wpa_cli.c	/^static int wpa_cli_cmd_pktcnt_poll(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_pmksa	wpa_cli.c	/^static int wpa_cli_cmd_pmksa(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_pmksa_flush	wpa_cli.c	/^static int wpa_cli_cmd_pmksa_flush(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_preauthenticate	wpa_cli.c	/^static int wpa_cli_cmd_preauthenticate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_quit	wpa_cli.c	/^static int wpa_cli_cmd_quit(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_radio_work	wpa_cli.c	/^static int wpa_cli_cmd_radio_work(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_raw	wpa_cli.c	/^static int wpa_cli_cmd_raw(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_reassociate	wpa_cli.c	/^static int wpa_cli_cmd_reassociate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_reattach	wpa_cli.c	/^static int wpa_cli_cmd_reattach(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_reauthenticate	wpa_cli.c	/^static int wpa_cli_cmd_reauthenticate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_reconfigure	wpa_cli.c	/^static int wpa_cli_cmd_reconfigure(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_reconnect	wpa_cli.c	/^static int wpa_cli_cmd_reconnect(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_relog	wpa_cli.c	/^static int wpa_cli_cmd_relog(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_remove_cred	wpa_cli.c	/^static int wpa_cli_cmd_remove_cred(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_remove_network	wpa_cli.c	/^static int wpa_cli_cmd_remove_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_resume	wpa_cli.c	/^static int wpa_cli_cmd_resume(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_roam	wpa_cli.c	/^static int wpa_cli_cmd_roam(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_save_config	wpa_cli.c	/^static int wpa_cli_cmd_save_config(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_scan	wpa_cli.c	/^static int wpa_cli_cmd_scan(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_scan_interval	wpa_cli.c	/^static int wpa_cli_cmd_scan_interval(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_scan_results	wpa_cli.c	/^static int wpa_cli_cmd_scan_results(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_select_network	wpa_cli.c	/^static int wpa_cli_cmd_select_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_set	wpa_cli.c	/^static int wpa_cli_cmd_set(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_set_cred	wpa_cli.c	/^static int wpa_cli_cmd_set_cred(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_set_network	wpa_cli.c	/^static int wpa_cli_cmd_set_network(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_signal_poll	wpa_cli.c	/^static int wpa_cli_cmd_signal_poll(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_sim	wpa_cli.c	/^static int wpa_cli_cmd_sim(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_sta	wpa_cli.c	/^static int wpa_cli_cmd_sta(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_sta_autoconnect	wpa_cli.c	/^static int wpa_cli_cmd_sta_autoconnect(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_status	wpa_cli.c	/^static int wpa_cli_cmd_status(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_stkstart	wpa_cli.c	/^static int wpa_cli_cmd_stkstart(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_stop_fetch_anqp	wpa_cli.c	/^static int wpa_cli_cmd_stop_fetch_anqp(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_suspend	wpa_cli.c	/^static int wpa_cli_cmd_suspend(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_tdls_cancel_chan_switch	wpa_cli.c	/^static int wpa_cli_cmd_tdls_cancel_chan_switch(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_tdls_chan_switch	wpa_cli.c	/^static int wpa_cli_cmd_tdls_chan_switch(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_tdls_discover	wpa_cli.c	/^static int wpa_cli_cmd_tdls_discover(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_tdls_setup	wpa_cli.c	/^static int wpa_cli_cmd_tdls_setup(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_tdls_teardown	wpa_cli.c	/^static int wpa_cli_cmd_tdls_teardown(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_terminate	wpa_cli.c	/^static int wpa_cli_cmd_terminate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_vendor	wpa_cli.c	/^static int wpa_cli_cmd_vendor(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_wfd_subelem_get	wpa_cli.c	/^static int wpa_cli_cmd_wfd_subelem_get(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wfd_subelem_set	wpa_cli.c	/^static int wpa_cli_cmd_wfd_subelem_set(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wmm_ac_addts	wpa_cli.c	/^static int wpa_cli_cmd_wmm_ac_addts(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wmm_ac_delts	wpa_cli.c	/^static int wpa_cli_cmd_wmm_ac_delts(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wmm_ac_status	wpa_cli.c	/^static int wpa_cli_cmd_wmm_ac_status(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wnm_bss_query	wpa_cli.c	/^static int wpa_cli_cmd_wnm_bss_query(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_wnm_sleep	wpa_cli.c	/^static int wpa_cli_cmd_wnm_sleep(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_wps_ap_pin	wpa_cli.c	/^static int wpa_cli_cmd_wps_ap_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_cancel	wpa_cli.c	/^static int wpa_cli_cmd_wps_cancel(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_check_pin	wpa_cli.c	/^static int wpa_cli_cmd_wps_check_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_er_config	wpa_cli.c	/^static int wpa_cli_cmd_wps_er_config(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_er_learn	wpa_cli.c	/^static int wpa_cli_cmd_wps_er_learn(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_er_nfc_config_token	wpa_cli.c	/^static int wpa_cli_cmd_wps_er_nfc_config_token(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_er_pbc	wpa_cli.c	/^static int wpa_cli_cmd_wps_er_pbc(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_er_pin	wpa_cli.c	/^static int wpa_cli_cmd_wps_er_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_er_set_config	wpa_cli.c	/^static int wpa_cli_cmd_wps_er_set_config(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_er_start	wpa_cli.c	/^static int wpa_cli_cmd_wps_er_start(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_er_stop	wpa_cli.c	/^static int wpa_cli_cmd_wps_er_stop(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_nfc	wpa_cli.c	/^static int wpa_cli_cmd_wps_nfc(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_wps_nfc_config_token	wpa_cli.c	/^static int wpa_cli_cmd_wps_nfc_config_token(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_nfc_tag_read	wpa_cli.c	/^static int wpa_cli_cmd_wps_nfc_tag_read(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_nfc_token	wpa_cli.c	/^static int wpa_cli_cmd_wps_nfc_token(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_cli_cmd_wps_pbc	wpa_cli.c	/^static int wpa_cli_cmd_wps_pbc(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_wps_pin	wpa_cli.c	/^static int wpa_cli_cmd_wps_pin(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_cmd_wps_reg	wpa_cli.c	/^static int wpa_cli_cmd_wps_reg(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_cli_commands	wpa_cli.c	/^static struct wpa_cli_cmd wpa_cli_commands[] = {$/;"	v	typeref:struct:wpa_cli_cmd	file:
wpa_cli_complete_bss	wpa_cli.c	/^static char ** wpa_cli_complete_bss(const char *str, int pos)$/;"	f	file:
wpa_cli_complete_help	wpa_cli.c	/^static char ** wpa_cli_complete_help(const char *str, int pos)$/;"	f	file:
wpa_cli_complete_p2p_connect	wpa_cli.c	/^static char ** wpa_cli_complete_p2p_connect(const char *str, int pos)$/;"	f	file:
wpa_cli_complete_p2p_find	wpa_cli.c	/^static char ** wpa_cli_complete_p2p_find(const char *str, int pos)$/;"	f	file:
wpa_cli_complete_p2p_group_remove	wpa_cli.c	/^static char ** wpa_cli_complete_p2p_group_remove(const char *str, int pos)$/;"	f	file:
wpa_cli_complete_p2p_peer	wpa_cli.c	/^static char ** wpa_cli_complete_p2p_peer(const char *str, int pos)$/;"	f	file:
wpa_cli_complete_p2p_set	wpa_cli.c	/^static char ** wpa_cli_complete_p2p_set(const char *str, int pos)$/;"	f	file:
wpa_cli_complete_set	wpa_cli.c	/^static char ** wpa_cli_complete_set(const char *str, int pos)$/;"	f	file:
wpa_cli_connected	wpa_cli.c	/^static int wpa_cli_connected = -1;$/;"	v	file:
wpa_cli_edit_cmd_cb	wpa_cli.c	/^static void wpa_cli_edit_cmd_cb(void *ctx, char *cmd)$/;"	f	file:
wpa_cli_edit_completion_cb	wpa_cli.c	/^static char ** wpa_cli_edit_completion_cb(void *ctx, const char *str, int pos)$/;"	f	file:
wpa_cli_edit_eof_cb	wpa_cli.c	/^static void wpa_cli_edit_eof_cb(void *ctx)$/;"	f	file:
wpa_cli_edit_filter_history_cb	wpa_cli.c	/^static int wpa_cli_edit_filter_history_cb(void *ctx, const char *cmd)$/;"	f	file:
wpa_cli_exec	wpa_cli.c	/^static int wpa_cli_exec(const char *program, const char *arg1,$/;"	f	file:
wpa_cli_full_license	wpa_cli.c	/^static const char *wpa_cli_full_license =$/;"	v	file:
wpa_cli_get_default_ifname	wpa_cli.c	/^static char * wpa_cli_get_default_ifname(void)$/;"	f	file:
wpa_cli_interactive	wpa_cli.c	/^static void wpa_cli_interactive(void)$/;"	f	file:
wpa_cli_last_id	wpa_cli.c	/^static int wpa_cli_last_id = 0;$/;"	v	file:
wpa_cli_license	wpa_cli.c	/^static const char *wpa_cli_license =$/;"	v	file:
wpa_cli_list_interfaces	wpa_cli.c	/^static int wpa_cli_list_interfaces(struct wpa_ctrl *ctrl)$/;"	f	file:
wpa_cli_mon_receive	wpa_cli.c	/^static void wpa_cli_mon_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:
wpa_cli_msg_cb	wpa_cli.c	/^static void wpa_cli_msg_cb(char *msg, size_t len)$/;"	f	file:
wpa_cli_msg_cb	wpa_not_disp.c	/^static void wpa_cli_msg_cb(char *msg, size_t len)$/;"	f	file:
wpa_cli_open_connection	wpa_cli.c	/^static int wpa_cli_open_connection(const char *ifname, int attach)$/;"	f	file:
wpa_cli_ping	wpa_cli.c	/^static void wpa_cli_ping(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpa_cli_quit	wpa_cli.c	/^static int wpa_cli_quit = 0;$/;"	v	file:
wpa_cli_reconnect	wpa_cli.c	/^static void wpa_cli_reconnect(void)$/;"	f	file:
wpa_cli_recv_pending	wpa_cli.c	/^static void wpa_cli_recv_pending(struct wpa_ctrl *ctrl, int action_monitor)$/;"	f	file:
wpa_cli_show_event	wpa_cli.c	/^static int wpa_cli_show_event(const char *event)$/;"	f	file:
wpa_cli_show_network_variables	wpa_cli.c	/^static void wpa_cli_show_network_variables(void)$/;"	f	file:
wpa_cli_terminate	wpa_cli.c	/^static void wpa_cli_terminate(int sig, void *ctx)$/;"	f	file:
wpa_cli_version	wpa_cli.c	/^static const char *wpa_cli_version =$/;"	v	file:
wpa_conc_pref	wpa_supplicant_i.h	/^	enum wpa_conc_pref {$/;"	g	struct:wpa_global
wpa_config	config.h	/^struct wpa_config {$/;"	s
wpa_config_add_cred	config.c	/^struct wpa_cred * wpa_config_add_cred(struct wpa_config *config)$/;"	f
wpa_config_add_network	config.c	/^struct wpa_ssid * wpa_config_add_network(struct wpa_config *config)$/;"	f
wpa_config_add_prio_network	config.c	/^int wpa_config_add_prio_network(struct wpa_config *config,$/;"	f
wpa_config_alloc_empty	config.c	/^struct wpa_config * wpa_config_alloc_empty(const char *ctrl_interface,$/;"	f
wpa_config_debug_dump_networks	config.c	/^void wpa_config_debug_dump_networks(struct wpa_config *config)$/;"	f
wpa_config_debug_dump_networks	config.h	1217;"	d
wpa_config_delete_subkeys	config_winreg.c	/^static int wpa_config_delete_subkeys(HKEY hk, const TCHAR *key)$/;"	f	file:
wpa_config_dump_values	config.c	/^int wpa_config_dump_values(struct wpa_config *config, char *buf, size_t buflen)$/;"	f
wpa_config_flush_blobs	config.c	/^void wpa_config_flush_blobs(struct wpa_config *config)$/;"	f
wpa_config_foreach_network	config.c	/^void wpa_config_foreach_network(struct wpa_config *config,$/;"	f
wpa_config_free	config.c	/^void wpa_config_free(struct wpa_config *config)$/;"	f
wpa_config_free_blob	config.c	/^void wpa_config_free_blob(struct wpa_config_blob *blob)$/;"	f
wpa_config_free_cred	config.c	/^void wpa_config_free_cred(struct wpa_cred *cred)$/;"	f
wpa_config_free_ssid	config.c	/^void wpa_config_free_ssid(struct wpa_ssid *ssid)$/;"	f
wpa_config_get	config.c	/^char * wpa_config_get(struct wpa_ssid *ssid, const char *var)$/;"	f
wpa_config_get_all	config.c	/^char ** wpa_config_get_all(struct wpa_ssid *ssid, int get_keys)$/;"	f
wpa_config_get_blob	config.c	/^const struct wpa_config_blob * wpa_config_get_blob(struct wpa_config *config,$/;"	f
wpa_config_get_cred	config.c	/^struct wpa_cred * wpa_config_get_cred(struct wpa_config *config, int id)$/;"	f
wpa_config_get_cred_no_key	config.c	/^char * wpa_config_get_cred_no_key(struct wpa_cred *cred, const char *var)$/;"	f
wpa_config_get_int	config.c	/^static int wpa_config_get_int(const char *name, struct wpa_config *config,$/;"	f	file:
wpa_config_get_line	config_file.c	/^static char * wpa_config_get_line(char *s, int size, FILE *stream, int *line,$/;"	f	file:
wpa_config_get_network	config.c	/^struct wpa_ssid * wpa_config_get_network(struct wpa_config *config, int id)$/;"	f
wpa_config_get_no_key	config.c	/^char * wpa_config_get_no_key(struct wpa_ssid *ssid, const char *var)$/;"	f
wpa_config_get_str	config.c	/^static int wpa_config_get_str(const char *name, struct wpa_config *config,$/;"	f	file:
wpa_config_get_value	config.c	/^int wpa_config_get_value(const char *name, struct wpa_config *config,$/;"	f
wpa_config_parse_addr_list	config.c	/^static int wpa_config_parse_addr_list(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_auth_alg	config.c	/^static int wpa_config_parse_auth_alg(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_bssid	config.c	/^static int wpa_config_parse_bssid(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_bssid_blacklist	config.c	/^static int wpa_config_parse_bssid_blacklist(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_bssid_whitelist	config.c	/^static int wpa_config_parse_bssid_whitelist(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_cipher	config.c	/^static int wpa_config_parse_cipher(int line, const char *value)$/;"	f	file:
wpa_config_parse_eap	config.c	/^static int wpa_config_parse_eap(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_freq_list	config.c	/^static int wpa_config_parse_freq_list(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_go_p2p_dev_addr	config.c	/^static int wpa_config_parse_go_p2p_dev_addr(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_group	config.c	/^static int wpa_config_parse_group(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_int	config.c	/^static int wpa_config_parse_int(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_int_array	config.c	/^static int * wpa_config_parse_int_array(const char *value)$/;"	f	file:
wpa_config_parse_key_mgmt	config.c	/^static int wpa_config_parse_key_mgmt(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_mesh_basic_rates	config.c	/^static int wpa_config_parse_mesh_basic_rates(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_p2p_client_list	config.c	/^static int wpa_config_parse_p2p_client_list(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_pairwise	config.c	/^static int wpa_config_parse_pairwise(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_password	config.c	/^static int wpa_config_parse_password(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_proto	config.c	/^static int wpa_config_parse_proto(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_psk	config.c	/^static int wpa_config_parse_psk(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_psk_list	config.c	/^static int wpa_config_parse_psk_list(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_scan_freq	config.c	/^static int wpa_config_parse_scan_freq(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_str	config.c	/^static int wpa_config_parse_str(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_wep_key	config.c	/^static int wpa_config_parse_wep_key(u8 *key, size_t *len, int line,$/;"	f	file:
wpa_config_parse_wep_key0	config.c	/^static int wpa_config_parse_wep_key0(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_wep_key1	config.c	/^static int wpa_config_parse_wep_key1(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_wep_key2	config.c	/^static int wpa_config_parse_wep_key2(const struct parse_data *data,$/;"	f	file:
wpa_config_parse_wep_key3	config.c	/^static int wpa_config_parse_wep_key3(const struct parse_data *data,$/;"	f	file:
wpa_config_process_ap_vendor_elements	config.c	/^static int wpa_config_process_ap_vendor_elements($/;"	f	file:
wpa_config_process_bgscan	config.c	/^static int wpa_config_process_bgscan(const struct global_parse_data *data,$/;"	f	file:
wpa_config_process_blob	config_file.c	/^static int wpa_config_process_blob(struct wpa_config *config, FILE *f,$/;"	f	file:
wpa_config_process_country	config.c	/^static int wpa_config_process_country(const struct global_parse_data *data,$/;"	f	file:
wpa_config_process_device_type	config.c	/^static int wpa_config_process_device_type($/;"	f	file:
wpa_config_process_freq_list	config.c	/^static int wpa_config_process_freq_list(const struct global_parse_data *data,$/;"	f	file:
wpa_config_process_global	config.c	/^int wpa_config_process_global(struct wpa_config *config, char *pos, int line)$/;"	f
wpa_config_process_hessid	config.c	/^static int wpa_config_process_hessid($/;"	f	file:
wpa_config_process_load_dynamic_eap	config.c	/^static int wpa_config_process_load_dynamic_eap($/;"	f	file:
wpa_config_process_no_ctrl_interface	config.c	/^static int wpa_config_process_no_ctrl_interface($/;"	f	file:
wpa_config_process_os_version	config.c	/^static int wpa_config_process_os_version(const struct global_parse_data *data,$/;"	f	file:
wpa_config_process_p2p_no_go_freq	config.c	/^static int wpa_config_process_p2p_no_go_freq($/;"	f	file:
wpa_config_process_p2p_pref_chan	config.c	/^static int wpa_config_process_p2p_pref_chan($/;"	f	file:
wpa_config_process_sae_groups	config.c	/^static int wpa_config_process_sae_groups($/;"	f	file:
wpa_config_process_sec_device_type	config.c	/^static int wpa_config_process_sec_device_type($/;"	f	file:
wpa_config_process_uuid	config.c	/^static int wpa_config_process_uuid(const struct global_parse_data *data,$/;"	f	file:
wpa_config_process_wps_vendor_ext_m1	config.c	/^static int wpa_config_process_wps_vendor_ext_m1($/;"	f	file:
wpa_config_read	config_file.c	/^struct wpa_config * wpa_config_read(const char *name, struct wpa_config *cfgp)$/;"	f
wpa_config_read	config_none.c	/^struct wpa_config * wpa_config_read(const char *name, struct wpa_config *cfgp)$/;"	f
wpa_config_read	config_winreg.c	/^struct wpa_config * wpa_config_read(const char *name, struct wpa_config *cfgp)$/;"	f
wpa_config_read_blob	config_file.c	/^static struct wpa_config_blob * wpa_config_read_blob(FILE *f, int *line,$/;"	f	file:
wpa_config_read_blobs	config_winreg.c	/^static int wpa_config_read_blobs(struct wpa_config *config, HKEY hk)$/;"	f	file:
wpa_config_read_cred	config_file.c	/^static struct wpa_cred * wpa_config_read_cred(FILE *f, int *line, int id)$/;"	f	file:
wpa_config_read_global	config_winreg.c	/^static int wpa_config_read_global(struct wpa_config *config, HKEY hk)$/;"	f	file:
wpa_config_read_global_os_version	config_winreg.c	/^static int wpa_config_read_global_os_version(struct wpa_config *config,$/;"	f	file:
wpa_config_read_global_uuid	config_winreg.c	/^static int wpa_config_read_global_uuid(struct wpa_config *config, HKEY hk)$/;"	f	file:
wpa_config_read_network	config_file.c	/^static struct wpa_ssid * wpa_config_read_network(FILE *f, int *line, int id)$/;"	f	file:
wpa_config_read_network	config_winreg.c	/^static struct wpa_ssid * wpa_config_read_network(HKEY hk, const TCHAR *netw,$/;"	f	file:
wpa_config_read_networks	config_winreg.c	/^static int wpa_config_read_networks(struct wpa_config *config, HKEY hk)$/;"	f	file:
wpa_config_read_reg_dword	config_winreg.c	/^static int wpa_config_read_reg_dword(HKEY hk, const TCHAR *name, int *_val)$/;"	f	file:
wpa_config_read_reg_string	config_winreg.c	/^static char * wpa_config_read_reg_string(HKEY hk, const TCHAR *name)$/;"	f	file:
wpa_config_remove_blob	config.c	/^int wpa_config_remove_blob(struct wpa_config *config, const char *name)$/;"	f
wpa_config_remove_cred	config.c	/^int wpa_config_remove_cred(struct wpa_config *config, int id)$/;"	f
wpa_config_remove_network	config.c	/^int wpa_config_remove_network(struct wpa_config *config, int id)$/;"	f
wpa_config_set	config.c	/^int wpa_config_set(struct wpa_ssid *ssid, const char *var, const char *value,$/;"	f
wpa_config_set_blob	config.c	/^void wpa_config_set_blob(struct wpa_config *config,$/;"	f
wpa_config_set_cred	config.c	/^int wpa_config_set_cred(struct wpa_cred *cred, const char *var,$/;"	f
wpa_config_set_cred_req_conn_capab	config.c	/^static int wpa_config_set_cred_req_conn_capab(struct wpa_cred *cred,$/;"	f	file:
wpa_config_set_network_defaults	config.c	/^void wpa_config_set_network_defaults(struct wpa_ssid *ssid)$/;"	f
wpa_config_set_quoted	config.c	/^int wpa_config_set_quoted(struct wpa_ssid *ssid, const char *var,$/;"	f
wpa_config_update_prio_list	config.c	/^int wpa_config_update_prio_list(struct wpa_config *config)$/;"	f
wpa_config_update_psk	config.c	/^void wpa_config_update_psk(struct wpa_ssid *ssid)$/;"	f
wpa_config_validate_network	config_file.c	/^static int wpa_config_validate_network(struct wpa_ssid *ssid, int line)$/;"	f	file:
wpa_config_write	config_file.c	/^int wpa_config_write(const char *name, struct wpa_config *config)$/;"	f
wpa_config_write	config_none.c	/^int wpa_config_write(const char *name, struct wpa_config *config)$/;"	f
wpa_config_write	config_winreg.c	/^int wpa_config_write(const char *name, struct wpa_config *config)$/;"	f
wpa_config_write_addr_list	config.c	/^static char * wpa_config_write_addr_list(const struct parse_data *data,$/;"	f	file:
wpa_config_write_auth_alg	config.c	/^static char * wpa_config_write_auth_alg(const struct parse_data *data,$/;"	f	file:
wpa_config_write_blob	config_file.c	/^static int wpa_config_write_blob(FILE *f, struct wpa_config_blob *blob)$/;"	f	file:
wpa_config_write_blob	config_winreg.c	/^static int wpa_config_write_blob(HKEY hk, struct wpa_config_blob *blob)$/;"	f	file:
wpa_config_write_bssid	config.c	/^static char * wpa_config_write_bssid(const struct parse_data *data,$/;"	f	file:
wpa_config_write_bssid_blacklist	config.c	/^static char * wpa_config_write_bssid_blacklist(const struct parse_data *data,$/;"	f	file:
wpa_config_write_bssid_whitelist	config.c	/^static char * wpa_config_write_bssid_whitelist(const struct parse_data *data,$/;"	f	file:
wpa_config_write_cipher	config.c	/^static char * wpa_config_write_cipher(int cipher)$/;"	f	file:
wpa_config_write_cred	config_file.c	/^static void wpa_config_write_cred(FILE *f, struct wpa_cred *cred)$/;"	f	file:
wpa_config_write_eap	config.c	/^static char * wpa_config_write_eap(const struct parse_data *data,$/;"	f	file:
wpa_config_write_freq_list	config.c	/^static char * wpa_config_write_freq_list(const struct parse_data *data,$/;"	f	file:
wpa_config_write_freqs	config.c	/^static char * wpa_config_write_freqs(const struct parse_data *data,$/;"	f	file:
wpa_config_write_global	config_file.c	/^static void wpa_config_write_global(FILE *f, struct wpa_config *config)$/;"	f	file:
wpa_config_write_global	config_winreg.c	/^static int wpa_config_write_global(struct wpa_config *config, HKEY hk)$/;"	f	file:
wpa_config_write_go_p2p_dev_addr	config.c	/^static char * wpa_config_write_go_p2p_dev_addr(const struct parse_data *data,$/;"	f	file:
wpa_config_write_group	config.c	/^static char * wpa_config_write_group(const struct parse_data *data,$/;"	f	file:
wpa_config_write_int	config.c	/^static char * wpa_config_write_int(const struct parse_data *data,$/;"	f	file:
wpa_config_write_key_mgmt	config.c	/^static char * wpa_config_write_key_mgmt(const struct parse_data *data,$/;"	f	file:
wpa_config_write_mesh_basic_rates	config.c	/^static char * wpa_config_write_mesh_basic_rates(const struct parse_data *data,$/;"	f	file:
wpa_config_write_network	config_file.c	/^static void wpa_config_write_network(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
wpa_config_write_network	config_winreg.c	/^static int wpa_config_write_network(HKEY hk, struct wpa_ssid *ssid, int id)$/;"	f	file:
wpa_config_write_p2p_client_list	config.c	/^static char * wpa_config_write_p2p_client_list(const struct parse_data *data,$/;"	f	file:
wpa_config_write_pairwise	config.c	/^static char * wpa_config_write_pairwise(const struct parse_data *data,$/;"	f	file:
wpa_config_write_password	config.c	/^static char * wpa_config_write_password(const struct parse_data *data,$/;"	f	file:
wpa_config_write_proto	config.c	/^static char * wpa_config_write_proto(const struct parse_data *data,$/;"	f	file:
wpa_config_write_psk	config.c	/^static char * wpa_config_write_psk(const struct parse_data *data,$/;"	f	file:
wpa_config_write_psk_list	config.c	/^static char * wpa_config_write_psk_list(const struct parse_data *data,$/;"	f	file:
wpa_config_write_reg_dword	config_winreg.c	/^static int wpa_config_write_reg_dword(HKEY hk, const TCHAR *name, int val,$/;"	f	file:
wpa_config_write_reg_string	config_winreg.c	/^static int wpa_config_write_reg_string(HKEY hk, const char *name,$/;"	f	file:
wpa_config_write_scan_freq	config.c	/^static char * wpa_config_write_scan_freq(const struct parse_data *data,$/;"	f	file:
wpa_config_write_str	config.c	/^static char * wpa_config_write_str(const struct parse_data *data,$/;"	f	file:
wpa_config_write_string	config.c	/^static char * wpa_config_write_string(const u8 *value, size_t len)$/;"	f	file:
wpa_config_write_string_ascii	config.c	/^static char * wpa_config_write_string_ascii(const u8 *value, size_t len)$/;"	f	file:
wpa_config_write_string_hex	config.c	/^static char * wpa_config_write_string_hex(const u8 *value, size_t len)$/;"	f	file:
wpa_config_write_wep_key	config.c	/^static char * wpa_config_write_wep_key(struct wpa_ssid *ssid, int idx)$/;"	f	file:
wpa_config_write_wep_key0	config.c	/^static char * wpa_config_write_wep_key0(const struct parse_data *data,$/;"	f	file:
wpa_config_write_wep_key1	config.c	/^static char * wpa_config_write_wep_key1(const struct parse_data *data,$/;"	f	file:
wpa_config_write_wep_key2	config.c	/^static char * wpa_config_write_wep_key2(const struct parse_data *data,$/;"	f	file:
wpa_config_write_wep_key3	config.c	/^static char * wpa_config_write_wep_key3(const struct parse_data *data,$/;"	f	file:
wpa_connect_work	wpa_supplicant_i.h	/^struct wpa_connect_work {$/;"	s
wpa_cred	config.h	/^struct wpa_cred {$/;"	s
wpa_ctrl_command	hostapd_cli.c	/^static inline int wpa_ctrl_command(struct wpa_ctrl *ctrl, char *cmd)$/;"	f	file:
wpa_ctrl_command	wpa_cli.c	/^static int wpa_ctrl_command(struct wpa_ctrl *ctrl, char *cmd)$/;"	f	file:
wpa_ctrl_command	wpa_not_disp.c	/^static int wpa_ctrl_command(struct wpa_ctrl *ctrl, char *cmd)$/;"	f	file:
wpa_ctrl_command_p2p_peer	wpa_cli.c	/^static int wpa_ctrl_command_p2p_peer(struct wpa_ctrl *ctrl, char *cmd,$/;"	f	file:
wpa_ctrl_command_sta	hostapd_cli.c	/^static int wpa_ctrl_command_sta(struct wpa_ctrl *ctrl, char *cmd,$/;"	f	file:
wpa_ctrl_command_sta	wpa_cli.c	/^static int wpa_ctrl_command_sta(struct wpa_ctrl *ctrl, char *cmd,$/;"	f	file:
wpa_ctrl_dst	ctrl_iface_named_pipe.c	/^struct wpa_ctrl_dst {$/;"	s	file:
wpa_ctrl_dst	ctrl_iface_udp.c	/^struct wpa_ctrl_dst {$/;"	s	file:
wpa_ctrl_dst	ctrl_iface_unix.c	/^struct wpa_ctrl_dst {$/;"	s	file:
wpa_dbus_argument	dbus/dbus_new_helpers.h	/^struct wpa_dbus_argument {$/;"	s
wpa_dbus_ctrl_iface_init	dbus/dbus_new_helpers.c	/^int wpa_dbus_ctrl_iface_init(struct wpas_dbus_priv *iface,$/;"	f
wpa_dbus_dict_append_bool	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_bool(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_byte	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_byte(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_byte_array	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_byte_array(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_double	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_double(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_int16	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_int16(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_int32	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_int32(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_int64	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_int64(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_object_path	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_object_path(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_string	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_string(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_string_array	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_string_array(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_uint16	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_uint16(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_uint32	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_uint32(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_uint64	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_uint64(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_append_wpabuf_array	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_append_wpabuf_array(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_begin_array	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_begin_array(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_begin_string_array	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_begin_string_array(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_bin_array_add_element	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_bin_array_add_element(DBusMessageIter *iter_array,$/;"	f
wpa_dbus_dict_close_write	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_close_write(DBusMessageIter *iter,$/;"	f
wpa_dbus_dict_end_array	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_end_array(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_end_string_array	dbus/dbus_dict_helpers.h	/^wpa_dbus_dict_end_string_array(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_entry	dbus/dbus_dict_helpers.h	/^struct wpa_dbus_dict_entry {$/;"	s
wpa_dbus_dict_entry_clear	dbus/dbus_dict_helpers.c	/^void wpa_dbus_dict_entry_clear(struct wpa_dbus_dict_entry *entry)$/;"	f
wpa_dbus_dict_get_entry	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_get_entry(DBusMessageIter *iter_dict,$/;"	f
wpa_dbus_dict_has_dict_entry	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_has_dict_entry(DBusMessageIter *iter_dict)$/;"	f
wpa_dbus_dict_open_read	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_open_read(DBusMessageIter *iter,$/;"	f
wpa_dbus_dict_open_write	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_open_write(DBusMessageIter *iter,$/;"	f
wpa_dbus_dict_string_array_add_element	dbus/dbus_dict_helpers.c	/^dbus_bool_t wpa_dbus_dict_string_array_add_element(DBusMessageIter *iter_array,$/;"	f
wpa_dbus_flush_all_changed_properties	dbus/dbus_new_helpers.c	/^void wpa_dbus_flush_all_changed_properties(DBusConnection *con)$/;"	f
wpa_dbus_flush_object_changed_properties	dbus/dbus_new_helpers.c	/^void wpa_dbus_flush_object_changed_properties(DBusConnection *con,$/;"	f
wpa_dbus_free	dbus/dbus_new.c	/^static void wpa_dbus_free(void *ptr)$/;"	f	file:
wpa_dbus_get_object_properties	dbus/dbus_new_helpers.c	/^dbus_bool_t wpa_dbus_get_object_properties(struct wpas_dbus_priv *iface,$/;"	f
wpa_dbus_introspect	dbus/dbus_new_introspect.c	/^DBusMessage * wpa_dbus_introspect(DBusMessage *message,$/;"	f
wpa_dbus_mark_property_changed	dbus/dbus_new_helpers.c	/^void wpa_dbus_mark_property_changed(struct wpas_dbus_priv *iface,$/;"	f
wpa_dbus_method_desc	dbus/dbus_new_helpers.h	/^struct wpa_dbus_method_desc {$/;"	s
wpa_dbus_object_desc	dbus/dbus_new_helpers.h	/^struct wpa_dbus_object_desc {$/;"	s
wpa_dbus_p2p_check_enabled	dbus/dbus_new_handlers_p2p.c	/^static dbus_bool_t wpa_dbus_p2p_check_enabled(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_dbus_property_desc	dbus/dbus_new_helpers.h	/^struct wpa_dbus_property_desc {$/;"	s
wpa_dbus_register_object_per_iface	dbus/dbus_new_helpers.c	/^int wpa_dbus_register_object_per_iface(struct wpas_dbus_priv *ctrl_iface,$/;"	f
wpa_dbus_signal_desc	dbus/dbus_new_helpers.h	/^struct wpa_dbus_signal_desc {$/;"	s
wpa_dbus_type_as_string	dbus/dbus_dict_helpers.c	/^const char * wpa_dbus_type_as_string(const int type)$/;"	f
wpa_dbus_unregister_object_per_iface	dbus/dbus_new_helpers.c	/^int wpa_dbus_unregister_object_per_iface($/;"	f
wpa_debug_file_path	wpa_supplicant_i.h	/^	const char *wpa_debug_file_path;$/;"	m	struct:wpa_params
wpa_debug_level	wpa_supplicant_i.h	/^	int wpa_debug_level;$/;"	m	struct:wpa_params
wpa_debug_show_keys	wpa_supplicant_i.h	/^	int wpa_debug_show_keys;$/;"	m	struct:wpa_params
wpa_debug_syslog	wpa_supplicant_i.h	/^	int wpa_debug_syslog;$/;"	m	struct:wpa_params
wpa_debug_timestamp	wpa_supplicant_i.h	/^	int wpa_debug_timestamp;$/;"	m	struct:wpa_params
wpa_debug_tracing	wpa_supplicant_i.h	/^	int wpa_debug_tracing;$/;"	m	struct:wpa_params
wpa_disable_max_amsdu	wpa_supplicant.c	/^static int wpa_disable_max_amsdu(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_driver_get_radio_name	driver_i.h	/^wpa_driver_get_radio_name(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drivers	eapol_test.c	/^struct wpa_driver_ops *wpa_drivers[] = { NULL };$/;"	v	typeref:struct:wpa_driver_ops
wpa_drivers	preauth_test.c	/^struct wpa_driver_ops *wpa_drivers[] = { NULL };$/;"	v	typeref:struct:wpa_driver_ops
wpa_drv_add_pmkid	driver_i.h	/^static inline int wpa_drv_add_pmkid(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_add_ts	driver_i.h	/^static inline int wpa_drv_add_ts(struct wpa_supplicant *wpa_s, u8 tsid,$/;"	f
wpa_drv_ampdu	driver_i.h	/^static inline int wpa_drv_ampdu(struct wpa_supplicant *wpa_s, int ampdu)$/;"	f
wpa_drv_associate	driver_i.h	/^static inline int wpa_drv_associate(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_authenticate	driver_i.h	/^static inline int wpa_drv_authenticate(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_cancel_remain_on_channel	driver_i.h	/^static inline int wpa_drv_cancel_remain_on_channel($/;"	f
wpa_drv_create_receive_sa	driver_i.h	/^static inline int wpa_drv_create_receive_sa(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_create_receive_sc	driver_i.h	/^wpa_drv_create_receive_sc(struct wpa_supplicant *wpa_s, u32 channel,$/;"	f
wpa_drv_create_transmit_sa	driver_i.h	/^static inline int wpa_drv_create_transmit_sa(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_create_transmit_sc	driver_i.h	/^wpa_drv_create_transmit_sc(struct wpa_supplicant *wpa_s, u32 channel,$/;"	f
wpa_drv_deauthenticate	driver_i.h	/^static inline int wpa_drv_deauthenticate(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_deinit	driver_i.h	/^static inline void wpa_drv_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_deinit_ap	driver_i.h	/^static inline int wpa_drv_deinit_ap(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_deinit_p2p_cli	driver_i.h	/^static inline int wpa_drv_deinit_p2p_cli(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_del_ts	driver_i.h	/^static inline int wpa_drv_del_ts(struct wpa_supplicant *wpa_s, u8 tid,$/;"	f
wpa_drv_delete_receive_sc	driver_i.h	/^static inline int wpa_drv_delete_receive_sc(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_delete_transmit_sc	driver_i.h	/^static inline int wpa_drv_delete_transmit_sc(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_disable_receive_sa	driver_i.h	/^static inline int wpa_drv_disable_receive_sa(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_disable_transmit_sa	driver_i.h	/^static inline int wpa_drv_disable_transmit_sa(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_driver_cmd	driver_i.h	/^static inline int wpa_drv_driver_cmd(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_enable_controlled_port	driver_i.h	/^static inline int wpa_drv_enable_controlled_port(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_enable_protect_frames	driver_i.h	/^static inline int wpa_drv_enable_protect_frames(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_enable_receive_sa	driver_i.h	/^static inline int wpa_drv_enable_receive_sa(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_enable_transmit_sa	driver_i.h	/^static inline int wpa_drv_enable_transmit_sa(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_flush_pmkid	driver_i.h	/^static inline int wpa_drv_flush_pmkid(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_get_available_receive_sc	driver_i.h	/^static inline int wpa_drv_get_available_receive_sc(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_get_available_transmit_sc	driver_i.h	/^wpa_drv_get_available_transmit_sc(struct wpa_supplicant *wpa_s, u32 *channel)$/;"	f
wpa_drv_get_bssid	driver_i.h	/^static inline int wpa_drv_get_bssid(struct wpa_supplicant *wpa_s, u8 *bssid)$/;"	f
wpa_drv_get_capa	driver_i.h	/^static inline int wpa_drv_get_capa(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_get_hw_feature_data	driver_i.h	/^wpa_drv_get_hw_feature_data(struct wpa_supplicant *wpa_s, u16 *num_modes,$/;"	f
wpa_drv_get_ifname	driver_i.h	/^static inline const char * wpa_drv_get_ifname(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_get_mac_addr	driver_i.h	/^static inline const u8 * wpa_drv_get_mac_addr(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_get_noa	driver_i.h	/^static inline int wpa_drv_get_noa(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_get_receive_lowest_pn	driver_i.h	/^static inline int wpa_drv_get_receive_lowest_pn(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_get_scan_results2	driver_i.h	/^static inline struct wpa_scan_results * wpa_drv_get_scan_results2($/;"	f
wpa_drv_get_ssid	driver_i.h	/^static inline int wpa_drv_get_ssid(struct wpa_supplicant *wpa_s, u8 *ssid)$/;"	f
wpa_drv_get_transmit_next_pn	driver_i.h	/^static inline int wpa_drv_get_transmit_next_pn(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_hapd_send_eapol	driver_i.h	/^static inline int wpa_drv_hapd_send_eapol(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_if_add	driver_i.h	/^static inline int wpa_drv_if_add(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_if_remove	driver_i.h	/^static inline int wpa_drv_if_remove(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_init	driver_i.h	/^static inline void * wpa_drv_init(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_init_mesh	driver_i.h	/^static inline int wpa_drv_init_mesh(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_join_mesh	driver_i.h	/^static inline int wpa_drv_join_mesh(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_leave_mesh	driver_i.h	/^static inline int wpa_drv_leave_mesh(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_macsec_deinit	driver_i.h	/^static inline int wpa_drv_macsec_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_macsec_init	driver_i.h	/^static inline int wpa_drv_macsec_init(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_mlme_setprotection	driver_i.h	/^static inline int wpa_drv_mlme_setprotection(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_pktcnt_poll	driver_i.h	/^static inline int wpa_drv_pktcnt_poll(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_poll	driver_i.h	/^static inline void wpa_drv_poll(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_probe_req_report	driver_i.h	/^static inline int wpa_drv_probe_req_report(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_radio_disable	driver_i.h	/^static inline int wpa_drv_radio_disable(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_remain_on_channel	driver_i.h	/^static inline int wpa_drv_remain_on_channel(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_remove_pmkid	driver_i.h	/^static inline int wpa_drv_remove_pmkid(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_resume	driver_i.h	/^static inline void wpa_drv_resume(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_roaming	driver_i.h	/^static inline int wpa_drv_roaming(struct wpa_supplicant *wpa_s, int allowed,$/;"	f
wpa_drv_scan	driver_i.h	/^static inline int wpa_drv_scan(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_sched_scan	driver_i.h	/^static inline int wpa_drv_sched_scan(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_send_action	driver_i.h	/^static inline int wpa_drv_send_action(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_send_action_cancel_wait	driver_i.h	/^static inline void wpa_drv_send_action_cancel_wait(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_send_mlme	driver_i.h	/^static inline int wpa_drv_send_mlme(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_send_tdls_mgmt	driver_i.h	/^static inline int wpa_drv_send_tdls_mgmt(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_ap	driver_i.h	/^static inline int wpa_drv_set_ap(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_ap_wps_ie	driver_i.h	/^static inline int wpa_drv_set_ap_wps_ie(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_countermeasures	driver_i.h	/^static inline int wpa_drv_set_countermeasures(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_country	driver_i.h	/^static inline int wpa_drv_set_country(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_current_cipher_suite	driver_i.h	/^static inline int wpa_drv_set_current_cipher_suite(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_freq	driver_i.h	/^static inline int wpa_drv_set_freq(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_key	driver_i.h	/^static inline int wpa_drv_set_key(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_mac_addr	driver_i.h	/^static inline int wpa_drv_set_mac_addr(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_operstate	driver_i.h	/^static inline int wpa_drv_set_operstate(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_p2p_powersave	driver_i.h	/^static inline int wpa_drv_set_p2p_powersave(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_param	driver_i.h	/^static inline int wpa_drv_set_param(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_qos_map	driver_i.h	/^static inline int wpa_drv_set_qos_map(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_rekey_info	driver_i.h	/^static inline void wpa_drv_set_rekey_info(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_replay_protect	driver_i.h	/^static inline int wpa_drv_set_replay_protect(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_supp_port	driver_i.h	/^static inline int wpa_drv_set_supp_port(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_set_transmit_next_pn	driver_i.h	/^static inline int wpa_drv_set_transmit_next_pn(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_shared_freq	driver_i.h	/^static inline int wpa_drv_shared_freq(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_signal_monitor	driver_i.h	/^static inline int wpa_drv_signal_monitor(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_signal_poll	driver_i.h	/^static inline int wpa_drv_signal_poll(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_sta_add	driver_i.h	/^static inline int wpa_drv_sta_add(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_sta_deauth	driver_i.h	/^static inline int wpa_drv_sta_deauth(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_sta_remove	driver_i.h	/^static inline int wpa_drv_sta_remove(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_sta_set_flags	driver_i.h	/^static inline int wpa_drv_sta_set_flags(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_status	driver_i.h	/^static inline int wpa_drv_status(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_stop_sched_scan	driver_i.h	/^static inline int wpa_drv_stop_sched_scan(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_suspend	driver_i.h	/^static inline void wpa_drv_suspend(struct wpa_supplicant *wpa_s)$/;"	f
wpa_drv_switch_channel	driver_i.h	/^static inline int wpa_drv_switch_channel(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_tdls_disable_channel_switch	driver_i.h	/^wpa_drv_tdls_disable_channel_switch(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_tdls_enable_channel_switch	driver_i.h	/^static inline int wpa_drv_tdls_enable_channel_switch($/;"	f
wpa_drv_tdls_oper	driver_i.h	/^static inline int wpa_drv_tdls_oper(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_update_ft_ies	driver_i.h	/^static inline int wpa_drv_update_ft_ies(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_vendor_cmd	driver_i.h	/^static inline int wpa_drv_vendor_cmd(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_wnm_oper	driver_i.h	/^static inline int wpa_drv_wnm_oper(struct wpa_supplicant *wpa_s,$/;"	f
wpa_drv_wowlan	driver_i.h	/^static inline int wpa_drv_wowlan(struct wpa_supplicant *wpa_s,$/;"	f
wpa_eapol_set_wep_key	wpas_glue.c	/^static int wpa_eapol_set_wep_key(void *ctx, int unicast, int keyidx,$/;"	f	file:
wpa_ether_send	preauth_test.c	/^static int wpa_ether_send(void *wpa_s, const u8 *dest, u16 proto,$/;"	f	file:
wpa_ether_send	wpas_glue.c	/^static int wpa_ether_send(struct wpa_supplicant *wpa_s, const u8 *dest,$/;"	f	file:
wpa_external_work	wpa_supplicant_i.h	/^struct wpa_external_work {$/;"	s
wpa_find_assoc_pmkid	events.c	/^static void wpa_find_assoc_pmkid(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_free_iface_info	ctrl_iface.c	/^static void wpa_free_iface_info(struct wpa_interface_info *iface)$/;"	f	file:
wpa_get_beacon_ie	wpas_glue.c	/^static int wpa_get_beacon_ie(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_global	wpa_supplicant_i.h	/^struct wpa_global {$/;"	s
wpa_global_config_parse_bin	config.c	/^static int wpa_global_config_parse_bin(const struct global_parse_data *data,$/;"	f	file:
wpa_global_config_parse_int	config.c	/^static int wpa_global_config_parse_int(const struct global_parse_data *data,$/;"	f	file:
wpa_global_config_parse_ipv4	config.c	/^static int wpa_global_config_parse_ipv4(const struct global_parse_data *data,$/;"	f	file:
wpa_global_config_parse_str	config.c	/^static int wpa_global_config_parse_str(const struct global_parse_data *data,$/;"	f	file:
wpa_global_dst	ctrl_iface_named_pipe.c	/^struct wpa_global_dst {$/;"	s	file:
wpa_init_conf	eapol_test.c	/^static void wpa_init_conf(struct eapol_test_data *e,$/;"	f	file:
wpa_init_conf	preauth_test.c	/^static void wpa_init_conf(struct wpa_supplicant *wpa_s, const char *ifname)$/;"	f	file:
wpa_interface	wpa_supplicant_i.h	/^struct wpa_interface {$/;"	s
wpa_list_cmd_list	wpa_cli.c	/^static char ** wpa_list_cmd_list(void)$/;"	f	file:
wpa_mesh_new_mesh_peer	mesh_mpm.c	/^void wpa_mesh_new_mesh_peer(struct wpa_supplicant *wpa_s, const u8 *addr,$/;"	f
wpa_mesh_notify_peer	mesh.c	/^void wpa_mesh_notify_peer(struct wpa_supplicant *wpa_s, const u8 *addr,$/;"	f
wpa_mesh_notify_peer	mesh.h	/^static inline void wpa_mesh_notify_peer(struct wpa_supplicant *wpa_s,$/;"	f
wpa_mesh_set_plink_state	mesh_mpm.c	/^void wpa_mesh_set_plink_state(struct wpa_supplicant *wpa_s,$/;"	f
wpa_not_cmd_handler	wpa_not_disp.c	/^static void wpa_not_cmd_handler(int argc, char *argv[])$/;"	f	file:
wpa_not_cmd_prob_req	wpa_not_disp.c	/^static int wpa_not_cmd_prob_req(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:
wpa_not_deinit	wpa_not_disp.c	/^int wpa_not_deinit()$/;"	f
wpa_not_init	wpa_not_disp.c	/^int wpa_not_init(char *msg)$/;"	f
wpa_not_process_command	wpa_not_disp.c	/^int wpa_not_process_command(char *msg)$/;"	f
wpa_obss_scan_freqs_list	sme.c	/^static void wpa_obss_scan_freqs_list(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_params	wpa_supplicant_i.h	/^struct wpa_params {$/;"	s
wpa_priv_cmd_associate	wpa_priv.c	/^static void wpa_priv_cmd_associate(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_get_bssid	wpa_priv.c	/^static void wpa_priv_cmd_get_bssid(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_get_capa	wpa_priv.c	/^static void wpa_priv_cmd_get_capa(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_get_scan_results	wpa_priv.c	/^static void wpa_priv_cmd_get_scan_results(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_get_ssid	wpa_priv.c	/^static void wpa_priv_cmd_get_ssid(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_l2_notify_auth_start	wpa_priv.c	/^static void wpa_priv_cmd_l2_notify_auth_start(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_l2_register	wpa_priv.c	/^static void wpa_priv_cmd_l2_register(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_l2_send	wpa_priv.c	/^static void wpa_priv_cmd_l2_send(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_l2_unregister	wpa_priv.c	/^static void wpa_priv_cmd_l2_unregister(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_register	wpa_priv.c	/^static void wpa_priv_cmd_register(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_scan	wpa_priv.c	/^static void wpa_priv_cmd_scan(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_set_country	wpa_priv.c	/^static void wpa_priv_cmd_set_country(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_set_key	wpa_priv.c	/^static void wpa_priv_cmd_set_key(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_cmd_unregister	wpa_priv.c	/^static void wpa_priv_cmd_unregister(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_fd_workaround	wpa_priv.c	/^static void wpa_priv_fd_workaround(void)$/;"	f	file:
wpa_priv_get_scan_results2	wpa_priv.c	/^static void wpa_priv_get_scan_results2(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_interface	wpa_priv.c	/^struct wpa_priv_interface {$/;"	s	file:
wpa_priv_interface_deinit	wpa_priv.c	/^static void wpa_priv_interface_deinit(struct wpa_priv_interface *iface)$/;"	f	file:
wpa_priv_interface_init	wpa_priv.c	/^wpa_priv_interface_init(const char *dir, const char *params)$/;"	f	file:
wpa_priv_l2_rx	wpa_priv.c	/^static void wpa_priv_l2_rx(void *ctx, const u8 *src_addr, const u8 *buf,$/;"	f	file:
wpa_priv_receive	wpa_priv.c	/^static void wpa_priv_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:
wpa_priv_send_assoc	wpa_priv.c	/^static void wpa_priv_send_assoc(struct wpa_priv_interface *iface, int event,$/;"	f	file:
wpa_priv_send_event	wpa_priv.c	/^static int wpa_priv_send_event(struct wpa_priv_interface *iface, int event,$/;"	f	file:
wpa_priv_send_ft_response	wpa_priv.c	/^static void wpa_priv_send_ft_response(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_send_interface_status	wpa_priv.c	/^static void wpa_priv_send_interface_status(struct wpa_priv_interface *iface,$/;"	f	file:
wpa_priv_terminate	wpa_priv.c	/^static void wpa_priv_terminate(int sig, void *signal_ctx)$/;"	f	file:
wpa_proto	wpa_supplicant_i.h	/^	int wpa_proto;$/;"	m	struct:wpa_supplicant
wpa_ptk_rekey	config_ssid.h	/^	int wpa_ptk_rekey;$/;"	m	struct:wpa_ssid
wpa_radio	wpa_supplicant_i.h	/^struct wpa_radio {$/;"	s
wpa_radio_work	wpa_supplicant_i.h	/^struct wpa_radio_work {$/;"	s
wpa_request	hostapd_cli.c	/^static void wpa_request(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_request	wpa_cli.c	/^static int wpa_request(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:
wpa_s	action_handler.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:action_handle	typeref:struct:action_handle::wpa_supplicant	file:
wpa_s	autoscan_exponential.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:autoscan_exponential_data	typeref:struct:autoscan_exponential_data::wpa_supplicant	file:
wpa_s	bgscan_learn.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:bgscan_learn_data	typeref:struct:bgscan_learn_data::wpa_supplicant	file:
wpa_s	bgscan_simple.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:bgscan_simple_data	typeref:struct:bgscan_simple_data::wpa_supplicant	file:
wpa_s	ctrl_iface_named_pipe.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:ctrl_iface_priv	typeref:struct:ctrl_iface_priv::wpa_supplicant	file:
wpa_s	ctrl_iface_udp.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:ctrl_iface_priv	typeref:struct:ctrl_iface_priv::wpa_supplicant	file:
wpa_s	ctrl_iface_unix.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:ctrl_iface_priv	typeref:struct:ctrl_iface_priv::wpa_supplicant	file:
wpa_s	dbus/dbus_new.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:group_changed_data	typeref:struct:group_changed_data::wpa_supplicant	file:
wpa_s	dbus/dbus_new_handlers.h	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:bss_handler_args	typeref:struct:bss_handler_args::wpa_supplicant
wpa_s	dbus/dbus_new_handlers.h	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:network_handler_args	typeref:struct:network_handler_args::wpa_supplicant
wpa_s	dbus/dbus_new_handlers_p2p.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:peer_group_data	typeref:struct:peer_group_data::wpa_supplicant	file:
wpa_s	dbus/dbus_new_handlers_p2p.h	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:peer_handler_args	typeref:struct:peer_handler_args::wpa_supplicant
wpa_s	eapol_test.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:eapol_test_data	typeref:struct:eapol_test_data::wpa_supplicant	file:
wpa_s	gas_query.c	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:gas_query	typeref:struct:gas_query::wpa_supplicant	file:
wpa_s	ibss_rsn.h	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:ibss_rsn	typeref:struct:ibss_rsn::wpa_supplicant
wpa_s	mesh_rsn.h	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:mesh_rsn	typeref:struct:mesh_rsn::wpa_supplicant
wpa_s	wpa_supplicant_i.h	/^	struct wpa_supplicant *wpa_s;$/;"	m	struct:wpa_radio_work	typeref:struct:wpa_radio_work::wpa_supplicant
wpa_s_not_iface_process	action_handler.c	/^static int wpa_s_not_iface_process(struct wpa_supplicant *wpa_s, struct action_handle *act,$/;"	f	file:
wpa_s_not_iface_recv	action_handler.c	/^static void wpa_s_not_iface_recv(int sock, void *eloop_ctx, void *sock_ctx){$/;"	f	file:
wpa_scan_clone_params	scan.c	/^wpa_scan_clone_params(const struct wpa_driver_scan_params *src)$/;"	f
wpa_scan_free_params	scan.c	/^void wpa_scan_free_params(struct wpa_driver_scan_params *params)$/;"	f
wpa_scan_get_ie	scan.c	/^const u8 * wpa_scan_get_ie(const struct wpa_scan_res *res, u8 ie)$/;"	f
wpa_scan_get_max_rate	scan.c	/^static int wpa_scan_get_max_rate(const struct wpa_scan_res *res)$/;"	f	file:
wpa_scan_get_vendor_ie	scan.c	/^const u8 * wpa_scan_get_vendor_ie(const struct wpa_scan_res *res,$/;"	f
wpa_scan_get_vendor_ie_beacon	scan.c	/^const u8 * wpa_scan_get_vendor_ie_beacon(const struct wpa_scan_res *res,$/;"	f
wpa_scan_get_vendor_ie_multi	scan.c	/^struct wpabuf * wpa_scan_get_vendor_ie_multi(const struct wpa_scan_res *res,$/;"	f
wpa_scan_res_match	events.c	/^static struct wpa_ssid * wpa_scan_res_match(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_scan_result_compar	scan.c	/^static int wpa_scan_result_compar(const void *a, const void *b)$/;"	f	file:
wpa_scan_result_wps_compar	scan.c	/^static int wpa_scan_result_wps_compar(const void *a, const void *b)$/;"	f	file:
wpa_set_ampdu_density	wpa_supplicant.c	/^static int wpa_set_ampdu_density(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_set_ampdu_factor	wpa_supplicant.c	/^static int wpa_set_ampdu_factor(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_set_disable_ht40	wpa_supplicant.c	/^static int wpa_set_disable_ht40(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_set_disable_ldpc	wpa_supplicant.c	/^static int wpa_set_disable_ldpc(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_set_disable_sgi	wpa_supplicant.c	/^static int wpa_set_disable_sgi(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_set_htcap_mcs	wpa_supplicant.c	/^static int wpa_set_htcap_mcs(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_set_scan_ssids	scan.c	/^static void wpa_set_scan_ssids(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_set_wep_keys	wpa_supplicant.c	/^int wpa_set_wep_keys(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid)$/;"	f
wpa_setband_scan_freqs	scan.c	/^static void wpa_setband_scan_freqs(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_setband_scan_freqs_list	scan.c	/^static void wpa_setband_scan_freqs_list(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_ssid	config_ssid.h	/^struct wpa_ssid {$/;"	s
wpa_ssid_value	wpa_supplicant_i.h	/^struct wpa_ssid_value {$/;"	s
wpa_state	wpa_supplicant_i.h	/^	enum wpa_states wpa_state;$/;"	m	struct:wpa_supplicant	typeref:enum:wpa_supplicant::wpa_states
wpa_supplicant	wpa_supplicant_i.h	/^struct wpa_supplicant {$/;"	s
wpa_supplicant_aborted_cached	wpas_glue.c	/^static void wpa_supplicant_aborted_cached(void *ctx)$/;"	f	file:
wpa_supplicant_add_iface	wpa_supplicant.c	/^struct wpa_supplicant * wpa_supplicant_add_iface(struct wpa_global *global,$/;"	f
wpa_supplicant_add_pmkid	preauth_test.c	/^static int wpa_supplicant_add_pmkid(void *wpa_s,$/;"	f	file:
wpa_supplicant_add_pmkid	wpas_glue.c	/^static int wpa_supplicant_add_pmkid(void *wpa_s,$/;"	f	file:
wpa_supplicant_alloc	wpa_supplicant.c	/^wpa_supplicant_alloc(struct wpa_supplicant *parent)$/;"	f	file:
wpa_supplicant_ap_deinit	ap.c	/^void wpa_supplicant_ap_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_ap_mac_addr_filter	ap.c	/^int wpa_supplicant_ap_mac_addr_filter(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_ap_pwd_auth_fail	ap.c	/^void wpa_supplicant_ap_pwd_auth_fail(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_ap_rx_eapol	ap.c	/^void wpa_supplicant_ap_rx_eapol(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_ap_update_beacon	ap.c	/^int wpa_supplicant_ap_update_beacon(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_ap_wps_cancel	ap.c	/^int wpa_supplicant_ap_wps_cancel(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_ap_wps_pbc	ap.c	/^int wpa_supplicant_ap_wps_pbc(struct wpa_supplicant *wpa_s, const u8 *bssid,$/;"	f
wpa_supplicant_ap_wps_pin	ap.c	/^int wpa_supplicant_ap_wps_pin(struct wpa_supplicant *wpa_s, const u8 *bssid,$/;"	f
wpa_supplicant_apply_ht_overrides	wpa_supplicant.c	/^void wpa_supplicant_apply_ht_overrides($/;"	f
wpa_supplicant_apply_vht_overrides	wpa_supplicant.c	/^void wpa_supplicant_apply_vht_overrides($/;"	f
wpa_supplicant_assoc_try	scan.c	/^static void wpa_supplicant_assoc_try(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_assoc_update_ie	events.c	/^static int wpa_supplicant_assoc_update_ie(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_associate	wpa_supplicant.c	/^void wpa_supplicant_associate(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_build_filter_ssids	scan.c	/^wpa_supplicant_build_filter_ssids(struct wpa_config *conf, size_t *num_ssids)$/;"	f	file:
wpa_supplicant_cancel_auth_timeout	wpa_supplicant.c	/^void wpa_supplicant_cancel_auth_timeout(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_cancel_delayed_sched_scan	scan.c	/^void wpa_supplicant_cancel_delayed_sched_scan(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_cancel_scan	scan.c	/^void wpa_supplicant_cancel_scan(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_cancel_sched_scan	scan.c	/^void wpa_supplicant_cancel_sched_scan(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_cert_cb	wpas_glue.c	/^static void wpa_supplicant_cert_cb(void *ctx, int depth, const char *subject,$/;"	f	file:
wpa_supplicant_cipher_txt	ctrl_iface.c	/^static char * wpa_supplicant_cipher_txt(char *pos, char *end, int cipher)$/;"	f	file:
wpa_supplicant_cleanup	wpa_supplicant.c	/^static void wpa_supplicant_cleanup(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_clear_connection	wpa_supplicant.c	/^static void wpa_supplicant_clear_connection(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_clear_status	wpa_supplicant.c	/^void wpa_supplicant_clear_status(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_conf_ap	ap.c	/^static int wpa_supplicant_conf_ap(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_conf_ap_ht	ap.c	/^void wpa_supplicant_conf_ap_ht(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_connect	events.c	/^int wpa_supplicant_connect(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_create_ap	ap.c	/^int wpa_supplicant_create_ap(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_ctrl_iface_add_cred	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_add_cred(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_add_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_add_network($/;"	f	file:
wpa_supplicant_ctrl_iface_ap_scan	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_ap_scan($/;"	f	file:
wpa_supplicant_ctrl_iface_attach	ctrl_iface_udp.c	/^static int wpa_supplicant_ctrl_iface_attach(struct ctrl_iface_priv *priv,$/;"	f	file:
wpa_supplicant_ctrl_iface_attach	ctrl_iface_unix.c	/^static int wpa_supplicant_ctrl_iface_attach(struct dl_list *ctrl_dst,$/;"	f	file:
wpa_supplicant_ctrl_iface_autoscan	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_autoscan(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_blacklist	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_blacklist(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_bss	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_bss(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_bss_expire_age	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_bss_expire_age($/;"	f	file:
wpa_supplicant_ctrl_iface_bss_expire_count	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_bss_expire_count($/;"	f	file:
wpa_supplicant_ctrl_iface_bss_flush	ctrl_iface.c	/^static void wpa_supplicant_ctrl_iface_bss_flush($/;"	f	file:
wpa_supplicant_ctrl_iface_bssid	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_bssid(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_ctrl_rsp	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_ctrl_rsp(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_ctrl_rsp_handle	wpa_supplicant.c	/^int wpa_supplicant_ctrl_iface_ctrl_rsp_handle(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_ctrl_iface_deinit	ctrl_iface.h	/^wpa_supplicant_ctrl_iface_deinit(struct ctrl_iface_priv *priv)$/;"	f
wpa_supplicant_ctrl_iface_deinit	ctrl_iface_named_pipe.c	/^void wpa_supplicant_ctrl_iface_deinit(struct ctrl_iface_priv *priv)$/;"	f
wpa_supplicant_ctrl_iface_deinit	ctrl_iface_udp.c	/^void wpa_supplicant_ctrl_iface_deinit(struct ctrl_iface_priv *priv)$/;"	f
wpa_supplicant_ctrl_iface_deinit	ctrl_iface_unix.c	/^void wpa_supplicant_ctrl_iface_deinit(struct ctrl_iface_priv *priv)$/;"	f
wpa_supplicant_ctrl_iface_detach	ctrl_iface_udp.c	/^static int wpa_supplicant_ctrl_iface_detach(struct ctrl_iface_priv *priv,$/;"	f	file:
wpa_supplicant_ctrl_iface_detach	ctrl_iface_unix.c	/^static int wpa_supplicant_ctrl_iface_detach(struct dl_list *ctrl_dst,$/;"	f	file:
wpa_supplicant_ctrl_iface_disable_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_disable_network($/;"	f	file:
wpa_supplicant_ctrl_iface_drop_sa	ctrl_iface.c	/^static void wpa_supplicant_ctrl_iface_drop_sa(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_ctrl_iface_dup_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_dup_network($/;"	f	file:
wpa_supplicant_ctrl_iface_enable_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_enable_network($/;"	f	file:
wpa_supplicant_ctrl_iface_flush	ctrl_iface.c	/^static void wpa_supplicant_ctrl_iface_flush(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_ctrl_iface_ft_ds	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_ft_ds($/;"	f	file:
wpa_supplicant_ctrl_iface_get	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_get(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_get_capability	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_get_capability($/;"	f	file:
wpa_supplicant_ctrl_iface_get_cookie	ctrl_iface_udp.c	/^wpa_supplicant_ctrl_iface_get_cookie(struct ctrl_iface_priv *priv,$/;"	f	file:
wpa_supplicant_ctrl_iface_get_cred	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_get_cred(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_get_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_get_network($/;"	f	file:
wpa_supplicant_ctrl_iface_ibss_rsn	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_ibss_rsn($/;"	f	file:
wpa_supplicant_ctrl_iface_init	ctrl_iface.h	/^wpa_supplicant_ctrl_iface_init(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_ctrl_iface_init	ctrl_iface_named_pipe.c	/^wpa_supplicant_ctrl_iface_init(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_ctrl_iface_init	ctrl_iface_udp.c	/^wpa_supplicant_ctrl_iface_init(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_ctrl_iface_init	ctrl_iface_unix.c	/^wpa_supplicant_ctrl_iface_init(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_ctrl_iface_level	ctrl_iface_udp.c	/^static int wpa_supplicant_ctrl_iface_level(struct ctrl_iface_priv *priv,$/;"	f	file:
wpa_supplicant_ctrl_iface_level	ctrl_iface_unix.c	/^static int wpa_supplicant_ctrl_iface_level(struct ctrl_iface_priv *priv,$/;"	f	file:
wpa_supplicant_ctrl_iface_list_creds	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_list_creds(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_list_networks	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_list_networks($/;"	f	file:
wpa_supplicant_ctrl_iface_log_level	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_log_level(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_mesh_group_add	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_mesh_group_add($/;"	f	file:
wpa_supplicant_ctrl_iface_mesh_group_remove	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_mesh_group_remove($/;"	f	file:
wpa_supplicant_ctrl_iface_mesh_interface_add	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_mesh_interface_add($/;"	f	file:
wpa_supplicant_ctrl_iface_msg_cb	ctrl_iface_named_pipe.c	/^static void wpa_supplicant_ctrl_iface_msg_cb(void *ctx, int level, int global,$/;"	f	file:
wpa_supplicant_ctrl_iface_msg_cb	ctrl_iface_udp.c	/^static void wpa_supplicant_ctrl_iface_msg_cb(void *ctx, int level, int global,$/;"	f	file:
wpa_supplicant_ctrl_iface_msg_cb	ctrl_iface_unix.c	/^static void wpa_supplicant_ctrl_iface_msg_cb(void *ctx, int level, int global,$/;"	f	file:
wpa_supplicant_ctrl_iface_path	ctrl_iface_unix.c	/^static char * wpa_supplicant_ctrl_iface_path(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_ctrl_iface_preauth	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_preauth(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_process	ctrl_iface.c	/^char * wpa_supplicant_ctrl_iface_process(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_ctrl_iface_receive	ctrl_iface_named_pipe.c	/^static void wpa_supplicant_ctrl_iface_receive(void *eloop_data, void *user_ctx)$/;"	f	file:
wpa_supplicant_ctrl_iface_receive	ctrl_iface_udp.c	/^static void wpa_supplicant_ctrl_iface_receive(int sock, void *eloop_ctx,$/;"	f	file:
wpa_supplicant_ctrl_iface_receive	ctrl_iface_unix.c	/^static void wpa_supplicant_ctrl_iface_receive(int sock, void *eloop_ctx,$/;"	f	file:
wpa_supplicant_ctrl_iface_remove_cred	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_remove_cred(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_remove_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_remove_network($/;"	f	file:
wpa_supplicant_ctrl_iface_roam	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_roam(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_rx	ctrl_iface_named_pipe.c	/^static void wpa_supplicant_ctrl_iface_rx(struct wpa_ctrl_dst *dst, size_t len)$/;"	f	file:
wpa_supplicant_ctrl_iface_save_config	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_save_config(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_ctrl_iface_scan_interval	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_scan_interval($/;"	f	file:
wpa_supplicant_ctrl_iface_scan_result	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_scan_result($/;"	f	file:
wpa_supplicant_ctrl_iface_scan_results	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_scan_results($/;"	f	file:
wpa_supplicant_ctrl_iface_select_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_select_network($/;"	f	file:
wpa_supplicant_ctrl_iface_send	ctrl_iface.h	/^wpa_supplicant_ctrl_iface_send(struct ctrl_iface_priv *priv, int level,$/;"	f
wpa_supplicant_ctrl_iface_send	ctrl_iface_named_pipe.c	/^static void wpa_supplicant_ctrl_iface_send(struct ctrl_iface_priv *priv,$/;"	f	file:
wpa_supplicant_ctrl_iface_send	ctrl_iface_udp.c	/^static void wpa_supplicant_ctrl_iface_send(struct ctrl_iface_priv *priv,$/;"	f	file:
wpa_supplicant_ctrl_iface_send	ctrl_iface_unix.c	/^static void wpa_supplicant_ctrl_iface_send(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_set	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_set(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_set_cred	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_set_cred(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_set_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_set_network($/;"	f	file:
wpa_supplicant_ctrl_iface_status	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_status(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_stkstart	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_stkstart($/;"	f	file:
wpa_supplicant_ctrl_iface_tdls_cancel_chan_switch	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_tdls_cancel_chan_switch($/;"	f	file:
wpa_supplicant_ctrl_iface_tdls_chan_switch	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_tdls_chan_switch($/;"	f	file:
wpa_supplicant_ctrl_iface_tdls_discover	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_tdls_discover($/;"	f	file:
wpa_supplicant_ctrl_iface_tdls_setup	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_tdls_setup($/;"	f	file:
wpa_supplicant_ctrl_iface_tdls_teardown	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_tdls_teardown($/;"	f	file:
wpa_supplicant_ctrl_iface_update_network	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_update_network($/;"	f	file:
wpa_supplicant_ctrl_iface_wait	ctrl_iface.h	/^wpa_supplicant_ctrl_iface_wait(struct ctrl_iface_priv *priv)$/;"	f
wpa_supplicant_ctrl_iface_wait	ctrl_iface_named_pipe.c	/^void wpa_supplicant_ctrl_iface_wait(struct ctrl_iface_priv *priv)$/;"	f
wpa_supplicant_ctrl_iface_wait	ctrl_iface_udp.c	/^void wpa_supplicant_ctrl_iface_wait(struct ctrl_iface_priv *priv)$/;"	f
wpa_supplicant_ctrl_iface_wait	ctrl_iface_unix.c	/^void wpa_supplicant_ctrl_iface_wait(struct ctrl_iface_priv *priv)$/;"	f
wpa_supplicant_ctrl_iface_wps_ap_pin	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_ap_pin(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_wps_check_pin	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_check_pin($/;"	f	file:
wpa_supplicant_ctrl_iface_wps_er_config	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_er_config($/;"	f	file:
wpa_supplicant_ctrl_iface_wps_er_learn	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_er_learn(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_wps_er_nfc_config_token	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_er_nfc_config_token($/;"	f	file:
wpa_supplicant_ctrl_iface_wps_er_pin	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_er_pin(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_wps_er_set_config	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_er_set_config($/;"	f	file:
wpa_supplicant_ctrl_iface_wps_nfc	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_nfc(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_wps_nfc_config_token	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_nfc_config_token($/;"	f	file:
wpa_supplicant_ctrl_iface_wps_nfc_tag_read	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_nfc_tag_read($/;"	f	file:
wpa_supplicant_ctrl_iface_wps_nfc_token	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_nfc_token($/;"	f	file:
wpa_supplicant_ctrl_iface_wps_pbc	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_pbc(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_wps_pin	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_pin(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_iface_wps_reg	ctrl_iface.c	/^static int wpa_supplicant_ctrl_iface_wps_reg(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_ctrl_req_from_string	wpas_glue.c	/^enum wpa_ctrl_req_type wpa_supplicant_ctrl_req_from_string(const char *field)$/;"	f
wpa_supplicant_ctrl_req_to_string	wpas_glue.c	/^const char * wpa_supplicant_ctrl_req_to_string(enum wpa_ctrl_req_type field,$/;"	f
wpa_supplicant_daemon	wpa_supplicant.c	/^static int wpa_supplicant_daemon(const char *pid_file)$/;"	f	file:
wpa_supplicant_dbus_ctrl_iface_init	dbus/dbus_old.c	/^int wpa_supplicant_dbus_ctrl_iface_init(struct wpas_dbus_priv *iface)$/;"	f
wpa_supplicant_dbus_notify_certification	dbus/dbus_old.c	/^void wpa_supplicant_dbus_notify_certification(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_dbus_notify_certification	dbus/dbus_old.h	/^wpa_supplicant_dbus_notify_certification(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_dbus_notify_scan_results	dbus/dbus_old.c	/^void wpa_supplicant_dbus_notify_scan_results(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_dbus_notify_scan_results	dbus/dbus_old.h	/^wpa_supplicant_dbus_notify_scan_results(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_dbus_notify_scanning	dbus/dbus_old.c	/^void wpa_supplicant_dbus_notify_scanning(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_dbus_notify_scanning	dbus/dbus_old.h	/^wpa_supplicant_dbus_notify_scanning(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_dbus_notify_state_change	dbus/dbus_old.c	/^void wpa_supplicant_dbus_notify_state_change(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_dbus_notify_state_change	dbus/dbus_old.h	/^wpa_supplicant_dbus_notify_state_change(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_dbus_notify_wps_cred	dbus/dbus_old.c	/^void wpa_supplicant_dbus_notify_wps_cred(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_dbus_notify_wps_cred	dbus/dbus_old.h	/^wpa_supplicant_dbus_notify_wps_cred(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_deauthenticate	wpa_supplicant.c	/^void wpa_supplicant_deauthenticate(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_deinit	wpa_supplicant.c	/^void wpa_supplicant_deinit(struct wpa_global *global)$/;"	f
wpa_supplicant_deinit_iface	wpa_supplicant.c	/^static void wpa_supplicant_deinit_iface(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_delayed_mic_error_report	events.c	/^void wpa_supplicant_delayed_mic_error_report(void *eloop_ctx, void *sock_ctx)$/;"	f
wpa_supplicant_delayed_sched_scan	scan.c	/^int wpa_supplicant_delayed_sched_scan(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_delayed_sched_scan_timeout	scan.c	/^wpa_supplicant_delayed_sched_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpa_supplicant_disable_network	wpa_supplicant.c	/^void wpa_supplicant_disable_network(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_driver_cmd	ctrl_iface.c	/^static int wpa_supplicant_driver_cmd(struct wpa_supplicant *wpa_s, char *cmd,$/;"	f	file:
wpa_supplicant_driver_init	wpa_supplicant.c	/^int wpa_supplicant_driver_init(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_dynamic_keys	events.c	/^static int wpa_supplicant_dynamic_keys(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_eap_param_needed	wpas_glue.c	/^static void wpa_supplicant_eap_param_needed(void *ctx,$/;"	f	file:
wpa_supplicant_eap_param_needed	wpas_glue.c	841;"	d	file:
wpa_supplicant_eap_proxy_cb	wpas_glue.c	/^static void wpa_supplicant_eap_proxy_cb(void *ctx)$/;"	f	file:
wpa_supplicant_eapol_cb	wpas_glue.c	/^static void wpa_supplicant_eapol_cb(struct eapol_sm *eapol,$/;"	f	file:
wpa_supplicant_eapol_send	wpas_glue.c	/^static int wpa_supplicant_eapol_send(void *ctx, int type, const u8 *buf,$/;"	f	file:
wpa_supplicant_enable_network	wpa_supplicant.c	/^void wpa_supplicant_enable_network(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_enable_one_network	wpa_supplicant.c	/^static void wpa_supplicant_enable_one_network(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_enabled_networks	scan.c	/^int wpa_supplicant_enabled_networks(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_event	events.c	/^void wpa_supplicant_event(void *ctx, enum wpa_event_type event,$/;"	f
wpa_supplicant_event	wpa_priv.c	/^void wpa_supplicant_event(void *ctx, enum wpa_event_type event,$/;"	f
wpa_supplicant_event_assoc	events.c	/^static void wpa_supplicant_event_assoc(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_assoc_auth	events.c	/^static void wpa_supplicant_event_assoc_auth(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_associnfo	events.c	/^static int wpa_supplicant_event_associnfo(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_disassoc	events.c	/^static void wpa_supplicant_event_disassoc(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_disassoc_finish	events.c	/^static void wpa_supplicant_event_disassoc_finish(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_ft_response	events.c	/^wpa_supplicant_event_ft_response(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_ibss_auth	events.c	/^static void wpa_supplicant_event_ibss_auth(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_ibss_rsn_start	events.c	/^static void wpa_supplicant_event_ibss_rsn_start(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_interface_status	events.c	/^wpa_supplicant_event_interface_status(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_michael_mic_failure	events.c	/^wpa_supplicant_event_michael_mic_failure(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_pmkid_candidate	events.c	/^static void wpa_supplicant_event_pmkid_candidate(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_scan_results	events.c	/^static int wpa_supplicant_event_scan_results(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_stkstart	events.c	/^wpa_supplicant_event_stkstart(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_tdls	events.c	/^static void wpa_supplicant_event_tdls(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_unprot_deauth	events.c	/^static void wpa_supplicant_event_unprot_deauth(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_unprot_disassoc	events.c	/^static void wpa_supplicant_event_unprot_disassoc(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_event_wnm	events.c	/^static void wpa_supplicant_event_wnm(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_extra_ies	scan.c	/^static struct wpabuf * wpa_supplicant_extra_ies(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_fast_associate	events.c	/^int wpa_supplicant_fast_associate(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_fd_workaround	main.c	/^static void wpa_supplicant_fd_workaround(int start)$/;"	f	file:
wpa_supplicant_filter_bssid_match	scan.c	/^int wpa_supplicant_filter_bssid_match(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_full_license1	wpa_supplicant.c	/^const char *wpa_supplicant_full_license1 =$/;"	v
wpa_supplicant_full_license2	wpa_supplicant.c	/^const char *wpa_supplicant_full_license2 =$/;"	v
wpa_supplicant_full_license3	wpa_supplicant.c	/^const char *wpa_supplicant_full_license3 =$/;"	v
wpa_supplicant_full_license4	wpa_supplicant.c	/^const char *wpa_supplicant_full_license4 =$/;"	v
wpa_supplicant_full_license5	wpa_supplicant.c	/^const char *wpa_supplicant_full_license5 =$/;"	v
wpa_supplicant_gen_assoc_event	scan.c	/^static void wpa_supplicant_gen_assoc_event(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_get_beacon_ie	preauth_test.c	/^static int wpa_supplicant_get_beacon_ie(void *wpa_s)$/;"	f	file:
wpa_supplicant_get_beacon_ie	wpas_glue.c	/^static int wpa_supplicant_get_beacon_ie(void *ctx)$/;"	f	file:
wpa_supplicant_get_bssid	preauth_test.c	/^static int wpa_supplicant_get_bssid(void *wpa_s, u8 *bssid)$/;"	f	file:
wpa_supplicant_get_bssid	wpas_glue.c	/^static int wpa_supplicant_get_bssid(void *ctx, u8 *bssid)$/;"	f	file:
wpa_supplicant_get_config_blob	preauth_test.c	/^wpa_supplicant_get_config_blob(void *ctx, const char *name)$/;"	f	file:
wpa_supplicant_get_config_blob	wpas_glue.c	/^wpa_supplicant_get_config_blob(void *ctx, const char *name)$/;"	f	file:
wpa_supplicant_get_eap_mode	wpa_supplicant.c	/^const char * wpa_supplicant_get_eap_mode(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_get_iface	wpa_supplicant.c	/^struct wpa_supplicant * wpa_supplicant_get_iface(struct wpa_global *global,$/;"	f
wpa_supplicant_get_iface_by_dbus_path	dbus/dbus_old.c	/^struct wpa_supplicant * wpa_supplicant_get_iface_by_dbus_path($/;"	f
wpa_supplicant_get_network_ctx	preauth_test.c	/^static void * wpa_supplicant_get_network_ctx(void *wpa_s)$/;"	f	file:
wpa_supplicant_get_network_ctx	wpas_glue.c	/^static void * wpa_supplicant_get_network_ctx(void *wpa_s)$/;"	f	file:
wpa_supplicant_get_new_bss	events.c	/^static struct wpa_bss * wpa_supplicant_get_new_bss($/;"	f	file:
wpa_supplicant_get_scan_results	scan.c	/^wpa_supplicant_get_scan_results(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_get_ssid	wpa_supplicant.c	/^struct wpa_ssid * wpa_supplicant_get_ssid(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_get_state	wpas_glue.c	/^static enum wpa_states wpa_supplicant_get_state(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_global_ctrl_iface_deinit	ctrl_iface.h	/^wpa_supplicant_global_ctrl_iface_deinit(struct ctrl_iface_global_priv *priv)$/;"	f
wpa_supplicant_global_ctrl_iface_deinit	ctrl_iface_named_pipe.c	/^wpa_supplicant_global_ctrl_iface_deinit(struct ctrl_iface_global_priv *priv)$/;"	f
wpa_supplicant_global_ctrl_iface_deinit	ctrl_iface_udp.c	/^wpa_supplicant_global_ctrl_iface_deinit(struct ctrl_iface_global_priv *priv)$/;"	f
wpa_supplicant_global_ctrl_iface_deinit	ctrl_iface_unix.c	/^wpa_supplicant_global_ctrl_iface_deinit(struct ctrl_iface_global_priv *priv)$/;"	f
wpa_supplicant_global_ctrl_iface_init	ctrl_iface.h	/^wpa_supplicant_global_ctrl_iface_init(struct wpa_global *global)$/;"	f
wpa_supplicant_global_ctrl_iface_init	ctrl_iface_named_pipe.c	/^wpa_supplicant_global_ctrl_iface_init(struct wpa_global *global)$/;"	f
wpa_supplicant_global_ctrl_iface_init	ctrl_iface_udp.c	/^wpa_supplicant_global_ctrl_iface_init(struct wpa_global *global)$/;"	f
wpa_supplicant_global_ctrl_iface_init	ctrl_iface_unix.c	/^wpa_supplicant_global_ctrl_iface_init(struct wpa_global *global)$/;"	f
wpa_supplicant_global_ctrl_iface_process	ctrl_iface.c	/^char * wpa_supplicant_global_ctrl_iface_process(struct wpa_global *global,$/;"	f
wpa_supplicant_global_ctrl_iface_receive	ctrl_iface_udp.c	/^static void wpa_supplicant_global_ctrl_iface_receive(int sock, void *eloop_ctx,$/;"	f	file:
wpa_supplicant_global_ctrl_iface_receive	ctrl_iface_unix.c	/^static void wpa_supplicant_global_ctrl_iface_receive(int sock, void *eloop_ctx,$/;"	f	file:
wpa_supplicant_global_get_cookie	ctrl_iface_udp.c	/^wpa_supplicant_global_get_cookie(struct ctrl_iface_global_priv *priv,$/;"	f	file:
wpa_supplicant_global_iface_add	ctrl_iface.c	/^static int wpa_supplicant_global_iface_add(struct wpa_global *global,$/;"	f	file:
wpa_supplicant_global_iface_interfaces	ctrl_iface.c	/^static int wpa_supplicant_global_iface_interfaces(struct wpa_global *global,$/;"	f	file:
wpa_supplicant_global_iface_list	ctrl_iface.c	/^static int wpa_supplicant_global_iface_list(struct wpa_global *global,$/;"	f	file:
wpa_supplicant_global_iface_receive	ctrl_iface_named_pipe.c	/^static void wpa_supplicant_global_iface_receive(void *eloop_data,$/;"	f	file:
wpa_supplicant_global_iface_remove	ctrl_iface.c	/^static int wpa_supplicant_global_iface_remove(struct wpa_global *global,$/;"	f	file:
wpa_supplicant_global_iface_rx	ctrl_iface_named_pipe.c	/^static void wpa_supplicant_global_iface_rx(struct wpa_global_dst *dst,$/;"	f	file:
wpa_supplicant_ie_txt	ctrl_iface.c	/^static char * wpa_supplicant_ie_txt(char *pos, char *end, const char *proto,$/;"	f	file:
wpa_supplicant_init	wpa_supplicant.c	/^struct wpa_global * wpa_supplicant_init(struct wpa_params *params)$/;"	f
wpa_supplicant_init_eapol	wpas_glue.c	/^int wpa_supplicant_init_eapol(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_init_iface	wpa_supplicant.c	/^static int wpa_supplicant_init_iface(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_init_wpa	wpas_glue.c	/^int wpa_supplicant_init_wpa(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_initiate_eapol	wpa_supplicant.c	/^void wpa_supplicant_initiate_eapol(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_join_mesh	mesh.c	/^int wpa_supplicant_join_mesh(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_key_mgmt_set_pmk	wpas_glue.c	/^static int wpa_supplicant_key_mgmt_set_pmk(void *ctx, const u8 *pmk,$/;"	f	file:
wpa_supplicant_leave_mesh	mesh.c	/^int wpa_supplicant_leave_mesh(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_license	wpa_supplicant.c	/^const char *wpa_supplicant_license =$/;"	v
wpa_supplicant_mark_authenticated	wpas_glue.c	/^static int wpa_supplicant_mark_authenticated(void *ctx, const u8 *target_ap)$/;"	f	file:
wpa_supplicant_mark_disassoc	events.c	/^void wpa_supplicant_mark_disassoc(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_match_privacy	events.c	/^static int wpa_supplicant_match_privacy(struct wpa_bss *bss,$/;"	f	file:
wpa_supplicant_mesh_add_scan_ie	mesh.c	/^void wpa_supplicant_mesh_add_scan_ie(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_mesh_add_scan_ie	mesh.h	/^static inline void wpa_supplicant_mesh_add_scan_ie(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_mesh_deinit	mesh.c	/^static void wpa_supplicant_mesh_deinit(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_mesh_iface_deinit	mesh.c	/^void wpa_supplicant_mesh_iface_deinit(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_mesh_init	mesh.c	/^static int wpa_supplicant_mesh_init(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_mlme_setprotection	preauth_test.c	/^static int wpa_supplicant_mlme_setprotection(void *wpa_s, const u8 *addr,$/;"	f	file:
wpa_supplicant_mlme_setprotection	wpas_glue.c	/^static int wpa_supplicant_mlme_setprotection(void *wpa_s, const u8 *addr,$/;"	f	file:
wpa_supplicant_msg_ifname_cb	wpa_supplicant.c	/^static const char * wpa_supplicant_msg_ifname_cb(void *ctx)$/;"	f	file:
wpa_supplicant_need_to_roam	events.c	/^static int wpa_supplicant_need_to_roam(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_notify_avoid_freq	events.c	/^static void wpa_supplicant_notify_avoid_freq(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_notify_eapol_done	wpas_glue.c	/^static void wpa_supplicant_notify_eapol_done(void *ctx)$/;"	f	file:
wpa_supplicant_notify_scanning	scan.c	/^void wpa_supplicant_notify_scanning(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_optimize_freqs	scan.c	/^static void wpa_supplicant_optimize_freqs($/;"	f	file:
wpa_supplicant_pick_network	events.c	/^struct wpa_bss * wpa_supplicant_pick_network(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_pick_new_network	events.c	/^wpa_supplicant_pick_new_network(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_pktcnt_poll	ctrl_iface.c	/^static int wpa_supplicant_pktcnt_poll(struct wpa_supplicant *wpa_s, char *buf,$/;"	f	file:
wpa_supplicant_port_cb	wpas_glue.c	/^static void wpa_supplicant_port_cb(void *ctx, int authorized)$/;"	f	file:
wpa_supplicant_reconfig	wpa_supplicant.c	/^static void wpa_supplicant_reconfig(int sig, void *signal_ctx)$/;"	f	file:
wpa_supplicant_reinit_autoscan	wpa_supplicant.c	/^void wpa_supplicant_reinit_autoscan(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_reload_configuration	wpa_supplicant.c	/^int wpa_supplicant_reload_configuration(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_remove_iface	wpa_supplicant.c	/^int wpa_supplicant_remove_iface(struct wpa_global *global,$/;"	f
wpa_supplicant_remove_pmkid	preauth_test.c	/^static int wpa_supplicant_remove_pmkid(void *wpa_s,$/;"	f	file:
wpa_supplicant_remove_pmkid	wpas_glue.c	/^static int wpa_supplicant_remove_pmkid(void *wpa_s,$/;"	f	file:
wpa_supplicant_req_auth_timeout	wpa_supplicant.c	/^void wpa_supplicant_req_auth_timeout(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_req_new_scan	events.c	/^static void wpa_supplicant_req_new_scan(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_req_scan	scan.c	/^void wpa_supplicant_req_scan(struct wpa_supplicant *wpa_s, int sec, int usec)$/;"	f
wpa_supplicant_req_sched_scan	scan.c	/^int wpa_supplicant_req_sched_scan(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_rsn_preauth_scan_results	events.c	/^static void wpa_supplicant_rsn_preauth_scan_results($/;"	f	file:
wpa_supplicant_rsn_supp_set_config	wpas_glue.c	/^void wpa_supplicant_rsn_supp_set_config(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_run	wpa_supplicant.c	/^int wpa_supplicant_run(struct wpa_global *global)$/;"	f
wpa_supplicant_rx_eapol	wpa_priv.c	/^void wpa_supplicant_rx_eapol(void *ctx, const u8 *src_addr,$/;"	f
wpa_supplicant_rx_eapol	wpa_supplicant.c	/^void wpa_supplicant_rx_eapol(void *ctx, const u8 *src_addr,$/;"	f
wpa_supplicant_rx_eapol_bridge	wpa_supplicant.c	/^static void wpa_supplicant_rx_eapol_bridge(void *ctx, const u8 *src_addr,$/;"	f	file:
wpa_supplicant_scan	scan.c	/^static void wpa_supplicant_scan(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpa_supplicant_scard_init	events.c	/^int wpa_supplicant_scard_init(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_sched_scan_timeout	scan.c	/^wpa_supplicant_sched_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpa_supplicant_select_bss	events.c	/^wpa_supplicant_select_bss(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_select_config	events.c	/^static int wpa_supplicant_select_config(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_select_network	wpa_supplicant.c	/^void wpa_supplicant_select_network(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_send_ft_action	wpas_glue.c	/^static int wpa_supplicant_send_ft_action(void *ctx, u8 action,$/;"	f	file:
wpa_supplicant_send_tdls_mgmt	wpas_glue.c	/^static int wpa_supplicant_send_tdls_mgmt(void *ctx, const u8 *dst,$/;"	f	file:
wpa_supplicant_set_anon_id	wpas_glue.c	/^static void wpa_supplicant_set_anon_id(void *ctx, const u8 *id, size_t len)$/;"	f	file:
wpa_supplicant_set_ap_scan	wpa_supplicant.c	/^int wpa_supplicant_set_ap_scan(struct wpa_supplicant *wpa_s, int ap_scan)$/;"	f
wpa_supplicant_set_bss_expiration_age	wpa_supplicant.c	/^int wpa_supplicant_set_bss_expiration_age(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_set_bss_expiration_count	wpa_supplicant.c	/^int wpa_supplicant_set_bss_expiration_count(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_set_config_blob	preauth_test.c	/^static void wpa_supplicant_set_config_blob(void *ctx,$/;"	f	file:
wpa_supplicant_set_config_blob	wpas_glue.c	/^static void wpa_supplicant_set_config_blob(void *ctx,$/;"	f	file:
wpa_supplicant_set_debug_params	wpa_supplicant.c	/^int wpa_supplicant_set_debug_params(struct wpa_global *global, int debug_level,$/;"	f
wpa_supplicant_set_driver	wpa_supplicant.c	/^static int wpa_supplicant_set_driver(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_set_key	preauth_test.c	/^static int wpa_supplicant_set_key(void *wpa_s, enum wpa_alg alg,$/;"	f	file:
wpa_supplicant_set_key	wpas_glue.c	/^static int wpa_supplicant_set_key(void *_wpa_s, enum wpa_alg alg,$/;"	f	file:
wpa_supplicant_set_non_wpa_policy	wpa_supplicant.c	/^void wpa_supplicant_set_non_wpa_policy(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_set_rekey_offload	wpas_glue.c	/^static void wpa_supplicant_set_rekey_offload(void *ctx,$/;"	f	file:
wpa_supplicant_set_scan_interval	wpa_supplicant.c	/^int wpa_supplicant_set_scan_interval(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_set_state	wpa_supplicant.c	/^void wpa_supplicant_set_state(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_set_suites	wpa_supplicant.c	/^int wpa_supplicant_set_suites(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_set_wpa_none_key	wpa_supplicant.c	/^int wpa_supplicant_set_wpa_none_key(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_signal_poll	ctrl_iface.c	/^static int wpa_supplicant_signal_poll(struct wpa_supplicant *wpa_s, char *buf,$/;"	f	file:
wpa_supplicant_ssid_bss_match	events.c	/^static int wpa_supplicant_ssid_bss_match(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_start_autoscan	wpa_supplicant.c	/^static void wpa_supplicant_start_autoscan(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_start_bgscan	wpa_supplicant.c	/^static void wpa_supplicant_start_bgscan(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_start_sched_scan	scan.c	/^int wpa_supplicant_start_sched_scan(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_state_txt	wpa_supplicant.c	/^const char * wpa_supplicant_state_txt(enum wpa_states state)$/;"	f
wpa_supplicant_status_cb	wpas_glue.c	/^static void wpa_supplicant_status_cb(void *ctx, const char *status,$/;"	f	file:
wpa_supplicant_stop_autoscan	wpa_supplicant.c	/^static void wpa_supplicant_stop_autoscan(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_stop_bgscan	wpa_supplicant.c	/^static void wpa_supplicant_stop_bgscan(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_stop_countermeasures	events.c	/^void wpa_supplicant_stop_countermeasures(void *eloop_ctx, void *sock_ctx)$/;"	f
wpa_supplicant_stop_sched_scan	scan.c	/^int wpa_supplicant_stop_sched_scan(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_suites_from_ai	wpa_supplicant.c	/^static int wpa_supplicant_suites_from_ai(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_tdls_disable_channel_switch	wpas_glue.c	/^static int wpa_supplicant_tdls_disable_channel_switch(void *ctx, const u8 *addr)$/;"	f	file:
wpa_supplicant_tdls_enable_channel_switch	wpas_glue.c	/^static int wpa_supplicant_tdls_enable_channel_switch($/;"	f	file:
wpa_supplicant_tdls_get_capa	wpas_glue.c	/^static int wpa_supplicant_tdls_get_capa(void *ctx, int *tdls_supported,$/;"	f	file:
wpa_supplicant_tdls_oper	wpas_glue.c	/^static int wpa_supplicant_tdls_oper(void *ctx, int oper, const u8 *peer)$/;"	f	file:
wpa_supplicant_tdls_peer_addset	wpas_glue.c	/^static int wpa_supplicant_tdls_peer_addset($/;"	f	file:
wpa_supplicant_terminate	wpa_supplicant.c	/^static void wpa_supplicant_terminate(int sig, void *signal_ctx)$/;"	f	file:
wpa_supplicant_terminate_proc	wpa_supplicant.c	/^void wpa_supplicant_terminate_proc(struct wpa_global *global)$/;"	f
wpa_supplicant_test_failure	wpa_supplicant_i.h	/^enum wpa_supplicant_test_failure {$/;"	g
wpa_supplicant_thread	main_winsvc.c	/^static int wpa_supplicant_thread(void)$/;"	f	file:
wpa_supplicant_timeout	wpa_supplicant.c	/^static void wpa_supplicant_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpa_supplicant_trigger_scan	scan.c	/^int wpa_supplicant_trigger_scan(struct wpa_supplicant *wpa_s,$/;"	f
wpa_supplicant_update_channel_list	events.c	/^static void wpa_supplicant_update_channel_list($/;"	f	file:
wpa_supplicant_update_config	wpa_supplicant.c	/^void wpa_supplicant_update_config(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_update_current_bss	events.c	/^static void wpa_supplicant_update_current_bss(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_update_ft_ies	wpas_glue.c	/^static int wpa_supplicant_update_ft_ies(void *ctx, const u8 *md,$/;"	f	file:
wpa_supplicant_update_mac_addr	wpa_supplicant.c	/^int wpa_supplicant_update_mac_addr(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_update_scan_int	scan.c	/^void wpa_supplicant_update_scan_int(struct wpa_supplicant *wpa_s, int sec)$/;"	f
wpa_supplicant_update_scan_results	scan.c	/^int wpa_supplicant_update_scan_results(struct wpa_supplicant *wpa_s)$/;"	f
wpa_supplicant_vendor_cmd	ctrl_iface.c	/^static int wpa_supplicant_vendor_cmd(struct wpa_supplicant *wpa_s, char *cmd,$/;"	f	file:
wpa_supplicant_version	wpa_supplicant.c	/^const char *wpa_supplicant_version =$/;"	v
wpa_supplicant_wps_cred	wps_supplicant.c	/^static int wpa_supplicant_wps_cred(void *ctx,$/;"	f	file:
wpa_supplicant_wps_event	wps_supplicant.c	/^static void wpa_supplicant_wps_event(void *ctx, enum wps_event event,$/;"	f	file:
wpa_supplicant_wps_event_er_ap_add	wps_supplicant.c	/^static void wpa_supplicant_wps_event_er_ap_add(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_wps_event_er_ap_remove	wps_supplicant.c	/^static void wpa_supplicant_wps_event_er_ap_remove(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_wps_event_er_ap_settings	wps_supplicant.c	/^static void wpa_supplicant_wps_event_er_ap_settings($/;"	f	file:
wpa_supplicant_wps_event_er_enrollee_add	wps_supplicant.c	/^static void wpa_supplicant_wps_event_er_enrollee_add($/;"	f	file:
wpa_supplicant_wps_event_er_enrollee_remove	wps_supplicant.c	/^static void wpa_supplicant_wps_event_er_enrollee_remove($/;"	f	file:
wpa_supplicant_wps_event_er_set_sel_reg	wps_supplicant.c	/^static void wpa_supplicant_wps_event_er_set_sel_reg($/;"	f	file:
wpa_supplicant_wps_event_fail	wps_supplicant.c	/^static void wpa_supplicant_wps_event_fail(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_wps_event_m2d	wps_supplicant.c	/^static void wpa_supplicant_wps_event_m2d(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_wps_event_success	wps_supplicant.c	/^static void wpa_supplicant_wps_event_success(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpa_supplicant_wps_ie_txt	ctrl_iface.c	/^static char * wpa_supplicant_wps_ie_txt(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_wps_ie_txt_buf	ctrl_iface.c	/^static char * wpa_supplicant_wps_ie_txt_buf(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpa_supplicant_wps_rf_band	wps_supplicant.c	/^static int wpa_supplicant_wps_rf_band(void *ctx)$/;"	f	file:
wpa_used_freq_data	wpa_supplicant_i.h	/^struct wpa_used_freq_data {$/;"	s
wpagui	wpa_gui-qt4/addinterface.h	/^	WpaGui *wpagui;$/;"	m	class:AddInterface
wpagui	wpa_gui-qt4/networkconfig.h	/^	WpaGui *wpagui;$/;"	m	class:NetworkConfig
wpagui	wpa_gui-qt4/peers.h	/^	WpaGui *wpagui;$/;"	m	class:Peers
wpagui	wpa_gui-qt4/scanresults.h	/^	WpaGui *wpagui;$/;"	m	class:ScanResults
wpagui	wpa_gui-qt4/userdatarequest.h	/^	WpaGui *wpagui;$/;"	m	class:UserDataRequest
wpas_add_interworking_elements	scan.c	/^static void wpas_add_interworking_elements(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ap_ch_switch	ap.c	/^void wpas_ap_ch_switch(struct wpa_supplicant *wpa_s, int freq, int ht,$/;"	f
wpas_ap_configured_cb	ap.c	/^static void wpas_ap_configured_cb(void *ctx)$/;"	f	file:
wpas_ap_stop_ap	ap.c	/^int wpas_ap_stop_ap(struct wpa_supplicant *wpa_s)$/;"	f
wpas_ap_wps_add_nfc_pw	ap.c	/^int wpas_ap_wps_add_nfc_pw(struct wpa_supplicant *wpa_s, u16 pw_id,$/;"	f
wpas_ap_wps_nfc_config_token	ap.c	/^struct wpabuf * wpas_ap_wps_nfc_config_token(struct wpa_supplicant *wpa_s,$/;"	f
wpas_ap_wps_nfc_handover_sel	ap.c	/^struct wpabuf * wpas_ap_wps_nfc_handover_sel(struct wpa_supplicant *wpa_s,$/;"	f
wpas_ap_wps_nfc_handover_sel	ap.h	/^wpas_ap_wps_nfc_handover_sel(struct wpa_supplicant *wpa_s,$/;"	f
wpas_ap_wps_nfc_report_handover	ap.c	/^int wpas_ap_wps_nfc_report_handover(struct wpa_supplicant *wpa_s,$/;"	f
wpas_auth_failed	wpa_supplicant.c	/^void wpas_auth_failed(struct wpa_supplicant *wpa_s, char *reason)$/;"	f
wpas_blacklist_module_tests	wpas_module_tests.c	/^static int wpas_blacklist_module_tests(void)$/;"	f	file:
wpas_build_ext_capab	wpa_supplicant.c	/^int wpas_build_ext_capab(struct wpa_supplicant *wpa_s, u8 *buf, size_t buflen)$/;"	f
wpas_check_freq_conflict	p2p_supplicant.c	/^static int wpas_check_freq_conflict(struct wpa_supplicant *wpa_s, int freq)$/;"	f	file:
wpas_clear_temp_disabled	wpa_supplicant.c	/^void wpas_clear_temp_disabled(struct wpa_supplicant *wpa_s,$/;"	f
wpas_clear_wps	wps_supplicant.c	/^static void wpas_clear_wps(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_conf_ap_vht	ap.c	/^static void wpas_conf_ap_vht(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_connect	examples/p2p-nfc.py	/^def wpas_connect():$/;"	f
wpas_connect	examples/wps-nfc.py	/^def wpas_connect():$/;"	f
wpas_connect_work_done	wpa_supplicant.c	/^void wpas_connect_work_done(struct wpa_supplicant *wpa_s)$/;"	f
wpas_connect_work_free	wpa_supplicant.c	/^void wpas_connect_work_free(struct wpa_connect_work *cwork)$/;"	f
wpas_connection_failed	wpa_supplicant.c	/^void wpas_connection_failed(struct wpa_supplicant *wpa_s, const u8 *bssid)$/;"	f
wpas_copy_go_neg_results	p2p_supplicant.c	/^static int wpas_copy_go_neg_results(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_create_receive_sa	wpas_kay.c	/^static int wpas_create_receive_sa(void *wpa_s, u32 channel, u8 an,$/;"	f	file:
wpas_create_receive_sc	wpas_kay.c	/^static int wpas_create_receive_sc(void *wpa_s, u32 channel,$/;"	f	file:
wpas_create_transmit_sa	wpas_kay.c	/^static int wpas_create_transmit_sa(void *wpa_s, u32 channel, u8 an,$/;"	f	file:
wpas_create_transmit_sc	wpas_kay.c	/^wpas_create_transmit_sc(void *wpa_s, u32 channel,$/;"	f	file:
wpas_ctrl	examples/p2p-nfc.py	/^wpas_ctrl = '\/var\/run\/wpa_supplicant'$/;"	v
wpas_ctrl	examples/wps-nfc.py	/^wpas_ctrl = '\/var\/run\/wpa_supplicant'$/;"	v
wpas_ctrl_eapol_response	ctrl_iface.c	/^static void wpas_ctrl_eapol_response(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_ctrl_get_alloc_fail	ctrl_iface.c	/^static int wpas_ctrl_get_alloc_fail(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_iface_data_test_config	ctrl_iface.c	/^static int wpas_ctrl_iface_data_test_config(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_iface_data_test_frame	ctrl_iface.c	/^static int wpas_ctrl_iface_data_test_frame(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_iface_data_test_tx	ctrl_iface.c	/^static int wpas_ctrl_iface_data_test_tx(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_iface_driver_event	ctrl_iface.c	/^static int wpas_ctrl_iface_driver_event(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_iface_eapol_rx	ctrl_iface.c	/^static int wpas_ctrl_iface_eapol_rx(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_iface_erp_flush	ctrl_iface.c	/^static int wpas_ctrl_iface_erp_flush(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_ctrl_iface_global_reinit	ctrl_iface_unix.c	/^static int wpas_ctrl_iface_global_reinit(struct wpa_global *global,$/;"	f	file:
wpas_ctrl_iface_mac_rand_scan	ctrl_iface.c	/^static int wpas_ctrl_iface_mac_rand_scan(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_iface_mgmt_tx	ctrl_iface.c	/^static int wpas_ctrl_iface_mgmt_tx(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_iface_mgmt_tx_cb	ctrl_iface.c	/^static void wpas_ctrl_iface_mgmt_tx_cb(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_iface_mgmt_tx_done	ctrl_iface.c	/^static void wpas_ctrl_iface_mgmt_tx_done(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_ctrl_iface_open_sock	ctrl_iface_unix.c	/^static int wpas_ctrl_iface_open_sock(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_iface_reinit	ctrl_iface_unix.c	/^static int wpas_ctrl_iface_reinit(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_iface_send_neigbor_rep	ctrl_iface.c	/^static int wpas_ctrl_iface_send_neigbor_rep(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_iface_wnm_bss_query	ctrl_iface.c	/^static int wpas_ctrl_iface_wnm_bss_query(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_iface_wnm_sleep	ctrl_iface.c	/^static int wpas_ctrl_iface_wnm_sleep(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_neighbor_rep_cb	ctrl_iface.c	/^static void wpas_ctrl_neighbor_rep_cb(void *ctx, struct wpabuf *neighbor_rep)$/;"	f	file:
wpas_ctrl_nfc_get_handover_req	ctrl_iface.c	/^static int wpas_ctrl_nfc_get_handover_req(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_nfc_get_handover_req_p2p	ctrl_iface.c	/^static int wpas_ctrl_nfc_get_handover_req_p2p(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_nfc_get_handover_req_wps	ctrl_iface.c	/^static int wpas_ctrl_nfc_get_handover_req_wps(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_nfc_get_handover_sel	ctrl_iface.c	/^static int wpas_ctrl_nfc_get_handover_sel(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_nfc_get_handover_sel_p2p	ctrl_iface.c	/^static int wpas_ctrl_nfc_get_handover_sel_p2p(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_nfc_get_handover_sel_wps	ctrl_iface.c	/^static int wpas_ctrl_nfc_get_handover_sel_wps(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_nfc_report_handover	ctrl_iface.c	/^static int wpas_ctrl_nfc_report_handover(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_pno	ctrl_iface.c	/^static int wpas_ctrl_pno(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_radio_work	ctrl_iface.c	/^static int wpas_ctrl_radio_work(struct wpa_supplicant *wpa_s, char *cmd,$/;"	f	file:
wpas_ctrl_radio_work_add	ctrl_iface.c	/^static int wpas_ctrl_radio_work_add(struct wpa_supplicant *wpa_s, char *cmd,$/;"	f	file:
wpas_ctrl_radio_work_cb	ctrl_iface.c	/^static void wpas_ctrl_radio_work_cb(struct wpa_radio_work *work, int deinit)$/;"	f	file:
wpas_ctrl_radio_work_done	ctrl_iface.c	/^static int wpas_ctrl_radio_work_done(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_radio_work_flush	ctrl_iface.c	/^void wpas_ctrl_radio_work_flush(struct wpa_supplicant *wpa_s)$/;"	f
wpas_ctrl_radio_work_flush	ctrl_iface.h	/^static inline void wpas_ctrl_radio_work_flush(struct wpa_supplicant *wpa_s)$/;"	f
wpas_ctrl_radio_work_show	ctrl_iface.c	/^static int wpas_ctrl_radio_work_show(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_radio_work_timeout	ctrl_iface.c	/^static void wpas_ctrl_radio_work_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_ctrl_remove_cred	ctrl_iface.c	/^static int wpas_ctrl_remove_cred(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_scan	ctrl_iface.c	/^static void wpas_ctrl_scan(struct wpa_supplicant *wpa_s, char *params,$/;"	f	file:
wpas_ctrl_set_blob	ctrl_iface.c	/^static int wpas_ctrl_set_blob(struct wpa_supplicant *wpa_s, char *pos)$/;"	f	file:
wpas_ctrl_test_alloc_fail	ctrl_iface.c	/^static int wpas_ctrl_test_alloc_fail(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_vendor_elem_add	ctrl_iface.c	/^static int wpas_ctrl_vendor_elem_add(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_vendor_elem_get	ctrl_iface.c	/^static int wpas_ctrl_vendor_elem_get(struct wpa_supplicant *wpa_s, char *cmd,$/;"	f	file:
wpas_ctrl_vendor_elem_iface	ctrl_iface.c	/^wpas_ctrl_vendor_elem_iface(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ctrl_vendor_elem_remove	ctrl_iface.c	/^static int wpas_ctrl_vendor_elem_remove(struct wpa_supplicant *wpa_s, char *cmd)$/;"	f	file:
wpas_ctrl_vendor_elem_update	ctrl_iface.c	/^static void wpas_ctrl_vendor_elem_update(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_data_test_rx	ctrl_iface.c	/^void wpas_data_test_rx(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)$/;"	f
wpas_dbus_bss_prop	dbus/dbus_new.h	/^enum wpas_dbus_bss_prop {$/;"	g
wpas_dbus_bss_properties	dbus/dbus_new.c	/^static const struct wpa_dbus_property_desc wpas_dbus_bss_properties[] = {$/;"	v	typeref:struct:wpa_dbus_property_desc	file:
wpas_dbus_bss_signal_prop_changed	dbus/dbus_new.c	/^void wpas_dbus_bss_signal_prop_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_bss_signal_prop_changed	dbus/dbus_new.h	/^static inline void wpas_dbus_bss_signal_prop_changed($/;"	f
wpas_dbus_bss_signals	dbus/dbus_new.c	/^static const struct wpa_dbus_signal_desc wpas_dbus_bss_signals[] = {$/;"	v	typeref:struct:wpa_dbus_signal_desc	file:
wpas_dbus_bssid_properties	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_bssid_properties(DBusMessage *message,$/;"	f
wpas_dbus_ctrl_iface_deinit	dbus/dbus_new.c	/^void wpas_dbus_ctrl_iface_deinit(struct wpas_dbus_priv *iface)$/;"	f
wpas_dbus_ctrl_iface_init	dbus/dbus_new.c	/^int wpas_dbus_ctrl_iface_init(struct wpas_dbus_priv *priv)$/;"	f
wpas_dbus_decompose_object_path	dbus/dbus_old.c	/^char * wpas_dbus_decompose_object_path(const char *path, char **network,$/;"	f
wpas_dbus_deinit	dbus/dbus_common.c	/^void wpas_dbus_deinit(struct wpas_dbus_priv *priv)$/;"	f
wpas_dbus_deinit_common	dbus/dbus_common.c	/^static void wpas_dbus_deinit_common(struct wpas_dbus_priv *priv)$/;"	f	file:
wpas_dbus_error_iface_unknown	dbus/dbus_new_handlers.c	/^static DBusMessage * wpas_dbus_error_iface_unknown(DBusMessage *message)$/;"	f	file:
wpas_dbus_error_invalid_args	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_error_invalid_args(DBusMessage *message,$/;"	f
wpas_dbus_error_network_unknown	dbus/dbus_new_handlers.c	/^static DBusMessage * wpas_dbus_error_network_unknown(DBusMessage *message)$/;"	f	file:
wpas_dbus_error_no_memory	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_error_no_memory(DBusMessage *message)$/;"	f
wpas_dbus_error_persistent_group_unknown	dbus/dbus_new_handlers_p2p.c	/^wpas_dbus_error_persistent_group_unknown(DBusMessage *message)$/;"	f	file:
wpas_dbus_error_scan_error	dbus/dbus_new_handlers.c	/^static DBusMessage * wpas_dbus_error_scan_error(DBusMessage *message,$/;"	f	file:
wpas_dbus_error_unknown_error	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_error_unknown_error(DBusMessage *message,$/;"	f
wpas_dbus_get_bss_security_prop	dbus/dbus_new_handlers.c	/^static dbus_bool_t wpas_dbus_get_bss_security_prop(DBusMessageIter *iter,$/;"	f	file:
wpas_dbus_get_group_obj_path	dbus/dbus_new.c	/^static int wpas_dbus_get_group_obj_path(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_get_scan_allow_roam	dbus/dbus_new_handlers.c	/^static int wpas_dbus_get_scan_allow_roam(DBusMessage *message,$/;"	f	file:
wpas_dbus_get_scan_channels	dbus/dbus_new_handlers.c	/^static int wpas_dbus_get_scan_channels(DBusMessage *message,$/;"	f	file:
wpas_dbus_get_scan_ies	dbus/dbus_new_handlers.c	/^static int wpas_dbus_get_scan_ies(DBusMessage *message, DBusMessageIter *var,$/;"	f	file:
wpas_dbus_get_scan_ssids	dbus/dbus_new_handlers.c	/^static int wpas_dbus_get_scan_ssids(DBusMessage *message, DBusMessageIter *var,$/;"	f	file:
wpas_dbus_get_scan_type	dbus/dbus_new_handlers.c	/^static int wpas_dbus_get_scan_type(DBusMessage *message, DBusMessageIter *var,$/;"	f	file:
wpas_dbus_getter_ap_scan	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_ap_scan(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_blobs	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_blobs(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bridge_ifname	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bridge_ifname(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_bss_age	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_age(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bss_bssid	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_bssid(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bss_expire_age	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_expire_age(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_bss_expire_count	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_expire_count(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_bss_frequency	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_frequency(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_bss_ies	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_ies(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bss_mode	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_mode(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bss_privacy	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_privacy(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_bss_rates	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_rates(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_bss_rsn	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_rsn(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bss_signal	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_signal(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_bss_ssid	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_ssid(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bss_wpa	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_wpa(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bss_wps	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bss_wps(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_bsss	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_bsss(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_capabilities	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_capabilities(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_config_methods	dbus/dbus_new_handlers_wps.c	/^dbus_bool_t wpas_dbus_getter_config_methods(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_country	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_country(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_current_auth_mode	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_current_auth_mode(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_current_bss	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_current_bss(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_current_network	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_current_network(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_debug_level	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_debug_level(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_debug_show_keys	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_debug_show_keys(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_debug_timestamp	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_debug_timestamp(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_disconnect_reason	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_disconnect_reason(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_driver	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_driver(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_eap_methods	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_eap_methods(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_enabled	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_enabled(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_fast_reauth	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_fast_reauth(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_global_capabilities	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_global_capabilities(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_global_wfd_ies	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_global_wfd_ies(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_ifname	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_ifname(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_interfaces	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_interfaces(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_network_properties	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_network_properties(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_networks	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_networks(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_p2p_device_config	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_device_config(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_group	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_group(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_p2p_group_bssid	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_group_bssid(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_group_frequency	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_group_frequency(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_group_members	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_group_members(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_group_passphrase	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_group_passphrase(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_group_psk	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_group_psk(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_group_ssid	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_group_ssid(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_group_vendor_ext	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_group_vendor_ext(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_config_method	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_config_method(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_device_address	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_device_address(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_device_capability	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_device_capability(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_device_name	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_device_name(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_group_capability	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_group_capability(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_groups	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_groups(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_ies	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_ies(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_level	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_level(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peer_primary_device_type	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_primary_device_type($/;"	f
wpas_dbus_getter_p2p_peer_secondary_device_types	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_secondary_device_types($/;"	f
wpas_dbus_getter_p2p_peer_vendor_extension	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peer_vendor_extension(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peergo	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peergo(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_p2p_peers	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_peers(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_p2p_role	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_p2p_role(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_persistent_group_properties	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_persistent_group_properties(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_persistent_groups	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_getter_persistent_groups(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_pkcs11_engine_path	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_pkcs11_engine_path(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_pkcs11_module_path	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_pkcs11_module_path(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_process_credentials	dbus/dbus_new_handlers_wps.c	/^dbus_bool_t wpas_dbus_getter_process_credentials(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_scan_interval	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_scan_interval(DBusMessageIter *iter,$/;"	f
wpas_dbus_getter_scanning	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_scanning(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_getter_state	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_getter_state(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_global_add_interface	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_global_add_interface(DBusMessage *message,$/;"	f
wpas_dbus_global_get_interface	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_global_get_interface(DBusMessage *message,$/;"	f
wpas_dbus_global_methods	dbus/dbus_new.c	/^static const struct wpa_dbus_method_desc wpas_dbus_global_methods[] = {$/;"	v	typeref:struct:wpa_dbus_method_desc	file:
wpas_dbus_global_properties	dbus/dbus_new.c	/^static const struct wpa_dbus_property_desc wpas_dbus_global_properties[] = {$/;"	v	typeref:struct:wpa_dbus_property_desc	file:
wpas_dbus_global_remove_interface	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_global_remove_interface(DBusMessage *message,$/;"	f
wpas_dbus_global_set_debugparams	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_global_set_debugparams(DBusMessage *message,$/;"	f
wpas_dbus_global_signals	dbus/dbus_new.c	/^static const struct wpa_dbus_signal_desc wpas_dbus_global_signals[] = {$/;"	v	typeref:struct:wpa_dbus_signal_desc	file:
wpas_dbus_handler_add_blob	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_add_blob(DBusMessage *message,$/;"	f
wpas_dbus_handler_add_network	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_add_network(DBusMessage *message,$/;"	f
wpas_dbus_handler_add_persistent_group	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_add_persistent_group($/;"	f
wpas_dbus_handler_autoscan	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_autoscan(DBusMessage *message,$/;"	f
wpas_dbus_handler_create_interface	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_create_interface(DBusMessage *message,$/;"	f
wpas_dbus_handler_disconnect	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_disconnect(DBusMessage *message,$/;"	f
wpas_dbus_handler_eap_logoff	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_eap_logoff(DBusMessage *message,$/;"	f
wpas_dbus_handler_eap_logon	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_eap_logon(DBusMessage *message,$/;"	f
wpas_dbus_handler_flush_bss	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_flush_bss(DBusMessage *message,$/;"	f
wpas_dbus_handler_get_blob	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_get_blob(DBusMessage *message,$/;"	f
wpas_dbus_handler_get_interface	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_get_interface(DBusMessage *message,$/;"	f
wpas_dbus_handler_network_reply	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_network_reply(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_add_service	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_add_service(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_connect	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_connect(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_delete_service	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_delete_service($/;"	f
wpas_dbus_handler_p2p_disconnect	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_disconnect(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_extendedlisten	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_extendedlisten($/;"	f
wpas_dbus_handler_p2p_find	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_find(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_flush	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_flush(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_flush_service	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_flush_service(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_group_add	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_group_add(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_invite	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_invite(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_listen	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_listen(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_presence_request	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_presence_request($/;"	f
wpas_dbus_handler_p2p_prov_disc_req	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_prov_disc_req(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_rejectpeer	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_rejectpeer(DBusMessage *message,$/;"	f
wpas_dbus_handler_p2p_serv_disc_external	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_serv_disc_external($/;"	f
wpas_dbus_handler_p2p_service_sd_cancel_req	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_service_sd_cancel_req($/;"	f
wpas_dbus_handler_p2p_service_sd_req	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_service_sd_req($/;"	f
wpas_dbus_handler_p2p_service_sd_res	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_service_sd_res($/;"	f
wpas_dbus_handler_p2p_service_update	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_service_update($/;"	f
wpas_dbus_handler_p2p_stop_find	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_p2p_stop_find(DBusMessage *message,$/;"	f
wpas_dbus_handler_reassociate	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_reassociate(DBusMessage *message,$/;"	f
wpas_dbus_handler_reattach	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_reattach(DBusMessage *message,$/;"	f
wpas_dbus_handler_remove_all_networks	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_remove_all_networks($/;"	f
wpas_dbus_handler_remove_all_persistent_groups	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_remove_all_persistent_groups($/;"	f
wpas_dbus_handler_remove_blob	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_remove_blob(DBusMessage *message,$/;"	f
wpas_dbus_handler_remove_interface	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_remove_interface(DBusMessage *message,$/;"	f
wpas_dbus_handler_remove_network	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_remove_network(DBusMessage *message,$/;"	f
wpas_dbus_handler_remove_persistent_group	dbus/dbus_new_handlers_p2p.c	/^DBusMessage * wpas_dbus_handler_remove_persistent_group($/;"	f
wpas_dbus_handler_scan	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_scan(DBusMessage *message,$/;"	f
wpas_dbus_handler_select_network	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_select_network(DBusMessage *message,$/;"	f
wpas_dbus_handler_set_pkcs11_engine_and_module_path	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_set_pkcs11_engine_and_module_path($/;"	f
wpas_dbus_handler_signal_poll	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_signal_poll(DBusMessage *message,$/;"	f
wpas_dbus_handler_subscribe_preq	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_subscribe_preq($/;"	f
wpas_dbus_handler_tdls_discover	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_tdls_discover(DBusMessage *message,$/;"	f
wpas_dbus_handler_tdls_setup	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_tdls_setup(DBusMessage *message,$/;"	f
wpas_dbus_handler_tdls_status	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_tdls_status(DBusMessage *message,$/;"	f
wpas_dbus_handler_tdls_teardown	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_tdls_teardown(DBusMessage *message,$/;"	f
wpas_dbus_handler_unsubscribe_preq	dbus/dbus_new_handlers.c	/^DBusMessage * wpas_dbus_handler_unsubscribe_preq($/;"	f
wpas_dbus_handler_wps_bssid	dbus/dbus_new_handlers_wps.c	/^static int wpas_dbus_handler_wps_bssid(DBusMessage *message,$/;"	f	file:
wpas_dbus_handler_wps_p2p_dev_addr	dbus/dbus_new_handlers_wps.c	/^static int wpas_dbus_handler_wps_p2p_dev_addr(DBusMessage *message,$/;"	f	file:
wpas_dbus_handler_wps_pin	dbus/dbus_new_handlers_wps.c	/^static int wpas_dbus_handler_wps_pin(DBusMessage *message,$/;"	f	file:
wpas_dbus_handler_wps_role	dbus/dbus_new_handlers_wps.c	/^static int wpas_dbus_handler_wps_role(DBusMessage *message,$/;"	f	file:
wpas_dbus_handler_wps_start	dbus/dbus_new_handlers_wps.c	/^DBusMessage * wpas_dbus_handler_wps_start(DBusMessage *message,$/;"	f
wpas_dbus_handler_wps_start_entry	dbus/dbus_new_handlers_wps.c	/^static int wpas_dbus_handler_wps_start_entry(DBusMessage *message, char *key,$/;"	f	file:
wpas_dbus_handler_wps_type	dbus/dbus_new_handlers_wps.c	/^static int wpas_dbus_handler_wps_type(DBusMessage *message,$/;"	f	file:
wpas_dbus_iface_add_network	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_add_network(DBusMessage *message,$/;"	f
wpas_dbus_iface_capabilities	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_capabilities(DBusMessage *message,$/;"	f
wpas_dbus_iface_disable_network	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_disable_network(DBusMessage *message,$/;"	f
wpas_dbus_iface_disconnect	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_disconnect(DBusMessage *message,$/;"	f
wpas_dbus_iface_enable_network	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_enable_network(DBusMessage *message,$/;"	f
wpas_dbus_iface_flush	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_flush(DBusMessage *message,$/;"	f
wpas_dbus_iface_get_scanning	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_get_scanning(DBusMessage *message,$/;"	f
wpas_dbus_iface_get_state	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_get_state(DBusMessage *message,$/;"	f
wpas_dbus_iface_remove_blobs	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_remove_blobs(DBusMessage *message,$/;"	f
wpas_dbus_iface_remove_network	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_remove_network(DBusMessage *message,$/;"	f
wpas_dbus_iface_scan	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_scan(DBusMessage *message,$/;"	f
wpas_dbus_iface_scan_results	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_scan_results(DBusMessage *message,$/;"	f
wpas_dbus_iface_select_network	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_select_network(DBusMessage *message,$/;"	f
wpas_dbus_iface_set_ap_scan	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_set_ap_scan(DBusMessage *message,$/;"	f
wpas_dbus_iface_set_blobs	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_set_blobs(DBusMessage *message,$/;"	f
wpas_dbus_iface_set_network	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_set_network(DBusMessage *message,$/;"	f
wpas_dbus_iface_set_smartcard_modules	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_iface_set_smartcard_modules($/;"	f
wpas_dbus_iface_wps_pbc	dbus/dbus_old_handlers_wps.c	/^DBusMessage * wpas_dbus_iface_wps_pbc(DBusMessage *message,$/;"	f
wpas_dbus_iface_wps_pin	dbus/dbus_old_handlers_wps.c	/^DBusMessage * wpas_dbus_iface_wps_pin(DBusMessage *message,$/;"	f
wpas_dbus_iface_wps_reg	dbus/dbus_old_handlers_wps.c	/^DBusMessage * wpas_dbus_iface_wps_reg(DBusMessage *message,$/;"	f
wpas_dbus_init	dbus/dbus_common.c	/^struct wpas_dbus_priv * wpas_dbus_init(struct wpa_global *global)$/;"	f
wpas_dbus_init_common	dbus/dbus_common.c	/^static int wpas_dbus_init_common(struct wpas_dbus_priv *priv)$/;"	f	file:
wpas_dbus_init_common_finish	dbus/dbus_common.c	/^static int wpas_dbus_init_common_finish(struct wpas_dbus_priv *priv)$/;"	f	file:
wpas_dbus_interface	examples/p2p/p2p_connect.py	/^	wpas_dbus_interface = 'fi.w1.wpa_supplicant1'$/;"	v	class:P2P_Connect
wpas_dbus_interface	examples/p2p/p2p_disconnect.py	/^	wpas_dbus_interface = 'fi.w1.wpa_supplicant1'$/;"	v
wpas_dbus_interface	examples/p2p/p2p_find.py	/^	wpas_dbus_interface = 'fi.w1.wpa_supplicant1'$/;"	v
wpas_dbus_interface	examples/p2p/p2p_flush.py	/^	wpas_dbus_interface = 'fi.w1.wpa_supplicant1'$/;"	v
wpas_dbus_interface	examples/p2p/p2p_group_add.py	/^	wpas_dbus_interface = 'fi.w1.wpa_supplicant1'$/;"	v
wpas_dbus_interface	examples/p2p/p2p_invite.py	/^	wpas_dbus_interface = 'fi.w1.wpa_supplicant1'$/;"	v
wpas_dbus_interface	examples/p2p/p2p_listen.py	/^	wpas_dbus_interface = 'fi.w1.wpa_supplicant1'$/;"	v
wpas_dbus_interface	examples/p2p/p2p_stop_find.py	/^	wpas_dbus_interface = 'fi.w1.wpa_supplicant1'$/;"	v
wpas_dbus_interface_methods	dbus/dbus_new.c	/^static const struct wpa_dbus_method_desc wpas_dbus_interface_methods[] = {$/;"	v	typeref:struct:wpa_dbus_method_desc	file:
wpas_dbus_interface_properties	dbus/dbus_new.c	/^static const struct wpa_dbus_property_desc wpas_dbus_interface_properties[] = {$/;"	v	typeref:struct:wpa_dbus_property_desc	file:
wpas_dbus_interface_signals	dbus/dbus_new.c	/^static const struct wpa_dbus_signal_desc wpas_dbus_interface_signals[] = {$/;"	v	typeref:struct:wpa_dbus_signal_desc	file:
wpas_dbus_network_properties	dbus/dbus_new.c	/^static const struct wpa_dbus_property_desc wpas_dbus_network_properties[] = {$/;"	v	typeref:struct:wpa_dbus_property_desc	file:
wpas_dbus_network_signals	dbus/dbus_new.c	/^static const struct wpa_dbus_signal_desc wpas_dbus_network_signals[] = {$/;"	v	typeref:struct:wpa_dbus_signal_desc	file:
wpas_dbus_new_decompose_object_path	dbus/dbus_new_helpers.c	/^char * wpas_dbus_new_decompose_object_path(const char *path, const char *sep,$/;"	f
wpas_dbus_new_invalid_bssid_error	dbus/dbus_old.c	/^static DBusMessage * wpas_dbus_new_invalid_bssid_error(DBusMessage *message)$/;"	f	file:
wpas_dbus_new_invalid_iface_error	dbus/dbus_old.c	/^DBusMessage * wpas_dbus_new_invalid_iface_error(DBusMessage *message)$/;"	f
wpas_dbus_new_invalid_network_error	dbus/dbus_old.c	/^DBusMessage * wpas_dbus_new_invalid_network_error(DBusMessage *message)$/;"	f
wpas_dbus_new_invalid_opts_error	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_new_invalid_opts_error(DBusMessage *message,$/;"	f
wpas_dbus_new_success_reply	dbus/dbus_old_handlers.c	/^DBusMessage * wpas_dbus_new_success_reply(DBusMessage *message)$/;"	f
wpas_dbus_noc_filter_str	dbus/dbus_new.c	/^static const char wpas_dbus_noc_filter_str[] =$/;"	v	file:
wpas_dbus_p2p_group_properties	dbus/dbus_new.c	/^static const struct wpa_dbus_property_desc wpas_dbus_p2p_group_properties[] = {$/;"	v	typeref:struct:wpa_dbus_property_desc	file:
wpas_dbus_p2p_group_signals	dbus/dbus_new.c	/^static const struct wpa_dbus_signal_desc wpas_dbus_p2p_group_signals[] = {$/;"	v	typeref:struct:wpa_dbus_signal_desc	file:
wpas_dbus_p2p_peer_properties	dbus/dbus_new.c	/^static const struct wpa_dbus_property_desc wpas_dbus_p2p_peer_properties[] = {$/;"	v	typeref:struct:wpa_dbus_property_desc	file:
wpas_dbus_p2p_peer_signals	dbus/dbus_new.c	/^static const struct wpa_dbus_signal_desc wpas_dbus_p2p_peer_signals[] = {$/;"	v	typeref:struct:wpa_dbus_signal_desc	file:
wpas_dbus_persistent_group_properties	dbus/dbus_new.c	/^	wpas_dbus_persistent_group_properties[] = {$/;"	v	typeref:struct:wpa_dbus_property_desc	file:
wpas_dbus_priv	dbus/dbus_common_i.h	/^struct wpas_dbus_priv {$/;"	s
wpas_dbus_prop	dbus/dbus_new.h	/^enum wpas_dbus_prop {$/;"	g
wpas_dbus_register	dbus/dbus_new.c	/^static void wpas_dbus_register(struct wpa_dbus_object_desc *obj_desc,$/;"	f	file:
wpas_dbus_register_bss	dbus/dbus_new.c	/^int wpas_dbus_register_bss(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_bss	dbus/dbus_new.h	/^static inline int wpas_dbus_register_bss(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_iface	dbus/dbus_old.c	/^int wpas_dbus_register_iface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_register_iface	dbus/dbus_old.h	/^wpas_dbus_register_iface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_register_interface	dbus/dbus_new.c	/^int wpas_dbus_register_interface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_register_interface	dbus/dbus_new.h	/^static inline int wpas_dbus_register_interface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_register_network	dbus/dbus_new.c	/^int wpas_dbus_register_network(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_network	dbus/dbus_new.h	/^static inline int wpas_dbus_register_network(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_p2p_group	dbus/dbus_new.c	/^void wpas_dbus_register_p2p_group(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_p2p_group	dbus/dbus_new.h	/^wpas_dbus_register_p2p_group(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_p2p_groupmember	dbus/dbus_new.h	/^wpas_dbus_register_p2p_groupmember(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_peer	dbus/dbus_new.c	/^int wpas_dbus_register_peer(struct wpa_supplicant *wpa_s, const u8 *dev_addr)$/;"	f
wpas_dbus_register_peer	dbus/dbus_new.h	/^static inline int wpas_dbus_register_peer(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_persistent_group	dbus/dbus_new.c	/^int wpas_dbus_register_persistent_group(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_register_persistent_group	dbus/dbus_new.h	/^static inline int wpas_dbus_register_persistent_group($/;"	f
wpas_dbus_reply_new_from_error	dbus/dbus_new_helpers.c	/^DBusMessage * wpas_dbus_reply_new_from_error(DBusMessage *message,$/;"	f
wpas_dbus_setter_ap_scan	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_ap_scan(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_setter_bss_expire_age	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_bss_expire_age(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_bss_expire_count	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_bss_expire_count(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_config_methods	dbus/dbus_new_handlers_wps.c	/^dbus_bool_t wpas_dbus_setter_config_methods(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_country	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_country(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_setter_debug_level	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_debug_level(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_debug_show_keys	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_debug_show_keys(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_debug_timestamp	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_debug_timestamp(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_enabled	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_enabled(DBusMessageIter *iter, DBusError *error,$/;"	f
wpas_dbus_setter_fast_reauth	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_fast_reauth(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_global_wfd_ies	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_setter_global_wfd_ies(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_network_properties	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_network_properties(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_p2p_device_config	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_setter_p2p_device_config(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_p2p_group_vendor_ext	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_setter_p2p_group_vendor_ext(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_persistent_group_properties	dbus/dbus_new_handlers_p2p.c	/^dbus_bool_t wpas_dbus_setter_persistent_group_properties(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_process_credentials	dbus/dbus_new_handlers_wps.c	/^dbus_bool_t wpas_dbus_setter_process_credentials(DBusMessageIter *iter,$/;"	f
wpas_dbus_setter_scan_interval	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_setter_scan_interval(DBusMessageIter *iter,$/;"	f
wpas_dbus_signal_blob	dbus/dbus_new.c	/^static void wpas_dbus_signal_blob(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_blob_added	dbus/dbus_new.c	/^void wpas_dbus_signal_blob_added(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_blob_added	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_blob_added(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_blob_removed	dbus/dbus_new.c	/^void wpas_dbus_signal_blob_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_blob_removed	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_blob_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_bss	dbus/dbus_new.c	/^static void wpas_dbus_signal_bss(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_bss_added	dbus/dbus_new.c	/^static void wpas_dbus_signal_bss_added(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_bss_removed	dbus/dbus_new.c	/^static void wpas_dbus_signal_bss_removed(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_certification	dbus/dbus_new.c	/^void wpas_dbus_signal_certification(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_certification	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_certification(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_debug_level_changed	dbus/dbus_new.c	/^void wpas_dbus_signal_debug_level_changed(struct wpa_global *global)$/;"	f
wpas_dbus_signal_debug_level_changed	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_debug_level_changed($/;"	f
wpas_dbus_signal_debug_show_keys_changed	dbus/dbus_new.c	/^void wpas_dbus_signal_debug_show_keys_changed(struct wpa_global *global)$/;"	f
wpas_dbus_signal_debug_show_keys_changed	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_debug_show_keys_changed($/;"	f
wpas_dbus_signal_debug_timestamp_changed	dbus/dbus_new.c	/^void wpas_dbus_signal_debug_timestamp_changed(struct wpa_global *global)$/;"	f
wpas_dbus_signal_debug_timestamp_changed	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_debug_timestamp_changed($/;"	f
wpas_dbus_signal_eap_status	dbus/dbus_new.c	/^void wpas_dbus_signal_eap_status(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_eap_status	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_eap_status(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_interface	dbus/dbus_new.c	/^static void wpas_dbus_signal_interface(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_interface_added	dbus/dbus_new.c	/^static void wpas_dbus_signal_interface_added(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_dbus_signal_interface_removed	dbus/dbus_new.c	/^static void wpas_dbus_signal_interface_removed(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_dbus_signal_network	dbus/dbus_new.c	/^static void wpas_dbus_signal_network(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_network_added	dbus/dbus_new.c	/^static void wpas_dbus_signal_network_added(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_network_enabled_changed	dbus/dbus_new.c	/^void wpas_dbus_signal_network_enabled_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_network_enabled_changed	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_network_enabled_changed($/;"	f
wpas_dbus_signal_network_removed	dbus/dbus_new.c	/^static void wpas_dbus_signal_network_removed(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_network_request	dbus/dbus_new.c	/^void wpas_dbus_signal_network_request(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_network_request	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_network_request($/;"	f
wpas_dbus_signal_network_selected	dbus/dbus_new.c	/^void wpas_dbus_signal_network_selected(struct wpa_supplicant *wpa_s, int id)$/;"	f
wpas_dbus_signal_network_selected	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_network_selected($/;"	f
wpas_dbus_signal_p2p_go_neg_req	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_go_neg_req(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_go_neg_req	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_p2p_go_neg_req($/;"	f
wpas_dbus_signal_p2p_go_neg_resp	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_go_neg_resp(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_go_neg_resp	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_go_neg_resp(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_group_removed	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_group_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_group_removed	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_group_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_group_started	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_group_started(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_group_started	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_group_started(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_invitation_result	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_invitation_result(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_invitation_result	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_p2p_invitation_result($/;"	f
wpas_dbus_signal_p2p_peer_disconnected	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_peer_disconnected(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_peer_disconnected	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_peer_disconnected(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_peer_joined	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_peer_joined(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_peer_joined	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_peer_joined(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_provision_discovery	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_provision_discovery(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_provision_discovery	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_provision_discovery(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_sd_request	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_sd_request(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_sd_request	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_sd_request(struct wpa_supplicant *wpa_s, int freq,$/;"	f
wpas_dbus_signal_p2p_sd_response	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_sd_response(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_sd_response	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_sd_response(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_wps_failed	dbus/dbus_new.c	/^void wpas_dbus_signal_p2p_wps_failed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_p2p_wps_failed	dbus/dbus_new.h	/^wpas_dbus_signal_p2p_wps_failed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_peer	dbus/dbus_new.c	/^static void wpas_dbus_signal_peer(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_peer_device_found	dbus/dbus_new.c	/^void wpas_dbus_signal_peer_device_found(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_peer_device_found	dbus/dbus_new.h	/^wpas_dbus_signal_peer_device_found(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_peer_device_lost	dbus/dbus_new.c	/^void wpas_dbus_signal_peer_device_lost(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_peer_device_lost	dbus/dbus_new.h	/^wpas_dbus_signal_peer_device_lost(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_peer_groups_changed	dbus/dbus_new.c	/^void wpas_dbus_signal_peer_groups_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_peer_groups_changed	dbus/dbus_new.h	/^wpas_dbus_signal_peer_groups_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_persistent_group	dbus/dbus_new.c	/^static void wpas_dbus_signal_persistent_group(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_persistent_group_added	dbus/dbus_new.c	/^static void wpas_dbus_signal_persistent_group_added($/;"	f	file:
wpas_dbus_signal_persistent_group_removed	dbus/dbus_new.c	/^static void wpas_dbus_signal_persistent_group_removed($/;"	f	file:
wpas_dbus_signal_preq	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_preq(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_preq	dbus/dbus_new_handlers.c	/^void wpas_dbus_signal_preq(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_prop_changed	dbus/dbus_new.c	/^void wpas_dbus_signal_prop_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_prop_changed	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_prop_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_scan_done	dbus/dbus_new.c	/^void wpas_dbus_signal_scan_done(struct wpa_supplicant *wpa_s, int success)$/;"	f
wpas_dbus_signal_scan_done	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_scan_done(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_sta	dbus/dbus_new.c	/^static void wpas_dbus_signal_sta(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_dbus_signal_sta_authorized	dbus/dbus_new.c	/^void wpas_dbus_signal_sta_authorized(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_sta_authorized	dbus/dbus_new.h	/^void wpas_dbus_signal_sta_authorized(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_sta_deauthorized	dbus/dbus_new.c	/^void wpas_dbus_signal_sta_deauthorized(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_sta_deauthorized	dbus/dbus_new.h	/^void wpas_dbus_signal_sta_deauthorized(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_state_changed	dbus/dbus_new.h	244;"	d
wpas_dbus_signal_wps_cred	dbus/dbus_new.c	/^void wpas_dbus_signal_wps_cred(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_wps_cred	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_wps_cred(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_wps_event_fail	dbus/dbus_new.c	/^void wpas_dbus_signal_wps_event_fail(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_wps_event_fail	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_wps_event_fail($/;"	f
wpas_dbus_signal_wps_event_m2d	dbus/dbus_new.c	/^void wpas_dbus_signal_wps_event_m2d(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_wps_event_m2d	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_wps_event_m2d(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_signal_wps_event_success	dbus/dbus_new.c	/^void wpas_dbus_signal_wps_event_success(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_signal_wps_event_success	dbus/dbus_new.h	/^static inline void wpas_dbus_signal_wps_event_success($/;"	f
wpas_dbus_simple_array_array_property_getter	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_simple_array_array_property_getter(DBusMessageIter *iter,$/;"	f
wpas_dbus_simple_array_property_getter	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_simple_array_property_getter(DBusMessageIter *iter,$/;"	f
wpas_dbus_simple_property_getter	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_simple_property_getter(DBusMessageIter *iter,$/;"	f
wpas_dbus_simple_property_setter	dbus/dbus_new_handlers.c	/^dbus_bool_t wpas_dbus_simple_property_setter(DBusMessageIter *iter,$/;"	f
wpas_dbus_subscribe_noc	dbus/dbus_new.c	/^void wpas_dbus_subscribe_noc(struct wpas_dbus_priv *priv)$/;"	f
wpas_dbus_unregister_bss	dbus/dbus_new.c	/^int wpas_dbus_unregister_bss(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_bss	dbus/dbus_new.h	/^static inline int wpas_dbus_unregister_bss(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_iface	dbus/dbus_old.c	/^int wpas_dbus_unregister_iface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_unregister_iface	dbus/dbus_old.h	/^wpas_dbus_unregister_iface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_unregister_interface	dbus/dbus_new.c	/^int wpas_dbus_unregister_interface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_unregister_interface	dbus/dbus_new.h	/^static inline int wpas_dbus_unregister_interface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_dbus_unregister_network	dbus/dbus_new.c	/^int wpas_dbus_unregister_network(struct wpa_supplicant *wpa_s, int nid)$/;"	f
wpas_dbus_unregister_network	dbus/dbus_new.h	/^static inline int wpas_dbus_unregister_network(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_p2p_group	dbus/dbus_new.c	/^void wpas_dbus_unregister_p2p_group(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_p2p_group	dbus/dbus_new.h	/^wpas_dbus_unregister_p2p_group(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_p2p_groupmember	dbus/dbus_new.h	/^wpas_dbus_unregister_p2p_groupmember(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_peer	dbus/dbus_new.c	/^int wpas_dbus_unregister_peer(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_peer	dbus/dbus_new.h	/^static inline int wpas_dbus_unregister_peer(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_persistent_group	dbus/dbus_new.c	/^int wpas_dbus_unregister_persistent_group(struct wpa_supplicant *wpa_s,$/;"	f
wpas_dbus_unregister_persistent_group	dbus/dbus_new.h	/^static inline int wpas_dbus_unregister_persistent_group($/;"	f
wpas_dbus_unsubscribe_noc	dbus/dbus_new.c	/^void wpas_dbus_unsubscribe_noc(struct wpas_dbus_priv *priv)$/;"	f
wpas_delete_receive_sc	wpas_kay.c	/^static int wpas_delete_receive_sc(void *wpa_s, u32 channel)$/;"	f	file:
wpas_delete_transmit_sc	wpas_kay.c	/^static int wpas_delete_transmit_sc(void *wpa_s, u32 channel)$/;"	f	file:
wpas_dev_found	p2p_supplicant.c	/^static void wpas_dev_found(void *ctx, const u8 *addr,$/;"	f	file:
wpas_dev_lost	p2p_supplicant.c	/^static void wpas_dev_lost(void *ctx, const u8 *dev_addr)$/;"	f	file:
wpas_disable_receive_sa	wpas_kay.c	/^static int wpas_disable_receive_sa(void *wpa_s, u32 channel, u8 an)$/;"	f	file:
wpas_disable_transmit_sa	wpas_kay.c	/^static int wpas_disable_transmit_sa(void *wpa_s, u32 channel, u8 an)$/;"	f	file:
wpas_dispatch_bssid_method	dbus/dbus_old.c	/^static DBusMessage * wpas_dispatch_bssid_method(DBusMessage *message,$/;"	f	file:
wpas_dispatch_network_method	dbus/dbus_old.c	/^static DBusMessage * wpas_dispatch_network_method(DBusMessage *message,$/;"	f	file:
wpas_driver_bss_selection	wpa_supplicant.c	/^int wpas_driver_bss_selection(struct wpa_supplicant *wpa_s)$/;"	f
wpas_enable_controlled_port	wpas_kay.c	/^static int wpas_enable_controlled_port(void *wpa_s, Boolean enabled)$/;"	f	file:
wpas_enable_protect_frames	wpas_kay.c	/^static int wpas_enable_protect_frames(void *wpa_s, Boolean enabled)$/;"	f	file:
wpas_enable_receive_sa	wpas_kay.c	/^static int wpas_enable_receive_sa(void *wpa_s, u32 channel, u8 an)$/;"	f	file:
wpas_enable_transmit_sa	wpas_kay.c	/^static int wpas_enable_transmit_sa(void *wpa_s, u32 channel, u8 an)$/;"	f	file:
wpas_er_wps_nfc_report_handover	wps_supplicant.c	/^int wpas_er_wps_nfc_report_handover(struct wpa_supplicant *wpa_s,$/;"	f
wpas_event_deauth	events.c	/^static void wpas_event_deauth(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_event_dfs_cac_aborted	ap.c	/^void wpas_event_dfs_cac_aborted(struct wpa_supplicant *wpa_s,$/;"	f
wpas_event_dfs_cac_finished	ap.c	/^void wpas_event_dfs_cac_finished(struct wpa_supplicant *wpa_s,$/;"	f
wpas_event_dfs_cac_nop_finished	ap.c	/^void wpas_event_dfs_cac_nop_finished(struct wpa_supplicant *wpa_s,$/;"	f
wpas_event_dfs_cac_started	ap.c	/^void wpas_event_dfs_cac_started(struct wpa_supplicant *wpa_s,$/;"	f
wpas_event_dfs_radar_detected	ap.c	/^void wpas_event_dfs_radar_detected(struct wpa_supplicant *wpa_s,$/;"	f
wpas_event_disassoc	events.c	/^static void wpas_event_disassoc(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_event_disconnect	events.c	/^static void wpas_event_disconnect(struct wpa_supplicant *wpa_s, const u8 *addr,$/;"	f	file:
wpas_event_rx_mgmt_action	events.c	/^static void wpas_event_rx_mgmt_action(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_ext_capab_byte	wpa_supplicant.c	/^static void wpas_ext_capab_byte(struct wpa_supplicant *wpa_s, u8 *pos, int idx)$/;"	f	file:
wpas_find_stopped	p2p_supplicant.c	/^static void wpas_find_stopped(void *ctx)$/;"	f	file:
wpas_get_available_receive_sc	wpas_kay.c	/^static int wpas_get_available_receive_sc(void *wpa_s, u32 *channel)$/;"	f	file:
wpas_get_available_transmit_sc	wpas_kay.c	/^static int wpas_get_available_transmit_sc(void *wpa_s, u32 *channel)$/;"	f	file:
wpas_get_config_token	examples/wps-nfc.py	/^def wpas_get_config_token(id=None):$/;"	f
wpas_get_er_config_token	examples/wps-nfc.py	/^def wpas_get_er_config_token(uuid):$/;"	f
wpas_get_go_info	p2p_supplicant.c	/^static int wpas_get_go_info(void *ctx, u8 *intended_addr,$/;"	f	file:
wpas_get_handover_req	examples/p2p-nfc.py	/^def wpas_get_handover_req():$/;"	f
wpas_get_handover_req	examples/wps-nfc.py	/^def wpas_get_handover_req():$/;"	f
wpas_get_handover_req_wps	examples/p2p-nfc.py	/^def wpas_get_handover_req_wps():$/;"	f
wpas_get_handover_sel	examples/p2p-nfc.py	/^def wpas_get_handover_sel(tag=False):$/;"	f
wpas_get_handover_sel	examples/wps-nfc.py	/^def wpas_get_handover_sel(uuid):$/;"	f
wpas_get_handover_sel_wps	examples/p2p-nfc.py	/^def wpas_get_handover_sel_wps():$/;"	f
wpas_get_noa	p2p_supplicant.c	/^static int wpas_get_noa(void *ctx, const u8 *interface_addr, u8 *buf,$/;"	f	file:
wpas_get_p2p_client_iface	p2p_supplicant.c	/^struct wpa_supplicant * wpas_get_p2p_client_iface(struct wpa_supplicant *wpa_s,$/;"	f
wpas_get_p2p_go_iface	p2p_supplicant.c	/^struct wpa_supplicant * wpas_get_p2p_go_iface(struct wpa_supplicant *wpa_s,$/;"	f
wpas_get_p2p_group	p2p_supplicant.c	/^static struct wpa_supplicant * wpas_get_p2p_group(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_get_p2p_role	dbus/dbus_new_handlers_p2p.c	/^static enum wpas_p2p_role wpas_get_p2p_role(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_get_password_token	examples/wps-nfc.py	/^def wpas_get_password_token():$/;"	f
wpas_get_persistent_group	p2p_supplicant.c	/^static int wpas_get_persistent_group(void *ctx, const u8 *addr, const u8 *ssid,$/;"	f	file:
wpas_get_receive_lowest_pn	wpas_kay.c	/^static int wpas_get_receive_lowest_pn(void *wpa_s, u32 channel,$/;"	f	file:
wpas_get_ssid_pmf	wpa_supplicant.c	/^int wpas_get_ssid_pmf(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid)$/;"	f
wpas_get_transmit_next_pn	wpas_kay.c	/^static int wpas_get_transmit_next_pn(void *wpa_s, u32 channel,$/;"	f	file:
wpas_get_tx_interface	offchannel.c	/^wpas_get_tx_interface(struct wpa_supplicant *wpa_s, const u8 *src)$/;"	f	file:
wpas_global_ctrl_iface_ifname	ctrl_iface.c	/^static char * wpas_global_ctrl_iface_ifname(struct wpa_global *global,$/;"	f	file:
wpas_global_ctrl_iface_open_sock	ctrl_iface_unix.c	/^static int wpas_global_ctrl_iface_open_sock(struct wpa_global *global,$/;"	f	file:
wpas_global_ctrl_iface_redir	ctrl_iface.c	/^static char * wpas_global_ctrl_iface_redir(struct wpa_global *global,$/;"	f	file:
wpas_global_ctrl_iface_redir_p2p	ctrl_iface.c	/^static char * wpas_global_ctrl_iface_redir_p2p(struct wpa_global *global,$/;"	f	file:
wpas_global_ctrl_iface_redir_wfd	ctrl_iface.c	/^static char * wpas_global_ctrl_iface_redir_wfd(struct wpa_global *global,$/;"	f	file:
wpas_global_ctrl_iface_save_config	ctrl_iface.c	/^static int wpas_global_ctrl_iface_save_config(struct wpa_global *global)$/;"	f	file:
wpas_global_ctrl_iface_set	ctrl_iface.c	/^static int wpas_global_ctrl_iface_set(struct wpa_global *global, char *cmd)$/;"	f	file:
wpas_global_ctrl_iface_status	ctrl_iface.c	/^static int wpas_global_ctrl_iface_status(struct wpa_global *global,$/;"	f	file:
wpas_go_connected	p2p_supplicant.c	/^static int wpas_go_connected(void *ctx, const u8 *dev_addr)$/;"	f	file:
wpas_go_neg_completed	p2p_supplicant.c	/^static void wpas_go_neg_completed(void *ctx, struct p2p_go_neg_results *res)$/;"	f	file:
wpas_go_neg_req_rx	p2p_supplicant.c	/^static void wpas_go_neg_req_rx(void *ctx, const u8 *src, u16 dev_passwd_id)$/;"	f	file:
wpas_group_formation_completed	p2p_supplicant.c	/^static void wpas_group_formation_completed(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_hs20_add_indication	hs20_supplicant.c	/^void wpas_hs20_add_indication(struct wpabuf *buf, int pps_mo_id)$/;"	f
wpas_iface_message_handler	dbus/dbus_old.c	/^static DBusHandlerResult wpas_iface_message_handler(DBusConnection *connection,$/;"	f	file:
wpas_init_driver	wpa_supplicant.c	/^static int wpas_init_driver(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_init_ext_pw	wpa_supplicant.c	/^int wpas_init_ext_pw(struct wpa_supplicant *wpa_s)$/;"	f
wpas_invitation_process	p2p_supplicant.c	/^static u8 wpas_invitation_process(void *ctx, const u8 *sa, const u8 *bssid,$/;"	f	file:
wpas_invitation_received	p2p_supplicant.c	/^static void wpas_invitation_received(void *ctx, const u8 *sa, const u8 *bssid,$/;"	f	file:
wpas_invitation_result	p2p_supplicant.c	/^static void wpas_invitation_result(void *ctx, int status, const u8 *bssid,$/;"	f	file:
wpas_is_concurrent_session_active	p2p_supplicant.c	/^static int wpas_is_concurrent_session_active(void *ctx)$/;"	f	file:
wpas_is_p2p_prioritized	wpa_supplicant.c	/^int wpas_is_p2p_prioritized(struct wpa_supplicant *wpa_s)$/;"	f
wpas_mac_addr_rand_scan_clear	scan.c	/^void wpas_mac_addr_rand_scan_clear(struct wpa_supplicant *wpa_s,$/;"	f
wpas_mac_addr_rand_scan_set	scan.c	/^int wpas_mac_addr_rand_scan_set(struct wpa_supplicant *wpa_s,$/;"	f
wpas_macsec_deinit	wpas_kay.c	/^static int wpas_macsec_deinit(void *priv)$/;"	f	file:
wpas_macsec_init	wpas_kay.c	/^static int wpas_macsec_init(void *priv, struct macsec_init_params *params)$/;"	f	file:
wpas_mesh_add_interface	mesh.c	/^int wpas_mesh_add_interface(struct wpa_supplicant *wpa_s, char *ifname,$/;"	f
wpas_mesh_copy_groups	mesh.c	/^static void wpas_mesh_copy_groups(struct hostapd_data *bss,$/;"	f	file:
wpas_mesh_get_ifname	mesh.c	/^static int wpas_mesh_get_ifname(struct wpa_supplicant *wpa_s, char *ifname,$/;"	f	file:
wpas_mesh_scan_result_text	mesh.c	/^int wpas_mesh_scan_result_text(const u8 *ies, size_t ies_len, char *buf,$/;"	f
wpas_message_handler	dbus/dbus_old.c	/^static DBusHandlerResult wpas_message_handler(DBusConnection *connection,$/;"	f	file:
wpas_mode	config_ssid.h	/^	enum wpas_mode {$/;"	g	struct:wpa_ssid
wpas_module_tests	wpas_module_tests.c	/^int wpas_module_tests(void)$/;"	f
wpas_network_disabled	wpa_supplicant.c	/^int wpas_network_disabled(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid)$/;"	f
wpas_not_open_sock	action_handler.c	/^static int wpas_not_open_sock(struct wpa_supplicant *wpa_s, struct action_handle *act)$/;"	f	file:
wpas_notify_ap_scan_changed	notify.c	/^void wpas_notify_ap_scan_changed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_ap_sta_authorized	notify.c	/^static void wpas_notify_ap_sta_authorized(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_notify_ap_sta_deauthorized	notify.c	/^static void wpas_notify_ap_sta_deauthorized(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_notify_auth_changed	notify.c	/^void wpas_notify_auth_changed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_blob_added	notify.c	/^void wpas_notify_blob_added(struct wpa_supplicant *wpa_s, const char *name)$/;"	f
wpas_notify_blob_removed	notify.c	/^void wpas_notify_blob_removed(struct wpa_supplicant *wpa_s, const char *name)$/;"	f
wpas_notify_bss_added	notify.c	/^void wpas_notify_bss_added(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_freq_changed	notify.c	/^void wpas_notify_bss_freq_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_ies_changed	notify.c	/^void wpas_notify_bss_ies_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_mode_changed	notify.c	/^void wpas_notify_bss_mode_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_privacy_changed	notify.c	/^void wpas_notify_bss_privacy_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_rates_changed	notify.c	/^void wpas_notify_bss_rates_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_removed	notify.c	/^void wpas_notify_bss_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_rsnie_changed	notify.c	/^void wpas_notify_bss_rsnie_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_seen	notify.c	/^void wpas_notify_bss_seen(struct wpa_supplicant *wpa_s, unsigned int id)$/;"	f
wpas_notify_bss_signal_changed	notify.c	/^void wpas_notify_bss_signal_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_wpaie_changed	notify.c	/^void wpas_notify_bss_wpaie_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bss_wps_changed	notify.c	/^void wpas_notify_bss_wps_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_bssid_changed	notify.c	/^void wpas_notify_bssid_changed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_certification	notify.c	/^void wpas_notify_certification(struct wpa_supplicant *wpa_s, int depth,$/;"	f
wpas_notify_debug_level_changed	notify.c	/^void wpas_notify_debug_level_changed(struct wpa_global *global)$/;"	f
wpas_notify_debug_show_keys_changed	notify.c	/^void wpas_notify_debug_show_keys_changed(struct wpa_global *global)$/;"	f
wpas_notify_debug_timestamp_changed	notify.c	/^void wpas_notify_debug_timestamp_changed(struct wpa_global *global)$/;"	f
wpas_notify_disconnect_reason	notify.c	/^void wpas_notify_disconnect_reason(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_eap_status	notify.c	/^void wpas_notify_eap_status(struct wpa_supplicant *wpa_s, const char *status,$/;"	f
wpas_notify_iface_added	notify.c	/^int wpas_notify_iface_added(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_iface_removed	notify.c	/^void wpas_notify_iface_removed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_network_added	notify.c	/^void wpas_notify_network_added(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_network_bssid_set_changed	notify.c	/^void wpas_notify_network_bssid_set_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_network_changed	notify.c	/^void wpas_notify_network_changed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_network_enabled_changed	notify.c	/^void wpas_notify_network_enabled_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_network_removed	notify.c	/^void wpas_notify_network_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_network_request	notify.c	/^void wpas_notify_network_request(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_network_selected	notify.c	/^void wpas_notify_network_selected(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_network_type_changed	notify.c	/^void wpas_notify_network_type_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_device_found	notify.c	/^void wpas_notify_p2p_device_found(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_device_lost	notify.c	/^void wpas_notify_p2p_device_lost(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_go_neg_completed	notify.c	/^void wpas_notify_p2p_go_neg_completed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_go_neg_req	notify.c	/^void wpas_notify_p2p_go_neg_req(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_group_removed	notify.c	/^void wpas_notify_p2p_group_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_group_started	notify.c	/^void wpas_notify_p2p_group_started(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_invitation_result	notify.c	/^void wpas_notify_p2p_invitation_result(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_provision_discovery	notify.c	/^void wpas_notify_p2p_provision_discovery(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_sd_request	notify.c	/^void wpas_notify_p2p_sd_request(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_sd_response	notify.c	/^void wpas_notify_p2p_sd_response(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_p2p_wps_failed	notify.c	/^void wpas_notify_p2p_wps_failed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_persistent_group_added	notify.c	/^void wpas_notify_persistent_group_added(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_persistent_group_removed	notify.c	/^void wpas_notify_persistent_group_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_preq	notify.c	/^void wpas_notify_preq(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_resume	notify.c	/^void wpas_notify_resume(struct wpa_global *global)$/;"	f
wpas_notify_scan_done	notify.c	/^void wpas_notify_scan_done(struct wpa_supplicant *wpa_s, int success)$/;"	f
wpas_notify_scan_results	notify.c	/^void wpas_notify_scan_results(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_scanning	notify.c	/^void wpas_notify_scanning(struct wpa_supplicant *wpa_s)$/;"	f
wpas_notify_sta_authorized	notify.c	/^void wpas_notify_sta_authorized(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_state_changed	notify.c	/^void wpas_notify_state_changed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_supplicant_deinitialized	notify.c	/^void wpas_notify_supplicant_deinitialized(struct wpa_global *global)$/;"	f
wpas_notify_supplicant_initialized	notify.c	/^int wpas_notify_supplicant_initialized(struct wpa_global *global)$/;"	f
wpas_notify_suspend	notify.c	/^void wpas_notify_suspend(struct wpa_global *global)$/;"	f
wpas_notify_wps_credential	notify.c	/^void wpas_notify_wps_credential(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_wps_event_fail	notify.c	/^void wpas_notify_wps_event_fail(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_wps_event_m2d	notify.c	/^void wpas_notify_wps_event_m2d(struct wpa_supplicant *wpa_s,$/;"	f
wpas_notify_wps_event_success	notify.c	/^void wpas_notify_wps_event_success(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_4way_hs_failed	p2p_supplicant.c	/^int wpas_p2p_4way_hs_failed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_4way_hs_failed	p2p_supplicant.h	/^static inline int wpas_p2p_4way_hs_failed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_action_tx_clear	p2p_supplicant.c	/^static void wpas_p2p_action_tx_clear(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_add_chan	p2p_supplicant.c	/^static void wpas_p2p_add_chan(struct p2p_reg_class *reg, u8 chan)$/;"	f	file:
wpas_p2p_add_group_interface	p2p_supplicant.c	/^static int wpas_p2p_add_group_interface(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_add_p2pdev_interface	p2p_supplicant.c	/^int wpas_p2p_add_p2pdev_interface(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_add_persistent_group_client	p2p_supplicant.c	/^static void wpas_p2p_add_persistent_group_client(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_add_psk_list	p2p_supplicant.c	/^static void wpas_p2p_add_psk_list(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_ap_deinit	p2p_supplicant.c	/^void wpas_p2p_ap_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_ap_deinit	p2p_supplicant.h	/^static inline void wpas_p2p_ap_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_ap_setup_failed	p2p_supplicant.c	/^void wpas_p2p_ap_setup_failed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_ap_setup_failed	p2p_supplicant.h	/^static inline void wpas_p2p_ap_setup_failed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_assoc_req_ie	p2p_supplicant.c	/^int wpas_p2p_assoc_req_ie(struct wpa_supplicant *wpa_s, struct wpa_bss *bss,$/;"	f
wpas_p2p_auth_go_neg	p2p_supplicant.c	/^static int wpas_p2p_auth_go_neg(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_cancel	p2p_supplicant.c	/^int wpas_p2p_cancel(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_cancel_remain_on_channel_cb	p2p_supplicant.c	/^void wpas_p2p_cancel_remain_on_channel_cb(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_cancel_remain_on_channel_cb	p2p_supplicant.h	/^wpas_p2p_cancel_remain_on_channel_cb(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_check_join_scan_limit	p2p_supplicant.c	/^static void wpas_p2p_check_join_scan_limit(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_clear_pending_action_tx	p2p_supplicant.c	/^static void wpas_p2p_clear_pending_action_tx(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_cli_freq	p2p_supplicant.c	/^static int wpas_p2p_cli_freq(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_clone_config	p2p_supplicant.c	/^static void wpas_p2p_clone_config(struct wpa_supplicant *dst,$/;"	f	file:
wpas_p2p_completed	p2p_supplicant.c	/^void wpas_p2p_completed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_completed	p2p_supplicant.h	/^static inline void wpas_p2p_completed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_connect	p2p_supplicant.c	/^int wpas_p2p_connect(struct wpa_supplicant *wpa_s, const u8 *peer_addr,$/;"	f
wpas_p2p_create_iface	p2p_supplicant.c	/^static int wpas_p2p_create_iface(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_cross_connect_setup	p2p_supplicant.c	/^static void wpas_p2p_cross_connect_setup(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_deauth_notif	p2p_supplicant.c	/^int wpas_p2p_deauth_notif(struct wpa_supplicant *wpa_s, const u8 *bssid,$/;"	f
wpas_p2p_debug_print	p2p_supplicant.c	/^static void wpas_p2p_debug_print(void *ctx, int level, const char *msg)$/;"	f	file:
wpas_p2p_default_channels	p2p_supplicant.c	/^static int wpas_p2p_default_channels(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_deinit	p2p_supplicant.c	/^void wpas_p2p_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_deinit	p2p_supplicant.h	/^static inline void wpas_p2p_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_deinit_global	p2p_supplicant.c	/^static void wpas_p2p_deinit_global(struct wpa_global *global)$/;"	f	file:
wpas_p2p_deinit_iface	p2p_supplicant.c	/^void wpas_p2p_deinit_iface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_deinit_iface	p2p_supplicant.h	/^static inline void wpas_p2p_deinit_iface(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_disable_cross_connect	p2p_supplicant.c	/^static void wpas_p2p_disable_cross_connect(struct wpa_supplicant *uplink)$/;"	f	file:
wpas_p2p_disallowed_freq	p2p_supplicant.c	/^static int wpas_p2p_disallowed_freq(struct wpa_global *global,$/;"	f	file:
wpas_p2p_disassoc_notif	p2p_supplicant.c	/^void wpas_p2p_disassoc_notif(struct wpa_supplicant *wpa_s, const u8 *bssid,$/;"	f
wpas_p2p_disconnect	p2p_supplicant.c	/^int wpas_p2p_disconnect(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_disconnect_safely	p2p_supplicant.c	/^static int wpas_p2p_disconnect_safely(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_enable_cross_connect	p2p_supplicant.c	/^static void wpas_p2p_enable_cross_connect(struct wpa_supplicant *uplink)$/;"	f	file:
wpas_p2p_ext_listen	p2p_supplicant.c	/^int wpas_p2p_ext_listen(struct wpa_supplicant *wpa_s, unsigned int period,$/;"	f
wpas_p2p_fallback_to_go_neg	p2p_supplicant.c	/^static int wpas_p2p_fallback_to_go_neg(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_find	p2p_supplicant.c	/^int wpas_p2p_find(struct wpa_supplicant *wpa_s, unsigned int timeout,$/;"	f
wpas_p2p_get_center_80mhz	p2p_supplicant.c	/^static int wpas_p2p_get_center_80mhz(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_get_go_group	p2p_supplicant.c	/^wpas_p2p_get_go_group(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_get_group_iface	p2p_supplicant.c	/^wpas_p2p_get_group_iface(struct wpa_supplicant *wpa_s, int addr_allocated,$/;"	f	file:
wpas_p2p_get_group_ifname	p2p_supplicant.c	/^static void wpas_p2p_get_group_ifname(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_get_ht40_mode	p2p_supplicant.c	/^int wpas_p2p_get_ht40_mode(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_get_persistent	p2p_supplicant.c	/^struct wpa_ssid * wpas_p2p_get_persistent(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_get_persistent_go	p2p_supplicant.c	/^wpas_p2p_get_persistent_go(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_get_vht80_center	p2p_supplicant.c	/^int wpas_p2p_get_vht80_center(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_group_add	p2p_supplicant.c	/^int wpas_p2p_group_add(struct wpa_supplicant *wpa_s, int persistent_group,$/;"	f
wpas_p2p_group_add_persistent	p2p_supplicant.c	/^int wpas_p2p_group_add_persistent(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_group_deinit	p2p_supplicant.c	/^static void wpas_p2p_group_deinit(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_group_delete	p2p_supplicant.c	/^static int wpas_p2p_group_delete(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_group_formation_failed	p2p_supplicant.c	/^void wpas_p2p_group_formation_failed(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_group_formation_timeout	p2p_supplicant.c	/^static void wpas_p2p_group_formation_timeout(void *eloop_ctx,$/;"	f	file:
wpas_p2p_group_freq_conflict	p2p_supplicant.c	/^static void wpas_p2p_group_freq_conflict(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_p2p_group_go_ssid	p2p_supplicant.c	/^static struct wpa_ssid * wpas_p2p_group_go_ssid(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_group_idle_timeout	p2p_supplicant.c	/^static void wpas_p2p_group_idle_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_p2p_group_init	p2p_supplicant.c	/^struct p2p_group * wpas_p2p_group_init(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_group_remove	p2p_supplicant.c	/^int wpas_p2p_group_remove(struct wpa_supplicant *wpa_s, const char *ifname)$/;"	f
wpas_p2p_group_remove	p2p_supplicant.h	/^static inline int wpas_p2p_group_remove(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_group_started	p2p_supplicant.c	/^static void wpas_p2p_group_started(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_grpform_fail_after_wps	p2p_supplicant.c	/^static void wpas_p2p_grpform_fail_after_wps(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_handle_frequency_conflicts	p2p_supplicant.c	/^int wpas_p2p_handle_frequency_conflicts(struct wpa_supplicant *wpa_s, int freq,$/;"	f
wpas_p2p_idle_update	p2p_supplicant.c	/^static void wpas_p2p_idle_update(void *ctx, int idle)$/;"	f	file:
wpas_p2p_ie_update	p2p_supplicant.c	/^static void wpas_p2p_ie_update(void *ctx, struct wpabuf *beacon_ies,$/;"	f	file:
wpas_p2p_if_type	p2p_supplicant.c	/^static enum wpa_driver_if_type wpas_p2p_if_type(int p2p_group_interface)$/;"	f	file:
wpas_p2p_in_progress	p2p_supplicant.c	/^int wpas_p2p_in_progress(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_in_progress	p2p_supplicant.h	/^static inline int wpas_p2p_in_progress(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_indicate_state_change	p2p_supplicant.c	/^void wpas_p2p_indicate_state_change(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_indicate_state_change	p2p_supplicant.h	/^static inline void wpas_p2p_indicate_state_change(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_init	p2p_supplicant.c	/^int wpas_p2p_init(struct wpa_global *global, struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_init	p2p_supplicant.h	/^wpas_p2p_init(struct wpa_global *global, struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_init_go_params	p2p_supplicant.c	/^static int wpas_p2p_init_go_params(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_init_group_interface	p2p_supplicant.c	/^wpas_p2p_init_group_interface(struct wpa_supplicant *wpa_s, int go)$/;"	f	file:
wpas_p2p_interface_unavailable	p2p_supplicant.c	/^void wpas_p2p_interface_unavailable(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_interface_unavailable	p2p_supplicant.h	/^static inline void wpas_p2p_interface_unavailable(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_invite	p2p_supplicant.c	/^int wpas_p2p_invite(struct wpa_supplicant *wpa_s, const u8 *peer_addr,$/;"	f
wpas_p2p_invite_group	p2p_supplicant.c	/^int wpas_p2p_invite_group(struct wpa_supplicant *wpa_s, const char *ifname,$/;"	f
wpas_p2p_is_client	p2p_supplicant.c	/^static int wpas_p2p_is_client(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_join	p2p_supplicant.c	/^static int wpas_p2p_join(struct wpa_supplicant *wpa_s, const u8 *iface_addr,$/;"	f	file:
wpas_p2p_join_scan	p2p_supplicant.c	/^static void wpas_p2p_join_scan(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_p2p_join_scan_req	p2p_supplicant.c	/^static void wpas_p2p_join_scan_req(struct wpa_supplicant *wpa_s, int freq,$/;"	f	file:
wpas_p2p_join_start	p2p_supplicant.c	/^static int wpas_p2p_join_start(struct wpa_supplicant *wpa_s, int freq,$/;"	f	file:
wpas_p2p_listen	p2p_supplicant.c	/^int wpas_p2p_listen(struct wpa_supplicant *wpa_s, unsigned int timeout)$/;"	f
wpas_p2p_listen_start	p2p_supplicant.c	/^int wpas_p2p_listen_start(struct wpa_supplicant *wpa_s, unsigned int timeout)$/;"	f
wpas_p2p_listen_work	p2p_supplicant.c	/^struct wpas_p2p_listen_work {$/;"	s	file:
wpas_p2p_listen_work_done	p2p_supplicant.c	/^static void wpas_p2p_listen_work_done(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_listen_work_free	p2p_supplicant.c	/^static void wpas_p2p_listen_work_free(struct wpas_p2p_listen_work *lwork)$/;"	f	file:
wpas_p2p_long_listen_timeout	p2p_supplicant.c	/^static void wpas_p2p_long_listen_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_p2p_network_removed	p2p_supplicant.c	/^void wpas_p2p_network_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_network_removed	p2p_supplicant.h	/^static inline void wpas_p2p_network_removed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_new_psk_cb	p2p_supplicant.c	/^void wpas_p2p_new_psk_cb(struct wpa_supplicant *wpa_s, const u8 *mac_addr,$/;"	f
wpas_p2p_nfc_auth_join	p2p_supplicant.c	/^static int wpas_p2p_nfc_auth_join(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_nfc_connection_handover	p2p_supplicant.c	/^static int wpas_p2p_nfc_connection_handover(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_nfc_handover	p2p_supplicant.c	/^static struct wpabuf * wpas_p2p_nfc_handover(int ndef, struct wpabuf *wsc,$/;"	f	file:
wpas_p2p_nfc_handover_req	p2p_supplicant.c	/^struct wpabuf * wpas_p2p_nfc_handover_req(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_nfc_handover_sel	p2p_supplicant.c	/^struct wpabuf * wpas_p2p_nfc_handover_sel(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_nfc_init_go_neg	p2p_supplicant.c	/^static int wpas_p2p_nfc_init_go_neg(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_nfc_join_group	p2p_supplicant.c	/^static int wpas_p2p_nfc_join_group(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_nfc_report_handover	p2p_supplicant.c	/^int wpas_p2p_nfc_report_handover(struct wpa_supplicant *wpa_s, int init,$/;"	f
wpas_p2p_nfc_resp_go_neg	p2p_supplicant.c	/^static int wpas_p2p_nfc_resp_go_neg(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_nfc_tag_enabled	p2p_supplicant.c	/^int wpas_p2p_nfc_tag_enabled(struct wpa_supplicant *wpa_s, int enabled)$/;"	f
wpas_p2p_nfc_tag_process	p2p_supplicant.c	/^int wpas_p2p_nfc_tag_process(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_notif_connected	p2p_supplicant.c	/^void wpas_p2p_notif_connected(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_notif_connected	p2p_supplicant.h	/^static inline void wpas_p2p_notif_connected(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_notif_disconnected	p2p_supplicant.c	/^void wpas_p2p_notif_disconnected(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_notif_disconnected	p2p_supplicant.h	/^static inline void wpas_p2p_notif_disconnected(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_notif_pbc_overlap	p2p_supplicant.c	/^int wpas_p2p_notif_pbc_overlap(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_notif_pbc_overlap	p2p_supplicant.h	/^static inline int wpas_p2p_notif_pbc_overlap(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_notify_ap_sta_authorized	p2p_supplicant.c	/^void wpas_p2p_notify_ap_sta_authorized(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_num_unused_channels	p2p_supplicant.c	/^static int wpas_p2p_num_unused_channels(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_optimize_listen_channel	p2p_supplicant.c	/^static void wpas_p2p_optimize_listen_channel(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_pbc_overlap_cb	p2p_supplicant.c	/^void wpas_p2p_pbc_overlap_cb(void *eloop_ctx, void *timeout_ctx)$/;"	f
wpas_p2p_peer_go	p2p_supplicant.c	/^static int wpas_p2p_peer_go(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_persistent_group	p2p_supplicant.c	/^static int wpas_p2p_persistent_group(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_pick_best_used_freq	p2p_supplicant.c	/^static int wpas_p2p_pick_best_used_freq(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_presence_req	p2p_supplicant.c	/^int wpas_p2p_presence_req(struct wpa_supplicant *wpa_s, u32 duration1,$/;"	f
wpas_p2p_probe_req_rx	p2p_supplicant.c	/^int wpas_p2p_probe_req_rx(struct wpa_supplicant *wpa_s, const u8 *addr,$/;"	f
wpas_p2p_probe_req_rx	p2p_supplicant.h	/^static inline int wpas_p2p_probe_req_rx(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_prov_disc	p2p_supplicant.c	/^int wpas_p2p_prov_disc(struct wpa_supplicant *wpa_s, const u8 *peer_addr,$/;"	f
wpas_p2p_prov_disc_use	p2p_supplicant.h	/^enum wpas_p2p_prov_disc_use {$/;"	g
wpas_p2p_psk_failure_removal	p2p_supplicant.c	/^static void wpas_p2p_psk_failure_removal(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_p2p_reject	p2p_supplicant.c	/^int wpas_p2p_reject(struct wpa_supplicant *wpa_s, const u8 *addr)$/;"	f
wpas_p2p_remain_on_channel_cb	p2p_supplicant.c	/^void wpas_p2p_remain_on_channel_cb(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_remain_on_channel_cb	p2p_supplicant.h	/^static inline void wpas_p2p_remain_on_channel_cb(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_remove_client	p2p_supplicant.c	/^void wpas_p2p_remove_client(struct wpa_supplicant *wpa_s, const u8 *peer,$/;"	f
wpas_p2p_remove_client_go	p2p_supplicant.c	/^static void wpas_p2p_remove_client_go(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_remove_pending_group_interface	p2p_supplicant.c	/^static void wpas_p2p_remove_pending_group_interface($/;"	f	file:
wpas_p2p_remove_psk	p2p_supplicant.c	/^static void wpas_p2p_remove_psk(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_remove_psk_entry	p2p_supplicant.c	/^static int wpas_p2p_remove_psk_entry(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_role	dbus/dbus_new_handlers_p2p.c	/^enum wpas_p2p_role {$/;"	g	file:
wpas_p2p_rx_action	p2p_supplicant.c	/^void wpas_p2p_rx_action(struct wpa_supplicant *wpa_s, const u8 *da,$/;"	f
wpas_p2p_rx_action	p2p_supplicant.h	/^static inline void wpas_p2p_rx_action(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_scan	p2p_supplicant.c	/^static int wpas_p2p_scan(void *ctx, enum p2p_scan_type type, int freq,$/;"	f	file:
wpas_p2p_scan_ie	p2p_supplicant.c	/^void wpas_p2p_scan_ie(struct wpa_supplicant *wpa_s, struct wpabuf *ies)$/;"	f
wpas_p2p_scan_no_go_seen	p2p_supplicant.c	/^int wpas_p2p_scan_no_go_seen(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_scan_res_handler	p2p_supplicant.c	/^static void wpas_p2p_scan_res_handler(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_scan_res_ignore	p2p_supplicant.c	/^static void wpas_p2p_scan_res_ignore(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_scan_res_ignore_search	p2p_supplicant.c	/^static void wpas_p2p_scan_res_ignore_search(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_scan_res_join	p2p_supplicant.c	/^static void wpas_p2p_scan_res_join(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_scan_result_text	p2p_supplicant.c	/^int wpas_p2p_scan_result_text(const u8 *ies, size_t ies_len, char *buf,$/;"	f
wpas_p2p_sd_cancel_request	p2p_supplicant.c	/^int wpas_p2p_sd_cancel_request(struct wpa_supplicant *wpa_s, u64 req)$/;"	f
wpas_p2p_sd_request	p2p_supplicant.c	/^u64 wpas_p2p_sd_request(struct wpa_supplicant *wpa_s, const u8 *dst,$/;"	f
wpas_p2p_sd_request_asp	p2p_supplicant.c	/^u64 wpas_p2p_sd_request_asp(struct wpa_supplicant *wpa_s, const u8 *dst, u8 id,$/;"	f
wpas_p2p_sd_request_upnp	p2p_supplicant.c	/^u64 wpas_p2p_sd_request_upnp(struct wpa_supplicant *wpa_s, const u8 *dst,$/;"	f
wpas_p2p_sd_request_wfd	p2p_supplicant.c	/^static u64 wpas_p2p_sd_request_wfd(struct wpa_supplicant *wpa_s, const u8 *dst,$/;"	f	file:
wpas_p2p_sd_request_wifi_display	p2p_supplicant.c	/^u64 wpas_p2p_sd_request_wifi_display(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_sd_response	p2p_supplicant.c	/^void wpas_p2p_sd_response(struct wpa_supplicant *wpa_s, int freq,$/;"	f
wpas_p2p_sd_service_update	p2p_supplicant.c	/^void wpas_p2p_sd_service_update(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_search_delay	p2p_supplicant.c	/^unsigned int wpas_p2p_search_delay(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_search_social_channel	p2p_supplicant.c	/^static int wpas_p2p_search_social_channel(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_select_freq_no_pref	p2p_supplicant.c	/^static int wpas_p2p_select_freq_no_pref(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_select_go_freq	p2p_supplicant.c	/^static int wpas_p2p_select_go_freq(struct wpa_supplicant *wpa_s, int freq)$/;"	f	file:
wpas_p2p_send_action_tx_status	p2p_supplicant.c	/^static void wpas_p2p_send_action_tx_status(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_send_action_work_timeout	p2p_supplicant.c	/^static void wpas_p2p_send_action_work_timeout(void *eloop_ctx,$/;"	f	file:
wpas_p2p_service_add_asp	p2p_supplicant.c	/^int wpas_p2p_service_add_asp(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_service_add_bonjour	p2p_supplicant.c	/^int wpas_p2p_service_add_bonjour(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_service_add_upnp	p2p_supplicant.c	/^int wpas_p2p_service_add_upnp(struct wpa_supplicant *wpa_s, u8 version,$/;"	f
wpas_p2p_service_del_asp	p2p_supplicant.c	/^int wpas_p2p_service_del_asp(struct wpa_supplicant *wpa_s, u32 adv_id)$/;"	f
wpas_p2p_service_del_bonjour	p2p_supplicant.c	/^int wpas_p2p_service_del_bonjour(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_service_del_upnp	p2p_supplicant.c	/^int wpas_p2p_service_del_upnp(struct wpa_supplicant *wpa_s, u8 version,$/;"	f
wpas_p2p_service_flush	p2p_supplicant.c	/^void wpas_p2p_service_flush(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_service_get_bonjour	p2p_supplicant.c	/^wpas_p2p_service_get_bonjour(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_service_get_upnp	p2p_supplicant.c	/^wpas_p2p_service_get_upnp(struct wpa_supplicant *wpa_s, u8 version,$/;"	f	file:
wpas_p2p_service_p2ps_id_exists	p2p_supplicant.c	/^int wpas_p2p_service_p2ps_id_exists(struct wpa_supplicant *wpa_s, u32 adv_id)$/;"	f
wpas_p2p_set_cross_connect	p2p_supplicant.c	/^int wpas_p2p_set_cross_connect(struct wpa_supplicant *wpa_s, int enabled)$/;"	f
wpas_p2p_set_group_idle_timeout	p2p_supplicant.c	/^static void wpas_p2p_set_group_idle_timeout(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_set_noa	p2p_supplicant.c	/^int wpas_p2p_set_noa(struct wpa_supplicant *wpa_s, u8 count, int start,$/;"	f
wpas_p2p_set_own_freq_preference	p2p_supplicant.c	/^static void wpas_p2p_set_own_freq_preference(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_setup_channels	p2p_supplicant.c	/^static int wpas_p2p_setup_channels(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_setup_freqs	p2p_supplicant.c	/^static int wpas_p2p_setup_freqs(struct wpa_supplicant *wpa_s, int freq,$/;"	f	file:
wpas_p2p_srv_bonjour_free	p2p_supplicant.c	/^static void wpas_p2p_srv_bonjour_free(struct p2p_srv_bonjour *bsrv)$/;"	f	file:
wpas_p2p_srv_upnp_free	p2p_supplicant.c	/^static void wpas_p2p_srv_upnp_free(struct p2p_srv_upnp *usrv)$/;"	f	file:
wpas_p2p_start_go_neg	p2p_supplicant.c	/^static int wpas_p2p_start_go_neg(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_stop_find	p2p_supplicant.c	/^void wpas_p2p_stop_find(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_stop_find_oper	p2p_supplicant.c	/^static void wpas_p2p_stop_find_oper(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_p2p_store_persistent_group	p2p_supplicant.c	/^static int wpas_p2p_store_persistent_group(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_trigger_scan_cb	p2p_supplicant.c	/^static void wpas_p2p_trigger_scan_cb(struct wpa_radio_work *work, int deinit)$/;"	f	file:
wpas_p2p_unauthorize	p2p_supplicant.c	/^int wpas_p2p_unauthorize(struct wpa_supplicant *wpa_s, const char *addr)$/;"	f
wpas_p2p_update_best_channels	p2p_supplicant.c	/^void wpas_p2p_update_best_channels(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_update_best_channels	p2p_supplicant.h	/^static inline void wpas_p2p_update_best_channels(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_update_channel_list	p2p_supplicant.c	/^void wpas_p2p_update_channel_list(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_update_channel_list	p2p_supplicant.h	/^static inline void wpas_p2p_update_channel_list(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_update_config	p2p_supplicant.c	/^void wpas_p2p_update_config(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_update_config	p2p_supplicant.h	/^static inline void wpas_p2p_update_config(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_valid_oper_freqs	p2p_supplicant.c	/^wpas_p2p_valid_oper_freqs(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_verify_80mhz	p2p_supplicant.c	/^static enum chan_allowed wpas_p2p_verify_80mhz(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_verify_channel	p2p_supplicant.c	/^static enum chan_allowed wpas_p2p_verify_channel(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_p2p_wps_eapol_cb	p2p_supplicant.c	/^int wpas_p2p_wps_eapol_cb(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_wps_eapol_cb	p2p_supplicant.h	/^static inline int wpas_p2p_wps_eapol_cb(struct wpa_supplicant *wpa_s)$/;"	f
wpas_p2p_wps_failed	p2p_supplicant.c	/^void wpas_p2p_wps_failed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_wps_failed	p2p_supplicant.h	/^static inline void wpas_p2p_wps_failed(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2p_wps_success	p2p_supplicant.c	/^void wpas_p2p_wps_success(struct wpa_supplicant *wpa_s, const u8 *peer_addr,$/;"	f
wpas_p2p_wps_success	p2p_supplicant.h	/^static inline void wpas_p2p_wps_success(struct wpa_supplicant *wpa_s,$/;"	f
wpas_p2ps_prov_complete	p2p_supplicant.c	/^static void wpas_p2ps_prov_complete(void *ctx, u8 status, const u8 *dev,$/;"	f	file:
wpas_presence_resp	p2p_supplicant.c	/^static void wpas_presence_resp(void *ctx, const u8 *src, u8 status,$/;"	f	file:
wpas_prov_disc_fail	p2p_supplicant.c	/^static void wpas_prov_disc_fail(void *ctx, const u8 *peer,$/;"	f	file:
wpas_prov_disc_local_display	p2p_supplicant.c	/^static void wpas_prov_disc_local_display(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_prov_disc_local_keypad	p2p_supplicant.c	/^static void wpas_prov_disc_local_keypad(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_prov_disc_req	p2p_supplicant.c	/^static void wpas_prov_disc_req(void *ctx, const u8 *peer, u16 config_methods,$/;"	f	file:
wpas_prov_disc_resp	p2p_supplicant.c	/^static void wpas_prov_disc_resp(void *ctx, const u8 *peer, u16 config_methods)$/;"	f	file:
wpas_prov_disc_resp_cb	p2p_supplicant.c	/^static int wpas_prov_disc_resp_cb(void *ctx)$/;"	f	file:
wpas_qos_map_set	events.c	/^static int wpas_qos_map_set(struct wpa_supplicant *wpa_s, const u8 *qos_map,$/;"	f	file:
wpas_registered	wpa_priv.c	/^	int wpas_registered;$/;"	m	struct:wpa_priv_interface	file:
wpas_remove_persistent_client	p2p_supplicant.c	/^static void wpas_remove_persistent_client(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_remove_persistent_peer	p2p_supplicant.c	/^static void wpas_remove_persistent_peer(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_remove_stale_groups	p2p_supplicant.c	/^static int wpas_remove_stale_groups(void *ctx, const u8 *peer, const u8 *go,$/;"	f	file:
wpas_report_handover	examples/p2p-nfc.py	/^def wpas_report_handover(req, sel, type):$/;"	f
wpas_report_handover	examples/wps-nfc.py	/^def wpas_report_handover(req, sel, type):$/;"	f
wpas_report_handover_wsc	examples/p2p-nfc.py	/^def wpas_report_handover_wsc(req, sel, type):$/;"	f
wpas_request_connection	wpa_supplicant.c	/^void wpas_request_connection(struct wpa_supplicant *wpa_s)$/;"	f
wpas_rrm_handle_link_measurement_request	wpa_supplicant.c	/^void wpas_rrm_handle_link_measurement_request(struct wpa_supplicant *wpa_s,$/;"	f
wpas_rrm_neighbor_rep_timeout_handler	wpa_supplicant.c	/^static void wpas_rrm_neighbor_rep_timeout_handler(void *data, void *user_ctx)$/;"	f	file:
wpas_rrm_process_neighbor_rep	wpa_supplicant.c	/^void wpas_rrm_process_neighbor_rep(struct wpa_supplicant *wpa_s,$/;"	f
wpas_rrm_reset	wpa_supplicant.c	/^void wpas_rrm_reset(struct wpa_supplicant *wpa_s)$/;"	f
wpas_rrm_send_neighbor_rep_request	wpa_supplicant.c	/^int wpas_rrm_send_neighbor_rep_request(struct wpa_supplicant *wpa_s,$/;"	f
wpas_scan_scheduled	scan.c	/^int wpas_scan_scheduled(struct wpa_supplicant *wpa_s)$/;"	f
wpas_sd_add_bad_request	p2p_supplicant.c	/^static void wpas_sd_add_bad_request(struct wpabuf *resp, u8 srv_proto,$/;"	f	file:
wpas_sd_add_empty	p2p_supplicant.c	/^static void wpas_sd_add_empty(struct wpabuf *resp, u8 srv_proto,$/;"	f	file:
wpas_sd_add_not_found	p2p_supplicant.c	/^static void wpas_sd_add_not_found(struct wpabuf *resp, u8 srv_proto,$/;"	f	file:
wpas_sd_add_proto_not_avail	p2p_supplicant.c	/^static void wpas_sd_add_proto_not_avail(struct wpabuf *resp, u8 srv_proto,$/;"	f	file:
wpas_sd_all_bonjour	p2p_supplicant.c	/^static void wpas_sd_all_bonjour(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_sd_all_upnp	p2p_supplicant.c	/^static void wpas_sd_all_upnp(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_sd_p2ps_serv_response	p2p_supplicant.c	/^static void wpas_sd_p2ps_serv_response(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_sd_req_asp	p2p_supplicant.c	/^static void wpas_sd_req_asp(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_sd_req_bonjour	p2p_supplicant.c	/^static void wpas_sd_req_bonjour(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_sd_req_upnp	p2p_supplicant.c	/^static void wpas_sd_req_upnp(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_sd_req_wfd	p2p_supplicant.c	/^static void wpas_sd_req_wfd(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_sd_request	p2p_supplicant.c	/^static void wpas_sd_request(void *ctx, int freq, const u8 *sa, u8 dialog_token,$/;"	f	file:
wpas_sd_response	p2p_supplicant.c	/^static void wpas_sd_response(void *ctx, const u8 *sa, u16 update_indic,$/;"	f	file:
wpas_select_network_from_last_scan	events.c	/^static int wpas_select_network_from_last_scan(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_send_action	p2p_supplicant.c	/^static int wpas_send_action(void *ctx, unsigned int freq, const u8 *dst,$/;"	f	file:
wpas_send_action_cb	offchannel.c	/^static void wpas_send_action_cb(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_send_action_cb	p2p_supplicant.c	/^static void wpas_send_action_cb(struct wpa_radio_work *work, int deinit)$/;"	f	file:
wpas_send_action_done	p2p_supplicant.c	/^static void wpas_send_action_done(void *ctx)$/;"	f	file:
wpas_send_action_work	p2p_supplicant.c	/^static int wpas_send_action_work(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_send_probe_resp	p2p_supplicant.c	/^static int wpas_send_probe_resp(void *ctx, const struct wpabuf *buf)$/;"	f	file:
wpas_set_current_cipher_suite	wpas_kay.c	/^static int wpas_set_current_cipher_suite(void *wpa_s, const u8 *cs,$/;"	f	file:
wpas_set_pkcs11_engine_and_module_path	wpa_supplicant.c	/^int wpas_set_pkcs11_engine_and_module_path(struct wpa_supplicant *wpa_s,$/;"	f
wpas_set_replay_protect	wpas_kay.c	/^static int wpas_set_replay_protect(void *wpa_s, Boolean enabled, u32 window)$/;"	f	file:
wpas_set_transmit_next_pn	wpas_kay.c	/^static int wpas_set_transmit_next_pn(void *wpa_s, u32 channel,$/;"	f	file:
wpas_set_wowlan_triggers	wpa_supplicant.c	/^static int wpas_set_wowlan_triggers(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_start_assoc_cb	wpa_supplicant.c	/^static void wpas_start_assoc_cb(struct wpa_radio_work *work, int deinit)$/;"	f	file:
wpas_start_listen	p2p_supplicant.c	/^static int wpas_start_listen(void *ctx, unsigned int freq,$/;"	f	file:
wpas_start_listen_cb	p2p_supplicant.c	/^static void wpas_start_listen_cb(struct wpa_radio_work *work, int deinit)$/;"	f	file:
wpas_start_p2p_client	p2p_supplicant.c	/^static int wpas_start_p2p_client(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_start_pno	scan.c	/^int wpas_start_pno(struct wpa_supplicant *wpa_s)$/;"	f
wpas_start_wps_enrollee	p2p_supplicant.c	/^static void wpas_start_wps_enrollee(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_start_wps_go	p2p_supplicant.c	/^static void wpas_start_wps_go(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_stop_listen	p2p_supplicant.c	/^static void wpas_stop_listen(void *ctx)$/;"	f	file:
wpas_stop_pno	scan.c	/^int wpas_stop_pno(struct wpa_supplicant *wpa_s)$/;"	f
wpas_tag_read	examples/p2p-nfc.py	/^def wpas_tag_read(message):$/;"	f
wpas_tag_read	examples/wps-nfc.py	/^def wpas_tag_read(message):$/;"	f
wpas_temp_disabled	events.c	/^static int wpas_temp_disabled(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_trigger_scan_cb	scan.c	/^static void wpas_trigger_scan_cb(struct wpa_radio_work *work, int deinit)$/;"	f	file:
wpas_update_random_addr	wpa_supplicant.c	/^int wpas_update_random_addr(struct wpa_supplicant *wpa_s, int style)$/;"	f
wpas_update_random_addr_disassoc	wpa_supplicant.c	/^int wpas_update_random_addr_disassoc(struct wpa_supplicant *wpa_s)$/;"	f
wpas_valid_bss	wpa_supplicant.c	/^static int wpas_valid_bss(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_valid_bss_ssid	wpa_supplicant.c	/^int wpas_valid_bss_ssid(struct wpa_supplicant *wpa_s, struct wpa_bss *test_bss,$/;"	f
wpas_valid_ssid	wpa_supplicant.c	/^static int wpas_valid_ssid(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wmm_ac_addts	wmm_ac.c	/^int wpas_wmm_ac_addts(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wmm_ac_delts	wmm_ac.c	/^int wpas_wmm_ac_delts(struct wpa_supplicant *wpa_s, u8 tsid)$/;"	f
wpas_wmm_ac_status	wmm_ac.c	/^int wpas_wmm_ac_status(struct wpa_supplicant *wpa_s, char *buf, size_t buflen)$/;"	f
wpas_wps_add_network	wps_supplicant.c	/^static struct wpa_ssid * wpas_wps_add_network(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_add_nfc_password_token	wps_supplicant.c	/^static int wpas_wps_add_nfc_password_token(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_ap_pin_disable	ap.c	/^void wpas_wps_ap_pin_disable(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_ap_pin_enable	ap.c	/^static void wpas_wps_ap_pin_enable(struct wpa_supplicant *wpa_s, int timeout)$/;"	f	file:
wpas_wps_ap_pin_get	ap.c	/^const char * wpas_wps_ap_pin_get(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_ap_pin_random	ap.c	/^const char * wpas_wps_ap_pin_random(struct wpa_supplicant *wpa_s, int timeout)$/;"	f
wpas_wps_ap_pin_set	ap.c	/^int wpas_wps_ap_pin_set(struct wpa_supplicant *wpa_s, const char *pin,$/;"	f
wpas_wps_ap_pin_timeout	ap.c	/^static void wpas_wps_ap_pin_timeout(void *eloop_data, void *user_ctx)$/;"	f	file:
wpas_wps_assoc_with_cred	wps_supplicant.c	/^static void wpas_wps_assoc_with_cred(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_wps_assoc_with_cred_cancel	wps_supplicant.c	/^static void wpas_wps_assoc_with_cred_cancel(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_wps_cancel	wps_supplicant.c	/^int wpas_wps_cancel(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_clear_ap_info	wps_supplicant.c	/^static void wpas_wps_clear_ap_info(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_wps_clear_timeout	wps_supplicant.c	/^static void wpas_wps_clear_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_wps_deinit	wps_supplicant.c	/^void wpas_wps_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_deinit	wps_supplicant.h	/^static inline void wpas_wps_deinit(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_dump_ap_info	wps_supplicant.c	/^static void wpas_wps_dump_ap_info(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_wps_eapol_cb	wps_supplicant.c	/^int wpas_wps_eapol_cb(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_eapol_cb	wps_supplicant.h	/^static inline int wpas_wps_eapol_cb(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_er_add_pin	wps_supplicant.c	/^int wpas_wps_er_add_pin(struct wpa_supplicant *wpa_s, const u8 *addr,$/;"	f
wpas_wps_er_config	wps_supplicant.c	/^int wpas_wps_er_config(struct wpa_supplicant *wpa_s, const char *uuid,$/;"	f
wpas_wps_er_learn	wps_supplicant.c	/^int wpas_wps_er_learn(struct wpa_supplicant *wpa_s, const char *uuid,$/;"	f
wpas_wps_er_nfc_config_token	wps_supplicant.c	/^struct wpabuf * wpas_wps_er_nfc_config_token(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_er_nfc_handover_sel	wps_supplicant.c	/^wpas_wps_er_nfc_handover_sel(struct wpa_supplicant *wpa_s, int ndef,$/;"	f	file:
wpas_wps_er_pbc	wps_supplicant.c	/^int wpas_wps_er_pbc(struct wpa_supplicant *wpa_s, const char *uuid)$/;"	f
wpas_wps_er_set_config	wps_supplicant.c	/^int wpas_wps_er_set_config(struct wpa_supplicant *wpa_s, const char *uuid,$/;"	f
wpas_wps_er_start	wps_supplicant.c	/^int wpas_wps_er_start(struct wpa_supplicant *wpa_s, const char *filter)$/;"	f
wpas_wps_er_stop	wps_supplicant.c	/^void wpas_wps_er_stop(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_get_ap_info	wps_supplicant.c	/^static struct wps_ap_info * wpas_wps_get_ap_info(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_get_req_type	wps_supplicant.c	/^enum wps_request_type wpas_wps_get_req_type(struct wpa_ssid *ssid)$/;"	f
wpas_wps_get_req_type	wps_supplicant.h	/^static inline u8 wpas_wps_get_req_type(struct wpa_ssid *ssid)$/;"	f
wpas_wps_in_use	scan.c	/^static int wpas_wps_in_use(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_init	wps_supplicant.c	/^int wpas_wps_init(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_init	wps_supplicant.h	/^static inline int wpas_wps_init(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_network_config_token	wps_supplicant.c	/^wpas_wps_network_config_token(struct wpa_supplicant *wpa_s, int ndef,$/;"	f	file:
wpas_wps_network_to_cred	wps_supplicant.c	/^static int wpas_wps_network_to_cred(struct wpa_ssid *ssid,$/;"	f	file:
wpas_wps_new_psk_cb	wps_supplicant.c	/^static int wpas_wps_new_psk_cb(void *ctx, const u8 *mac_addr,$/;"	f	file:
wpas_wps_nfc_clear	wps_supplicant.c	/^static void wpas_wps_nfc_clear(struct wps_context *wps)$/;"	f	file:
wpas_wps_nfc_config_token	wps_supplicant.c	/^struct wpabuf * wpas_wps_nfc_config_token(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_nfc_handover_req	wps_supplicant.c	/^struct wpabuf * wpas_wps_nfc_handover_req(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_nfc_handover_sel	wps_supplicant.c	/^struct wpabuf * wpas_wps_nfc_handover_sel(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_nfc_report_handover	wps_supplicant.c	/^int wpas_wps_nfc_report_handover(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_nfc_rx_handover_sel	wps_supplicant.c	/^static int wpas_wps_nfc_rx_handover_sel(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_nfc_tag_process	wps_supplicant.c	/^static int wpas_wps_nfc_tag_process(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_nfc_tag_read	wps_supplicant.c	/^int wpas_wps_nfc_tag_read(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_nfc_token	wps_supplicant.c	/^struct wpabuf * wpas_wps_nfc_token(struct wpa_supplicant *wpa_s, int ndef)$/;"	f
wpas_wps_notify_assoc	wps_supplicant.c	/^void wpas_wps_notify_assoc(struct wpa_supplicant *wpa_s, const u8 *bssid)$/;"	f
wpas_wps_notify_assoc	wps_supplicant.h	/^static inline void wpas_wps_notify_assoc(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_notify_scan_results	wps_supplicant.c	/^void wpas_wps_notify_scan_results(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_notify_scan_results	wps_supplicant.h	/^static inline void wpas_wps_notify_scan_results(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_pin_needed_cb	wps_supplicant.c	/^static void wpas_wps_pin_needed_cb(void *ctx, const u8 *uuid_e,$/;"	f	file:
wpas_wps_reassoc	wps_supplicant.c	/^static void wpas_wps_reassoc(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_reenable_networks	wps_supplicant.c	/^static void wpas_wps_reenable_networks(struct wpa_supplicant *wpa_s)$/;"	f	file:
wpas_wps_reenable_networks_cb	wps_supplicant.c	/^static void wpas_wps_reenable_networks_cb(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_wps_remove_dup_network	wps_supplicant.c	/^static void wpas_wps_remove_dup_network(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_scan_pbc_overlap	wps_supplicant.c	/^int wpas_wps_scan_pbc_overlap(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_scan_pbc_overlap	wps_supplicant.h	/^static inline int wpas_wps_scan_pbc_overlap(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_scan_result_text	wps_supplicant.c	/^int wpas_wps_scan_result_text(const u8 *ies, size_t ies_len, char *buf,$/;"	f
wpas_wps_searching	wps_supplicant.c	/^int wpas_wps_searching(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_searching	wps_supplicant.h	/^static inline int wpas_wps_searching(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_security_workaround	wps_supplicant.c	/^static void wpas_wps_security_workaround(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_set_sel_reg_cb	wps_supplicant.c	/^static void wpas_wps_set_sel_reg_cb(void *ctx, int sel_reg, u16 dev_passwd_id,$/;"	f	file:
wpas_wps_set_uuid	wps_supplicant.c	/^static void wpas_wps_set_uuid(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_set_vendor_ext_m1	wps_supplicant.c	/^static void wpas_wps_set_vendor_ext_m1(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_ssid_bss_match	wps_supplicant.c	/^int wpas_wps_ssid_bss_match(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_ssid_bss_match	wps_supplicant.h	/^static inline int wpas_wps_ssid_bss_match(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_ssid_wildcard_ok	wps_supplicant.c	/^int wpas_wps_ssid_wildcard_ok(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_ssid_wildcard_ok	wps_supplicant.h	/^static inline int wpas_wps_ssid_wildcard_ok(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_start_dev_pw	wps_supplicant.c	/^static int wpas_wps_start_dev_pw(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_start_nfc	wps_supplicant.c	/^int wpas_wps_start_nfc(struct wpa_supplicant *wpa_s, const u8 *go_dev_addr,$/;"	f
wpas_wps_start_pbc	wps_supplicant.c	/^int wpas_wps_start_pbc(struct wpa_supplicant *wpa_s, const u8 *bssid,$/;"	f
wpas_wps_start_pin	wps_supplicant.c	/^int wpas_wps_start_pin(struct wpa_supplicant *wpa_s, const u8 *bssid,$/;"	f
wpas_wps_start_reg	wps_supplicant.c	/^int wpas_wps_start_reg(struct wpa_supplicant *wpa_s, const u8 *bssid,$/;"	f
wpas_wps_temp_disable	wps_supplicant.c	/^static void wpas_wps_temp_disable(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_terminate_cb	wps_supplicant.c	/^static void wpas_wps_terminate_cb(void *ctx)$/;"	f	file:
wpas_wps_terminate_pending	wps_supplicant.c	/^int wpas_wps_terminate_pending(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_timeout	wps_supplicant.c	/^static void wpas_wps_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:
wpas_wps_update_ap_info	wps_supplicant.c	/^void wpas_wps_update_ap_info(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_update_ap_info	wps_supplicant.h	/^static inline void wpas_wps_update_ap_info(struct wpa_supplicant *wpa_s,$/;"	f
wpas_wps_update_ap_info_bss	wps_supplicant.c	/^static void wpas_wps_update_ap_info_bss(struct wpa_supplicant *wpa_s,$/;"	f	file:
wpas_wps_update_config	wps_supplicant.c	/^void wpas_wps_update_config(struct wpa_supplicant *wpa_s)$/;"	f
wpas_wps_use_cred	wps_supplicant.c	/^static int wpas_wps_use_cred(struct wpa_supplicant *wpa_s,$/;"	f	file:
wps	wpa_supplicant_i.h	/^	struct wps_context *wps;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wps_context
wpsApPin	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::wpsApPin()$/;"	f	class:WpaGui
wpsApPinChanged	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::wpsApPinChanged(const QString &text)$/;"	f	class:WpaGui
wpsDialog	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::wpsDialog()$/;"	f	class:WpaGui
wpsEvent	examples/wpas-dbus-new-wps.py	/^def wpsEvent(name, args):$/;"	f
wpsGeneratePin	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::wpsGeneratePin()$/;"	f	class:WpaGui
wpsPbc	wpa_gui-qt4/wpagui.cpp	/^void WpaGui::wpsPbc()$/;"	f	class:WpaGui
wpsRunning	wpa_gui-qt4/wpagui.h	/^	bool wpsRunning;$/;"	m	class:WpaGui
wps_ap	wpa_supplicant_i.h	/^	struct wps_ap_info *wps_ap;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wps_ap_info
wps_ap_info	wpa_supplicant_i.h	/^struct wps_ap_info {$/;"	s
wps_ap_info_type	wpa_supplicant_i.h	/^	enum wps_ap_info_type {$/;"	g	struct:wps_ap_info
wps_ap_iter	wpa_supplicant_i.h	/^	int wps_ap_iter;$/;"	m	struct:wpa_supplicant
wps_cred_processing	config.h	/^	int wps_cred_processing;$/;"	m	struct:wpa_config
wps_er	wpa_supplicant_i.h	/^	struct wps_er *wps_er;$/;"	m	struct:wpa_supplicant	typeref:struct:wpa_supplicant::wps_er
wps_fix_config_methods	wps_supplicant.c	/^static u16 wps_fix_config_methods(u16 config_methods)$/;"	f	file:
wps_fragment_size	wpa_supplicant_i.h	/^	int wps_fragment_size;$/;"	m	struct:wpa_supplicant
wps_freq	wpa_supplicant_i.h	/^	unsigned int wps_freq;$/;"	m	struct:wpa_supplicant
wps_handover_init	examples/wps-nfc.py	/^def wps_handover_init(llc):$/;"	f
wps_method	examples/p2p/p2p_connect.py	/^	wps_method = None$/;"	v	class:P2P_Connect
wps_new_ap_settings	wps_supplicant.h	/^struct wps_new_ap_settings {$/;"	s
wps_nfc_dev_pw	config.h	/^	struct wpabuf *wps_nfc_dev_pw;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpabuf
wps_nfc_dev_pw_id	config.h	/^	int wps_nfc_dev_pw_id;$/;"	m	struct:wpa_config
wps_nfc_dh_privkey	config.h	/^	struct wpabuf *wps_nfc_dh_privkey;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpabuf
wps_nfc_dh_pubkey	config.h	/^	struct wpabuf *wps_nfc_dh_pubkey;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpabuf
wps_nfc_pw_from_config	config.h	/^	int wps_nfc_pw_from_config;$/;"	m	struct:wpa_config
wps_run	config_ssid.h	/^	unsigned int wps_run;$/;"	m	struct:wpa_ssid
wps_run	wpa_supplicant_i.h	/^	unsigned int wps_run;$/;"	m	struct:wpa_supplicant
wps_start_params	dbus/dbus_new_handlers_wps.c	/^struct wps_start_params {$/;"	s	file:
wps_success	wpa_supplicant_i.h	/^	int wps_success; \/* WPS success event received *\/$/;"	m	struct:wpa_supplicant
wps_tag_read	examples/wps-nfc.py	/^def wps_tag_read(tag, wait_remove=True):$/;"	f
wps_vendor_ext	config.h	/^	struct wpabuf *wps_vendor_ext[MAX_WPS_VENDOR_EXT];$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpabuf
wps_vendor_ext_m1	config.h	/^	struct wpabuf *wps_vendor_ext_m1;$/;"	m	struct:wpa_config	typeref:struct:wpa_config::wpabuf
wps_write_config_tag	examples/wps-nfc.py	/^def wps_write_config_tag(clf, id=None, wait_remove=True):$/;"	f
wps_write_er_config_tag	examples/wps-nfc.py	/^def wps_write_er_config_tag(clf, uuid, wait_remove=True):$/;"	f
wps_write_p2p_handover_sel	examples/p2p-nfc.py	/^def wps_write_p2p_handover_sel(clf, wait_remove=True):$/;"	f
wps_write_password_tag	examples/wps-nfc.py	/^def wps_write_password_tag(clf, wait_remove=True):$/;"	f
writeWepKey	wpa_gui-qt4/networkconfig.cpp	/^void NetworkConfig::writeWepKey(int network_id, QLineEdit *edit, int id)$/;"	f	class:NetworkConfig
write_auth_alg	config_file.c	/^static void write_auth_alg(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_auth_alg	config_winreg.c	/^static void write_auth_alg(HKEY hk, struct wpa_ssid *ssid)$/;"	f	file:
write_bssid	config_file.c	/^static void write_bssid(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_bssid	config_winreg.c	/^static void write_bssid(HKEY hk, struct wpa_ssid *ssid)$/;"	f	file:
write_cmd	wpa_cli.c	/^static int write_cmd(char *buf, size_t buflen, const char *cmd, int argc,$/;"	f	file:
write_eap	config_file.c	/^static void write_eap(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_eap	config_winreg.c	/^static void write_eap(HKEY hk, struct wpa_ssid *ssid)$/;"	f	file:
write_global_bin	config_file.c	/^static void write_global_bin(FILE *f, const char *field,$/;"	f	file:
write_go_p2p_dev_addr	config_file.c	/^static void write_go_p2p_dev_addr(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_group	config_file.c	/^static void write_group(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_group	config_winreg.c	/^static void write_group(HKEY hk, struct wpa_ssid *ssid)$/;"	f	file:
write_int	config_file.c	/^static void write_int(FILE *f, const char *field, int value, int def)$/;"	f	file:
write_int	config_winreg.c	/^static void write_int(HKEY hk, const char *field, int value, int def)$/;"	f	file:
write_key_mgmt	config_file.c	/^static void write_key_mgmt(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_key_mgmt	config_winreg.c	/^static void write_key_mgmt(HKEY hk, struct wpa_ssid *ssid)$/;"	f	file:
write_p2p_client_list	config_file.c	/^static void write_p2p_client_list(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_pairwise	config_file.c	/^static void write_pairwise(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_pairwise	config_winreg.c	/^static void write_pairwise(HKEY hk, struct wpa_ssid *ssid)$/;"	f	file:
write_pcap_header	utils/log2pcap.py	/^def write_pcap_header(pcap_file):$/;"	f
write_proto	config_file.c	/^static void write_proto(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_proto	config_winreg.c	/^static void write_proto(HKEY hk, struct wpa_ssid *ssid)$/;"	f	file:
write_psk	config_file.c	/^static void write_psk(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_psk	config_winreg.c	/^static void write_psk(HKEY hk, struct wpa_ssid *ssid)$/;"	f	file:
write_psk_list	config_file.c	/^static void write_psk_list(FILE *f, struct wpa_ssid *ssid)$/;"	f	file:
write_str	config_file.c	/^static void write_str(FILE *f, const char *field, struct wpa_ssid *ssid)$/;"	f	file:
write_str	config_winreg.c	/^static void write_str(HKEY hk, const char *field, struct wpa_ssid *ssid)$/;"	f	file:
write_wep_key	config_file.c	/^static void write_wep_key(FILE *f, int idx, struct wpa_ssid *ssid)$/;"	f	file:
write_wep_key	config_winreg.c	/^static void write_wep_key(HKEY hk, int idx, struct wpa_ssid *ssid)$/;"	f	file:
writer	config.c	/^	char * (*writer)(const struct parse_data *data, struct wpa_ssid *ssid);$/;"	m	struct:parse_data	file:
xml	dbus/dbus_new_introspect.c	/^	struct wpabuf *xml;$/;"	m	struct:interfaces	typeref:struct:interfaces::wpabuf	file:
~EventHistory	wpa_gui-qt4/eventhistory.cpp	/^EventHistory::~EventHistory()$/;"	f	class:EventHistory
~NetworkConfig	wpa_gui-qt4/networkconfig.cpp	/^NetworkConfig::~NetworkConfig()$/;"	f	class:NetworkConfig
~Peers	wpa_gui-qt4/peers.cpp	/^Peers::~Peers()$/;"	f	class:Peers
~ScanResults	wpa_gui-qt4/scanresults.cpp	/^ScanResults::~ScanResults()$/;"	f	class:ScanResults
~SignalBar	wpa_gui-qt4/signalbar.cpp	/^SignalBar::~SignalBar()$/;"	f	class:SignalBar
~UserDataRequest	wpa_gui-qt4/userdatarequest.cpp	/^UserDataRequest::~UserDataRequest()$/;"	f	class:UserDataRequest
~WpaGui	wpa_gui-qt4/wpagui.cpp	/^WpaGui::~WpaGui()$/;"	f	class:WpaGui
